/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * Модель информации о партнерски атрибута пользователя.
 */
@ApiModel(description = "Модель информации о партнерски атрибута пользователя.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class AttributePartnerInfoModel {
  @JsonProperty("partnerId")
  private UUID partnerId = null;

  @JsonProperty("attributeId")
  private Integer attributeId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("logicalName")
  private String logicalName = null;

  public AttributePartnerInfoModel partnerId(UUID partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Идентификатор партнера.
   * @return partnerId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор партнера.")
  public UUID getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(UUID partnerId) {
    this.partnerId = partnerId;
  }

  public AttributePartnerInfoModel attributeId(Integer attributeId) {
    this.attributeId = attributeId;
    return this;
  }

   /**
   * Идентификатор атрибута.
   * @return attributeId
  **/
  @ApiModelProperty(value = "Идентификатор атрибута.")
  public Integer getAttributeId() {
    return attributeId;
  }

  public void setAttributeId(Integer attributeId) {
    this.attributeId = attributeId;
  }

  public AttributePartnerInfoModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Наименование атрибута.
   * @return name
  **/
  @ApiModelProperty(value = "Наименование атрибута.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AttributePartnerInfoModel logicalName(String logicalName) {
    this.logicalName = logicalName;
    return this;
  }

   /**
   * Gets or sets the logical name.
   * @return logicalName
  **/
  @ApiModelProperty(value = "Gets or sets the logical name.")
  public String getLogicalName() {
    return logicalName;
  }

  public void setLogicalName(String logicalName) {
    this.logicalName = logicalName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttributePartnerInfoModel attributePartnerInfoModel = (AttributePartnerInfoModel) o;
    return Objects.equals(this.partnerId, attributePartnerInfoModel.partnerId) &&
        Objects.equals(this.attributeId, attributePartnerInfoModel.attributeId) &&
        Objects.equals(this.name, attributePartnerInfoModel.name) &&
        Objects.equals(this.logicalName, attributePartnerInfoModel.logicalName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partnerId, attributeId, name, logicalName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttributePartnerInfoModel {\n");
    
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    attributeId: ").append(toIndentedString(attributeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    logicalName: ").append(toIndentedString(logicalName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

