/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Базовый класс View-модели приложения.
 */
@ApiModel(description = "Базовый класс View-модели приложения.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class BaseApplicationModel {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("alias")
  private String alias = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("isDeleted")
  private Boolean isDeleted = null;

  @JsonProperty("redirects")
  private List<String> redirects = null;

  @JsonProperty("partnerId")
  private Integer partnerId = null;

  @JsonProperty("device")
  private DeviceBaseViewModel device = null;

  @JsonProperty("cssUri")
  private String cssUri = null;

  public BaseApplicationModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Название приложения.
   * @return name
  **/
  @ApiModelProperty(value = "Название приложения.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BaseApplicationModel alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Логический идентификатор приложения.
   * @return alias
  **/
  @ApiModelProperty(value = "Логический идентификатор приложения.")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public BaseApplicationModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание приложения.
   * @return description
  **/
  @ApiModelProperty(value = "Описание приложения.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BaseApplicationModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Удалено приложение или нет.
   * @return isDeleted
  **/
  @ApiModelProperty(value = "Удалено приложение или нет.")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public BaseApplicationModel redirects(List<String> redirects) {
    this.redirects = redirects;
    return this;
  }

  public BaseApplicationModel addRedirectsItem(String redirectsItem) {
    if (this.redirects == null) {
      this.redirects = new ArrayList<>();
    }
    this.redirects.add(redirectsItem);
    return this;
  }

   /**
   * Перечень разрешенных редиректов.
   * @return redirects
  **/
  @ApiModelProperty(value = "Перечень разрешенных редиректов.")
  public List<String> getRedirects() {
    return redirects;
  }

  public void setRedirects(List<String> redirects) {
    this.redirects = redirects;
  }

  public BaseApplicationModel partnerId(Integer partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Идентификатор партнера.
   * @return partnerId
  **/
  @ApiModelProperty(value = "Идентификатор партнера.")
  public Integer getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(Integer partnerId) {
    this.partnerId = partnerId;
  }

  public BaseApplicationModel device(DeviceBaseViewModel device) {
    this.device = device;
    return this;
  }

   /**
   * Идентификатор кассы.
   * @return device
  **/
  @ApiModelProperty(value = "Идентификатор кассы.")
  public DeviceBaseViewModel getDevice() {
    return device;
  }

  public void setDevice(DeviceBaseViewModel device) {
    this.device = device;
  }

  public BaseApplicationModel cssUri(String cssUri) {
    this.cssUri = cssUri;
    return this;
  }

   /**
   * Кастомизированные настройки CSS.
   * @return cssUri
  **/
  @ApiModelProperty(value = "Кастомизированные настройки CSS.")
  public String getCssUri() {
    return cssUri;
  }

  public void setCssUri(String cssUri) {
    this.cssUri = cssUri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseApplicationModel baseApplicationModel = (BaseApplicationModel) o;
    return Objects.equals(this.name, baseApplicationModel.name) &&
        Objects.equals(this.alias, baseApplicationModel.alias) &&
        Objects.equals(this.description, baseApplicationModel.description) &&
        Objects.equals(this.isDeleted, baseApplicationModel.isDeleted) &&
        Objects.equals(this.redirects, baseApplicationModel.redirects) &&
        Objects.equals(this.partnerId, baseApplicationModel.partnerId) &&
        Objects.equals(this.device, baseApplicationModel.device) &&
        Objects.equals(this.cssUri, baseApplicationModel.cssUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, alias, description, isDeleted, redirects, partnerId, device, cssUri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseApplicationModel {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    redirects: ").append(toIndentedString(redirects)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    cssUri: ").append(toIndentedString(cssUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

