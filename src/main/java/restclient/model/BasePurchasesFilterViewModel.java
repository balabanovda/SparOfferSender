/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель фильтра для получения коллекции покупок.
 */
@ApiModel(description = "Модель фильтра для получения коллекции покупок.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class BasePurchasesFilterViewModel {
  @JsonProperty("startChequeTime")
  private OffsetDateTime startChequeTime = null;

  @JsonProperty("lastChequeTime")
  private OffsetDateTime lastChequeTime = null;

  @JsonProperty("merchantIds")
  private List<Integer> merchantIds = null;

  @JsonProperty("loyaltyPrograms")
  private List<Integer> loyaltyPrograms = null;

  @JsonProperty("chequeNumber")
  private String chequeNumber = null;

  @JsonProperty("count")
  private Integer count = null;

  @JsonProperty("from")
  private Integer from = null;

  @JsonProperty("cardNumber")
  private String cardNumber = null;

  @JsonProperty("personId")
  private Integer personId = null;

  @JsonProperty("personIdentifier")
  private String personIdentifier = null;

  public BasePurchasesFilterViewModel startChequeTime(OffsetDateTime startChequeTime) {
    this.startChequeTime = startChequeTime;
    return this;
  }

   /**
   * Нижняя граница времени покупки.
   * @return startChequeTime
  **/
  @ApiModelProperty(value = "Нижняя граница времени покупки.")
  public OffsetDateTime getStartChequeTime() {
    return startChequeTime;
  }

  public void setStartChequeTime(OffsetDateTime startChequeTime) {
    this.startChequeTime = startChequeTime;
  }

  public BasePurchasesFilterViewModel lastChequeTime(OffsetDateTime lastChequeTime) {
    this.lastChequeTime = lastChequeTime;
    return this;
  }

   /**
   * Верхняя граница времени покупки.
   * @return lastChequeTime
  **/
  @ApiModelProperty(value = "Верхняя граница времени покупки.")
  public OffsetDateTime getLastChequeTime() {
    return lastChequeTime;
  }

  public void setLastChequeTime(OffsetDateTime lastChequeTime) {
    this.lastChequeTime = lastChequeTime;
  }

  public BasePurchasesFilterViewModel merchantIds(List<Integer> merchantIds) {
    this.merchantIds = merchantIds;
    return this;
  }

  public BasePurchasesFilterViewModel addMerchantIdsItem(Integer merchantIdsItem) {
    if (this.merchantIds == null) {
      this.merchantIds = new ArrayList<>();
    }
    this.merchantIds.add(merchantIdsItem);
    return this;
  }

   /**
   * Идентификатор магазина.
   * @return merchantIds
  **/
  @ApiModelProperty(value = "Идентификатор магазина.")
  public List<Integer> getMerchantIds() {
    return merchantIds;
  }

  public void setMerchantIds(List<Integer> merchantIds) {
    this.merchantIds = merchantIds;
  }

  public BasePurchasesFilterViewModel loyaltyPrograms(List<Integer> loyaltyPrograms) {
    this.loyaltyPrograms = loyaltyPrograms;
    return this;
  }

  public BasePurchasesFilterViewModel addLoyaltyProgramsItem(Integer loyaltyProgramsItem) {
    if (this.loyaltyPrograms == null) {
      this.loyaltyPrograms = new ArrayList<>();
    }
    this.loyaltyPrograms.add(loyaltyProgramsItem);
    return this;
  }

   /**
   * Идентификатор программ лояльности.
   * @return loyaltyPrograms
  **/
  @ApiModelProperty(value = "Идентификатор программ лояльности.")
  public List<Integer> getLoyaltyPrograms() {
    return loyaltyPrograms;
  }

  public void setLoyaltyPrograms(List<Integer> loyaltyPrograms) {
    this.loyaltyPrograms = loyaltyPrograms;
  }

  public BasePurchasesFilterViewModel chequeNumber(String chequeNumber) {
    this.chequeNumber = chequeNumber;
    return this;
  }

   /**
   * Номер чека.
   * @return chequeNumber
  **/
  @ApiModelProperty(value = "Номер чека.")
  public String getChequeNumber() {
    return chequeNumber;
  }

  public void setChequeNumber(String chequeNumber) {
    this.chequeNumber = chequeNumber;
  }

  public BasePurchasesFilterViewModel count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Количество.
   * @return count
  **/
  @ApiModelProperty(value = "Количество.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public BasePurchasesFilterViewModel from(Integer from) {
    this.from = from;
    return this;
  }

   /**
   * Начальная позиция в списке.
   * @return from
  **/
  @ApiModelProperty(value = "Начальная позиция в списке.")
  public Integer getFrom() {
    return from;
  }

  public void setFrom(Integer from) {
    this.from = from;
  }

  public BasePurchasesFilterViewModel cardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Номер карты.
   * @return cardNumber
  **/
  @ApiModelProperty(value = "Номер карты.")
  public String getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }

  public BasePurchasesFilterViewModel personId(Integer personId) {
    this.personId = personId;
    return this;
  }

   /**
   * Идентификатор пользователя.
   * @return personId
  **/
  @ApiModelProperty(value = "Идентификатор пользователя.")
  public Integer getPersonId() {
    return personId;
  }

  public void setPersonId(Integer personId) {
    this.personId = personId;
  }

  public BasePurchasesFilterViewModel personIdentifier(String personIdentifier) {
    this.personIdentifier = personIdentifier;
    return this;
  }

   /**
   * Идентификатор пользователя связанный с покупкой.
   * @return personIdentifier
  **/
  @ApiModelProperty(value = "Идентификатор пользователя связанный с покупкой.")
  public String getPersonIdentifier() {
    return personIdentifier;
  }

  public void setPersonIdentifier(String personIdentifier) {
    this.personIdentifier = personIdentifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BasePurchasesFilterViewModel basePurchasesFilterViewModel = (BasePurchasesFilterViewModel) o;
    return Objects.equals(this.startChequeTime, basePurchasesFilterViewModel.startChequeTime) &&
        Objects.equals(this.lastChequeTime, basePurchasesFilterViewModel.lastChequeTime) &&
        Objects.equals(this.merchantIds, basePurchasesFilterViewModel.merchantIds) &&
        Objects.equals(this.loyaltyPrograms, basePurchasesFilterViewModel.loyaltyPrograms) &&
        Objects.equals(this.chequeNumber, basePurchasesFilterViewModel.chequeNumber) &&
        Objects.equals(this.count, basePurchasesFilterViewModel.count) &&
        Objects.equals(this.from, basePurchasesFilterViewModel.from) &&
        Objects.equals(this.cardNumber, basePurchasesFilterViewModel.cardNumber) &&
        Objects.equals(this.personId, basePurchasesFilterViewModel.personId) &&
        Objects.equals(this.personIdentifier, basePurchasesFilterViewModel.personIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startChequeTime, lastChequeTime, merchantIds, loyaltyPrograms, chequeNumber, count, from, cardNumber, personId, personIdentifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BasePurchasesFilterViewModel {\n");
    
    sb.append("    startChequeTime: ").append(toIndentedString(startChequeTime)).append("\n");
    sb.append("    lastChequeTime: ").append(toIndentedString(lastChequeTime)).append("\n");
    sb.append("    merchantIds: ").append(toIndentedString(merchantIds)).append("\n");
    sb.append("    loyaltyPrograms: ").append(toIndentedString(loyaltyPrograms)).append("\n");
    sb.append("    chequeNumber: ").append(toIndentedString(chequeNumber)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    personIdentifier: ").append(toIndentedString(personIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

