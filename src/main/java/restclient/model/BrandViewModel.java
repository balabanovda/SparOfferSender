/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * Информация о бренде.
 */
@ApiModel(description = "Информация о бренде.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class BrandViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("guid")
  private UUID guid = null;

  @JsonProperty("order")
  private Integer order = null;

  /**
   * Состояние.
   */
  public enum StateEnum {
    HIDDEN("Hidden"),
    
    NORMAL("Normal");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("images")
  private List<ImageViewModel> images = null;

  public BrandViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public BrandViewModel guid(UUID guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Внешний идентификатор.
   * @return guid
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Внешний идентификатор.")
  public UUID getGuid() {
    return guid;
  }

  public void setGuid(UUID guid) {
    this.guid = guid;
  }

  public BrandViewModel order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Порядковый номер.
   * @return order
  **/
  @ApiModelProperty(value = "Порядковый номер.")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

  public BrandViewModel state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Состояние.
   * @return state
  **/
  @ApiModelProperty(value = "Состояние.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public BrandViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Название.
   * @return name
  **/
  @ApiModelProperty(value = "Название.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BrandViewModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание.
   * @return description
  **/
  @ApiModelProperty(value = "Описание.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BrandViewModel url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url.
   * @return url
  **/
  @ApiModelProperty(value = "Url.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public BrandViewModel images(List<ImageViewModel> images) {
    this.images = images;
    return this;
  }

  public BrandViewModel addImagesItem(ImageViewModel imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Изображения.
   * @return images
  **/
  @ApiModelProperty(value = "Изображения.")
  public List<ImageViewModel> getImages() {
    return images;
  }

  public void setImages(List<ImageViewModel> images) {
    this.images = images;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrandViewModel brandViewModel = (BrandViewModel) o;
    return Objects.equals(this.id, brandViewModel.id) &&
        Objects.equals(this.guid, brandViewModel.guid) &&
        Objects.equals(this.order, brandViewModel.order) &&
        Objects.equals(this.state, brandViewModel.state) &&
        Objects.equals(this.name, brandViewModel.name) &&
        Objects.equals(this.description, brandViewModel.description) &&
        Objects.equals(this.url, brandViewModel.url) &&
        Objects.equals(this.images, brandViewModel.images);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, guid, order, state, name, description, url, images);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrandViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

