/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Информация о карте.
 */
@ApiModel(description = "Информация о карте.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class CardInfo {
  @JsonProperty("cardCategory")
  private CardCategoryInfo cardCategory = null;

  @JsonProperty("cardOwnerInfo")
  private UserInfoBase cardOwnerInfo = null;

  @JsonProperty("id")
  private Integer id = null;

  /**
   * Статус.
   */
  public enum StateEnum {
    EMITTED("Emitted"),
    
    PACKED("Packed"),
    
    ACTIVATED("Activated"),
    
    REPLACED("Replaced"),
    
    CREATING("Creating"),
    
    CREATED("Created"),
    
    PREPARED("Prepared"),
    
    ISSUED("Issued");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("number")
  private String number = null;

  @JsonProperty("barCode")
  private String barCode = null;

  @JsonProperty("block")
  private Boolean block = null;

  @JsonProperty("accumulated")
  private MoneyViewModel accumulated = null;

  @JsonProperty("paid")
  private MoneyViewModel paid = null;

  @JsonProperty("accumulatedInfo")
  private List<MoneyViewModel> accumulatedInfo = null;

  @JsonProperty("paidInfo")
  private List<MoneyViewModel> paidInfo = null;

  @JsonProperty("cardActionAccessInfo")
  private CardActionAccessInfo cardActionAccessInfo = null;

  public CardInfo cardCategory(CardCategoryInfo cardCategory) {
    this.cardCategory = cardCategory;
    return this;
  }

   /**
   * Информация о категории карты.
   * @return cardCategory
  **/
  @ApiModelProperty(value = "Информация о категории карты.")
  public CardCategoryInfo getCardCategory() {
    return cardCategory;
  }

  public void setCardCategory(CardCategoryInfo cardCategory) {
    this.cardCategory = cardCategory;
  }

  public CardInfo cardOwnerInfo(UserInfoBase cardOwnerInfo) {
    this.cardOwnerInfo = cardOwnerInfo;
    return this;
  }

   /**
   * Информация о владельце карты.
   * @return cardOwnerInfo
  **/
  @ApiModelProperty(value = "Информация о владельце карты.")
  public UserInfoBase getCardOwnerInfo() {
    return cardOwnerInfo;
  }

  public void setCardOwnerInfo(UserInfoBase cardOwnerInfo) {
    this.cardOwnerInfo = cardOwnerInfo;
  }

  public CardInfo id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Ифентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Ифентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CardInfo state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Статус.
   * @return state
  **/
  @ApiModelProperty(value = "Статус.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public CardInfo number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Номер карты.
   * @return number
  **/
  @ApiModelProperty(value = "Номер карты.")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public CardInfo barCode(String barCode) {
    this.barCode = barCode;
    return this;
  }

   /**
   * Баркод.
   * @return barCode
  **/
  @ApiModelProperty(value = "Баркод.")
  public String getBarCode() {
    return barCode;
  }

  public void setBarCode(String barCode) {
    this.barCode = barCode;
  }

  public CardInfo block(Boolean block) {
    this.block = block;
    return this;
  }

   /**
   * Заблокирована или нет.
   * @return block
  **/
  @ApiModelProperty(value = "Заблокирована или нет.")
  public Boolean isBlock() {
    return block;
  }

  public void setBlock(Boolean block) {
    this.block = block;
  }

  public CardInfo accumulated(MoneyViewModel accumulated) {
    this.accumulated = accumulated;
    return this;
  }

   /**
   * Получено.
   * @return accumulated
  **/
  @ApiModelProperty(value = "Получено.")
  public MoneyViewModel getAccumulated() {
    return accumulated;
  }

  public void setAccumulated(MoneyViewModel accumulated) {
    this.accumulated = accumulated;
  }

  public CardInfo paid(MoneyViewModel paid) {
    this.paid = paid;
    return this;
  }

   /**
   * Потрачено.
   * @return paid
  **/
  @ApiModelProperty(value = "Потрачено.")
  public MoneyViewModel getPaid() {
    return paid;
  }

  public void setPaid(MoneyViewModel paid) {
    this.paid = paid;
  }

  public CardInfo accumulatedInfo(List<MoneyViewModel> accumulatedInfo) {
    this.accumulatedInfo = accumulatedInfo;
    return this;
  }

  public CardInfo addAccumulatedInfoItem(MoneyViewModel accumulatedInfoItem) {
    if (this.accumulatedInfo == null) {
      this.accumulatedInfo = new ArrayList<>();
    }
    this.accumulatedInfo.add(accumulatedInfoItem);
    return this;
  }

   /**
   * Информация о полученных средствах.
   * @return accumulatedInfo
  **/
  @ApiModelProperty(value = "Информация о полученных средствах.")
  public List<MoneyViewModel> getAccumulatedInfo() {
    return accumulatedInfo;
  }

  public void setAccumulatedInfo(List<MoneyViewModel> accumulatedInfo) {
    this.accumulatedInfo = accumulatedInfo;
  }

  public CardInfo paidInfo(List<MoneyViewModel> paidInfo) {
    this.paidInfo = paidInfo;
    return this;
  }

  public CardInfo addPaidInfoItem(MoneyViewModel paidInfoItem) {
    if (this.paidInfo == null) {
      this.paidInfo = new ArrayList<>();
    }
    this.paidInfo.add(paidInfoItem);
    return this;
  }

   /**
   * Информация о потраченных средствах.
   * @return paidInfo
  **/
  @ApiModelProperty(value = "Информация о потраченных средствах.")
  public List<MoneyViewModel> getPaidInfo() {
    return paidInfo;
  }

  public void setPaidInfo(List<MoneyViewModel> paidInfo) {
    this.paidInfo = paidInfo;
  }

  public CardInfo cardActionAccessInfo(CardActionAccessInfo cardActionAccessInfo) {
    this.cardActionAccessInfo = cardActionAccessInfo;
    return this;
  }

   /**
   * Информация о возможности выполнять действия с картой.
   * @return cardActionAccessInfo
  **/
  @ApiModelProperty(value = "Информация о возможности выполнять действия с картой.")
  public CardActionAccessInfo getCardActionAccessInfo() {
    return cardActionAccessInfo;
  }

  public void setCardActionAccessInfo(CardActionAccessInfo cardActionAccessInfo) {
    this.cardActionAccessInfo = cardActionAccessInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardInfo cardInfo = (CardInfo) o;
    return Objects.equals(this.cardCategory, cardInfo.cardCategory) &&
        Objects.equals(this.cardOwnerInfo, cardInfo.cardOwnerInfo) &&
        Objects.equals(this.id, cardInfo.id) &&
        Objects.equals(this.state, cardInfo.state) &&
        Objects.equals(this.number, cardInfo.number) &&
        Objects.equals(this.barCode, cardInfo.barCode) &&
        Objects.equals(this.block, cardInfo.block) &&
        Objects.equals(this.accumulated, cardInfo.accumulated) &&
        Objects.equals(this.paid, cardInfo.paid) &&
        Objects.equals(this.accumulatedInfo, cardInfo.accumulatedInfo) &&
        Objects.equals(this.paidInfo, cardInfo.paidInfo) &&
        Objects.equals(this.cardActionAccessInfo, cardInfo.cardActionAccessInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardCategory, cardOwnerInfo, id, state, number, barCode, block, accumulated, paid, accumulatedInfo, paidInfo, cardActionAccessInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardInfo {\n");
    
    sb.append("    cardCategory: ").append(toIndentedString(cardCategory)).append("\n");
    sb.append("    cardOwnerInfo: ").append(toIndentedString(cardOwnerInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    barCode: ").append(toIndentedString(barCode)).append("\n");
    sb.append("    block: ").append(toIndentedString(block)).append("\n");
    sb.append("    accumulated: ").append(toIndentedString(accumulated)).append("\n");
    sb.append("    paid: ").append(toIndentedString(paid)).append("\n");
    sb.append("    accumulatedInfo: ").append(toIndentedString(accumulatedInfo)).append("\n");
    sb.append("    paidInfo: ").append(toIndentedString(paidInfo)).append("\n");
    sb.append("    cardActionAccessInfo: ").append(toIndentedString(cardActionAccessInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

