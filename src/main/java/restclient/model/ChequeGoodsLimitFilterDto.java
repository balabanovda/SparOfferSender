/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Фильтр \&quot;Ограничение количества товара\&quot;.
 */
@ApiModel(description = "Фильтр \"Ограничение количества товара\".")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ChequeGoodsLimitFilterDto {
  @JsonProperty("goodsGroups")
  private List<BaseGoodsGroupDto> goodsGroups = null;

  @JsonProperty("personalOfferAttributeLogicalName")
  private String personalOfferAttributeLogicalName = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Период ограничения.
   */
  public enum PeriodEnum {
    DAY("Day"),
    
    WEEK("Week"),
    
    UNLIMITED("Unlimited");

    private String value;

    PeriodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PeriodEnum fromValue(String text) {
      for (PeriodEnum b : PeriodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("period")
  private PeriodEnum period = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  public ChequeGoodsLimitFilterDto goodsGroups(List<BaseGoodsGroupDto> goodsGroups) {
    this.goodsGroups = goodsGroups;
    return this;
  }

  public ChequeGoodsLimitFilterDto addGoodsGroupsItem(BaseGoodsGroupDto goodsGroupsItem) {
    if (this.goodsGroups == null) {
      this.goodsGroups = new ArrayList<>();
    }
    this.goodsGroups.add(goodsGroupsItem);
    return this;
  }

   /**
   * Группы товаров.
   * @return goodsGroups
  **/
  @ApiModelProperty(value = "Группы товаров.")
  public List<BaseGoodsGroupDto> getGoodsGroups() {
    return goodsGroups;
  }

  public void setGoodsGroups(List<BaseGoodsGroupDto> goodsGroups) {
    this.goodsGroups = goodsGroups;
  }

  public ChequeGoodsLimitFilterDto personalOfferAttributeLogicalName(String personalOfferAttributeLogicalName) {
    this.personalOfferAttributeLogicalName = personalOfferAttributeLogicalName;
    return this;
  }

   /**
   * Логическое имя атрибута \&quot;Персональное предложение\&quot;.
   * @return personalOfferAttributeLogicalName
  **/
  @ApiModelProperty(value = "Логическое имя атрибута \"Персональное предложение\".")
  public String getPersonalOfferAttributeLogicalName() {
    return personalOfferAttributeLogicalName;
  }

  public void setPersonalOfferAttributeLogicalName(String personalOfferAttributeLogicalName) {
    this.personalOfferAttributeLogicalName = personalOfferAttributeLogicalName;
  }

  public ChequeGoodsLimitFilterDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Имя фильтра.
   * @return name
  **/
  @ApiModelProperty(value = "Имя фильтра.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChequeGoodsLimitFilterDto period(PeriodEnum period) {
    this.period = period;
    return this;
  }

   /**
   * Период ограничения.
   * @return period
  **/
  @ApiModelProperty(value = "Период ограничения.")
  public PeriodEnum getPeriod() {
    return period;
  }

  public void setPeriod(PeriodEnum period) {
    this.period = period;
  }

  public ChequeGoodsLimitFilterDto quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Количество товара, которое можно приобрести за период.
   * @return quantity
  **/
  @ApiModelProperty(value = "Количество товара, которое можно приобрести за период.")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChequeGoodsLimitFilterDto chequeGoodsLimitFilterDto = (ChequeGoodsLimitFilterDto) o;
    return Objects.equals(this.goodsGroups, chequeGoodsLimitFilterDto.goodsGroups) &&
        Objects.equals(this.personalOfferAttributeLogicalName, chequeGoodsLimitFilterDto.personalOfferAttributeLogicalName) &&
        Objects.equals(this.name, chequeGoodsLimitFilterDto.name) &&
        Objects.equals(this.period, chequeGoodsLimitFilterDto.period) &&
        Objects.equals(this.quantity, chequeGoodsLimitFilterDto.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(goodsGroups, personalOfferAttributeLogicalName, name, period, quantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChequeGoodsLimitFilterDto {\n");
    
    sb.append("    goodsGroups: ").append(toIndentedString(goodsGroups)).append("\n");
    sb.append("    personalOfferAttributeLogicalName: ").append(toIndentedString(personalOfferAttributeLogicalName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

