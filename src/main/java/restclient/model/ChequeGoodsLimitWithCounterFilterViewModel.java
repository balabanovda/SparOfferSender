/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * ViewModel для фильтра \&quot;Ограничение на товар\&quot;.
 */
@ApiModel(description = "ViewModel для фильтра \"Ограничение на товар\".")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ChequeGoodsLimitWithCounterFilterViewModel {
  @JsonProperty("goodsGroups")
  private List<GoodsGroupViewModel> goodsGroups = null;

  @JsonProperty("personalOfferAttributeId")
  private Integer personalOfferAttributeId = null;

  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("isDeletedFilterType")
  private Boolean isDeletedFilterType = null;

  /**
   * Тип фильтрации.
   */
  public enum TypeEnum {
    ONLYGOODS("OnlyGoods"),
    
    GOODSQUANTITY("GoodsQuantity"),
    
    GOODSAMOUNT("GoodsAmount");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * Операция для фильтра.
   */
  public enum OperationEnum {
    MORE("More"),
    
    LESS("Less"),
    
    EQUALS("Equals"),
    
    BETWEEN("Between"),
    
    MOREOREQUAL("MoreOrEqual"),
    
    LESSOREQUAL("LessOrEqual"),
    
    BETWEENLESSEQUAL("BetweenLessEqual"),
    
    BETWEENMOREEQUAL("BetweenMoreEqual"),
    
    BETWEENEQUAL("BetweenEqual"),
    
    EACH("Each");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("value")
  private Double value = null;

  @JsonProperty("counterId")
  private Integer counterId = null;

  public ChequeGoodsLimitWithCounterFilterViewModel goodsGroups(List<GoodsGroupViewModel> goodsGroups) {
    this.goodsGroups = goodsGroups;
    return this;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel addGoodsGroupsItem(GoodsGroupViewModel goodsGroupsItem) {
    if (this.goodsGroups == null) {
      this.goodsGroups = new ArrayList<>();
    }
    this.goodsGroups.add(goodsGroupsItem);
    return this;
  }

   /**
   * Список выбранных групп товаров.
   * @return goodsGroups
  **/
  @ApiModelProperty(value = "Список выбранных групп товаров.")
  public List<GoodsGroupViewModel> getGoodsGroups() {
    return goodsGroups;
  }

  public void setGoodsGroups(List<GoodsGroupViewModel> goodsGroups) {
    this.goodsGroups = goodsGroups;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel personalOfferAttributeId(Integer personalOfferAttributeId) {
    this.personalOfferAttributeId = personalOfferAttributeId;
    return this;
  }

   /**
   * Идентификатор атрибута \&quot;Персональное предложение\&quot;.
   * @return personalOfferAttributeId
  **/
  @ApiModelProperty(value = "Идентификатор атрибута \"Персональное предложение\".")
  public Integer getPersonalOfferAttributeId() {
    return personalOfferAttributeId;
  }

  public void setPersonalOfferAttributeId(Integer personalOfferAttributeId) {
    this.personalOfferAttributeId = personalOfferAttributeId;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel isDeletedFilterType(Boolean isDeletedFilterType) {
    this.isDeletedFilterType = isDeletedFilterType;
    return this;
  }

   /**
   * Get isDeletedFilterType
   * @return isDeletedFilterType
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDeletedFilterType() {
    return isDeletedFilterType;
  }

  public void setIsDeletedFilterType(Boolean isDeletedFilterType) {
    this.isDeletedFilterType = isDeletedFilterType;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Тип фильтрации.
   * @return type
  **/
  @ApiModelProperty(value = "Тип фильтрации.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Операция для фильтра.
   * @return operation
  **/
  @ApiModelProperty(value = "Операция для фильтра.")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel value(Double value) {
    this.value = value;
    return this;
  }

   /**
   * Значение для операции.
   * @return value
  **/
  @ApiModelProperty(value = "Значение для операции.")
  public Double getValue() {
    return value;
  }

  public void setValue(Double value) {
    this.value = value;
  }

  public ChequeGoodsLimitWithCounterFilterViewModel counterId(Integer counterId) {
    this.counterId = counterId;
    return this;
  }

   /**
   * Идентификатор счетчика.
   * @return counterId
  **/
  @ApiModelProperty(value = "Идентификатор счетчика.")
  public Integer getCounterId() {
    return counterId;
  }

  public void setCounterId(Integer counterId) {
    this.counterId = counterId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChequeGoodsLimitWithCounterFilterViewModel chequeGoodsLimitWithCounterFilterViewModel = (ChequeGoodsLimitWithCounterFilterViewModel) o;
    return Objects.equals(this.goodsGroups, chequeGoodsLimitWithCounterFilterViewModel.goodsGroups) &&
        Objects.equals(this.personalOfferAttributeId, chequeGoodsLimitWithCounterFilterViewModel.personalOfferAttributeId) &&
        Objects.equals(this.id, chequeGoodsLimitWithCounterFilterViewModel.id) &&
        Objects.equals(this.name, chequeGoodsLimitWithCounterFilterViewModel.name) &&
        Objects.equals(this.isDeletedFilterType, chequeGoodsLimitWithCounterFilterViewModel.isDeletedFilterType) &&
        Objects.equals(this.type, chequeGoodsLimitWithCounterFilterViewModel.type) &&
        Objects.equals(this.operation, chequeGoodsLimitWithCounterFilterViewModel.operation) &&
        Objects.equals(this.value, chequeGoodsLimitWithCounterFilterViewModel.value) &&
        Objects.equals(this.counterId, chequeGoodsLimitWithCounterFilterViewModel.counterId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(goodsGroups, personalOfferAttributeId, id, name, isDeletedFilterType, type, operation, value, counterId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChequeGoodsLimitWithCounterFilterViewModel {\n");
    
    sb.append("    goodsGroups: ").append(toIndentedString(goodsGroups)).append("\n");
    sb.append("    personalOfferAttributeId: ").append(toIndentedString(personalOfferAttributeId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isDeletedFilterType: ").append(toIndentedString(isDeletedFilterType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    counterId: ").append(toIndentedString(counterId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

