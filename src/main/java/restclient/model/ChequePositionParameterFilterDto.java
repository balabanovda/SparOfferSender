/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Фильтр \&quot;Дополнительная информация по чековой позиции\&quot;.
 */
@ApiModel(description = "Фильтр \"Дополнительная информация по чековой позиции\".")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ChequePositionParameterFilterDto {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("parameterName")
  private String parameterName = null;

  @JsonProperty("expectedValues")
  private List<String> expectedValues = null;

  @JsonProperty("isNegative")
  private Boolean isNegative = null;

  public ChequePositionParameterFilterDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Имя фильтра.
   * @return name
  **/
  @ApiModelProperty(value = "Имя фильтра.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChequePositionParameterFilterDto parameterName(String parameterName) {
    this.parameterName = parameterName;
    return this;
  }

   /**
   * Имя параметра.
   * @return parameterName
  **/
  @ApiModelProperty(value = "Имя параметра.")
  public String getParameterName() {
    return parameterName;
  }

  public void setParameterName(String parameterName) {
    this.parameterName = parameterName;
  }

  public ChequePositionParameterFilterDto expectedValues(List<String> expectedValues) {
    this.expectedValues = expectedValues;
    return this;
  }

  public ChequePositionParameterFilterDto addExpectedValuesItem(String expectedValuesItem) {
    if (this.expectedValues == null) {
      this.expectedValues = new ArrayList<>();
    }
    this.expectedValues.add(expectedValuesItem);
    return this;
  }

   /**
   * Ожидаемые значения параметра.
   * @return expectedValues
  **/
  @ApiModelProperty(value = "Ожидаемые значения параметра.")
  public List<String> getExpectedValues() {
    return expectedValues;
  }

  public void setExpectedValues(List<String> expectedValues) {
    this.expectedValues = expectedValues;
  }

  public ChequePositionParameterFilterDto isNegative(Boolean isNegative) {
    this.isNegative = isNegative;
    return this;
  }

   /**
   * Отрицание (значение параметра не должно быть среди ожидаемых).
   * @return isNegative
  **/
  @ApiModelProperty(value = "Отрицание (значение параметра не должно быть среди ожидаемых).")
  public Boolean isIsNegative() {
    return isNegative;
  }

  public void setIsNegative(Boolean isNegative) {
    this.isNegative = isNegative;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChequePositionParameterFilterDto chequePositionParameterFilterDto = (ChequePositionParameterFilterDto) o;
    return Objects.equals(this.name, chequePositionParameterFilterDto.name) &&
        Objects.equals(this.parameterName, chequePositionParameterFilterDto.parameterName) &&
        Objects.equals(this.expectedValues, chequePositionParameterFilterDto.expectedValues) &&
        Objects.equals(this.isNegative, chequePositionParameterFilterDto.isNegative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, parameterName, expectedValues, isNegative);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChequePositionParameterFilterDto {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameterName: ").append(toIndentedString(parameterName)).append("\n");
    sb.append("    expectedValues: ").append(toIndentedString(expectedValues)).append("\n");
    sb.append("    isNegative: ").append(toIndentedString(isNegative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

