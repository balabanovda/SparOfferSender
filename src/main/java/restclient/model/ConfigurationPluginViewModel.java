/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * Информация о плагине.
 */
@ApiModel(description = "Информация о плагине.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ConfigurationPluginViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("plugin")
  private String plugin = null;

  @JsonProperty("version")
  private String version = null;

  @JsonProperty("deployId")
  private UUID deployId = null;

  public ConfigurationPluginViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор плагина.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор плагина.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ConfigurationPluginViewModel plugin(String plugin) {
    this.plugin = plugin;
    return this;
  }

   /**
   * Название плагина.
   * @return plugin
  **/
  @ApiModelProperty(value = "Название плагина.")
  public String getPlugin() {
    return plugin;
  }

  public void setPlugin(String plugin) {
    this.plugin = plugin;
  }

  public ConfigurationPluginViewModel version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Версия плагина.
   * @return version
  **/
  @ApiModelProperty(value = "Версия плагина.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ConfigurationPluginViewModel deployId(UUID deployId) {
    this.deployId = deployId;
    return this;
  }

   /**
   * Идентификатор деплоя, в котором используется плагин.
   * @return deployId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор деплоя, в котором используется плагин.")
  public UUID getDeployId() {
    return deployId;
  }

  public void setDeployId(UUID deployId) {
    this.deployId = deployId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationPluginViewModel configurationPluginViewModel = (ConfigurationPluginViewModel) o;
    return Objects.equals(this.id, configurationPluginViewModel.id) &&
        Objects.equals(this.plugin, configurationPluginViewModel.plugin) &&
        Objects.equals(this.version, configurationPluginViewModel.version) &&
        Objects.equals(this.deployId, configurationPluginViewModel.deployId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, plugin, version, deployId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationPluginViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    plugin: ").append(toIndentedString(plugin)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    deployId: ").append(toIndentedString(deployId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

