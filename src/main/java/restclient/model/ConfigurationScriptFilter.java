/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * Фильтр для скриптов.
 */
@ApiModel(description = "Фильтр для скриптов.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ConfigurationScriptFilter {
  @JsonProperty("fromDate")
  private OffsetDateTime fromDate = null;

  @JsonProperty("toDate")
  private OffsetDateTime toDate = null;

  @JsonProperty("idSubstring")
  private String idSubstring = null;

  @JsonProperty("descriptionSubstring")
  private String descriptionSubstring = null;

  @JsonProperty("configDeployId")
  private UUID configDeployId = null;

  @JsonProperty("name")
  private String name = null;

  public ConfigurationScriptFilter fromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Дата С.
   * @return fromDate
  **/
  @ApiModelProperty(value = "Дата С.")
  public OffsetDateTime getFromDate() {
    return fromDate;
  }

  public void setFromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
  }

  public ConfigurationScriptFilter toDate(OffsetDateTime toDate) {
    this.toDate = toDate;
    return this;
  }

   /**
   * Дата По.
   * @return toDate
  **/
  @ApiModelProperty(value = "Дата По.")
  public OffsetDateTime getToDate() {
    return toDate;
  }

  public void setToDate(OffsetDateTime toDate) {
    this.toDate = toDate;
  }

  public ConfigurationScriptFilter idSubstring(String idSubstring) {
    this.idSubstring = idSubstring;
    return this;
  }

   /**
   * Подстрока для поиска по идентификатору.
   * @return idSubstring
  **/
  @ApiModelProperty(value = "Подстрока для поиска по идентификатору.")
  public String getIdSubstring() {
    return idSubstring;
  }

  public void setIdSubstring(String idSubstring) {
    this.idSubstring = idSubstring;
  }

  public ConfigurationScriptFilter descriptionSubstring(String descriptionSubstring) {
    this.descriptionSubstring = descriptionSubstring;
    return this;
  }

   /**
   * Подстрока для поиска по описание.
   * @return descriptionSubstring
  **/
  @ApiModelProperty(value = "Подстрока для поиска по описание.")
  public String getDescriptionSubstring() {
    return descriptionSubstring;
  }

  public void setDescriptionSubstring(String descriptionSubstring) {
    this.descriptionSubstring = descriptionSubstring;
  }

  public ConfigurationScriptFilter configDeployId(UUID configDeployId) {
    this.configDeployId = configDeployId;
    return this;
  }

   /**
   * Идентификатор деплоя.
   * @return configDeployId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор деплоя.")
  public UUID getConfigDeployId() {
    return configDeployId;
  }

  public void setConfigDeployId(UUID configDeployId) {
    this.configDeployId = configDeployId;
  }

  public ConfigurationScriptFilter name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Наименование БД.
   * @return name
  **/
  @ApiModelProperty(value = "Наименование БД.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationScriptFilter configurationScriptFilter = (ConfigurationScriptFilter) o;
    return Objects.equals(this.fromDate, configurationScriptFilter.fromDate) &&
        Objects.equals(this.toDate, configurationScriptFilter.toDate) &&
        Objects.equals(this.idSubstring, configurationScriptFilter.idSubstring) &&
        Objects.equals(this.descriptionSubstring, configurationScriptFilter.descriptionSubstring) &&
        Objects.equals(this.configDeployId, configurationScriptFilter.configDeployId) &&
        Objects.equals(this.name, configurationScriptFilter.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromDate, toDate, idSubstring, descriptionSubstring, configDeployId, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationScriptFilter {\n");
    
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    idSubstring: ").append(toIndentedString(idSubstring)).append("\n");
    sb.append("    descriptionSubstring: ").append(toIndentedString(descriptionSubstring)).append("\n");
    sb.append("    configDeployId: ").append(toIndentedString(configDeployId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

