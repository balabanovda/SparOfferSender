/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * Информация о скрипте.
 */
@ApiModel(description = "Информация о скрипте.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ConfigurationScriptViewModel {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("executionDate")
  private OffsetDateTime executionDate = null;

  @JsonProperty("configDeployId")
  private UUID configDeployId = null;

  @JsonProperty("duration")
  private Integer duration = null;

  public ConfigurationScriptViewModel id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор скрипта.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор скрипта.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ConfigurationScriptViewModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание скрипта.
   * @return description
  **/
  @ApiModelProperty(value = "Описание скрипта.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConfigurationScriptViewModel executionDate(OffsetDateTime executionDate) {
    this.executionDate = executionDate;
    return this;
  }

   /**
   * Дата исполнения скрипта.
   * @return executionDate
  **/
  @ApiModelProperty(value = "Дата исполнения скрипта.")
  public OffsetDateTime getExecutionDate() {
    return executionDate;
  }

  public void setExecutionDate(OffsetDateTime executionDate) {
    this.executionDate = executionDate;
  }

  public ConfigurationScriptViewModel configDeployId(UUID configDeployId) {
    this.configDeployId = configDeployId;
    return this;
  }

   /**
   * Идентификатор деплоя, в котором выполнился скрипт.
   * @return configDeployId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор деплоя, в котором выполнился скрипт.")
  public UUID getConfigDeployId() {
    return configDeployId;
  }

  public void setConfigDeployId(UUID configDeployId) {
    this.configDeployId = configDeployId;
  }

  public ConfigurationScriptViewModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Время выполнения в мс.
   * @return duration
  **/
  @ApiModelProperty(value = "Время выполнения в мс.")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationScriptViewModel configurationScriptViewModel = (ConfigurationScriptViewModel) o;
    return Objects.equals(this.id, configurationScriptViewModel.id) &&
        Objects.equals(this.description, configurationScriptViewModel.description) &&
        Objects.equals(this.executionDate, configurationScriptViewModel.executionDate) &&
        Objects.equals(this.configDeployId, configurationScriptViewModel.configDeployId) &&
        Objects.equals(this.duration, configurationScriptViewModel.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, executionDate, configDeployId, duration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationScriptViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    executionDate: ").append(toIndentedString(executionDate)).append("\n");
    sb.append("    configDeployId: ").append(toIndentedString(configDeployId)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

