/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * Действие акции \&quot;Выдача купона\&quot;.
 */
@ApiModel(description = "Действие акции \"Выдача купона\".")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class CouponIssueActionDto {
  @JsonProperty("order")
  private Integer order = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("couponEmissionId")
  private Integer couponEmissionId = null;

  /**
   * Тип выдачи купона.
   */
  public enum TypeEnum {
    CHEQUE("Cheque"),
    
    EMAIL("Email"),
    
    PHONEMESSAGE("PhoneMessage"),
    
    CASHIERMESSAGE("CashierMessage"),
    
    PUSHNOTIFICATION("PushNotification");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("templateMessage")
  private String templateMessage = null;

  @JsonProperty("subject")
  private String subject = null;

  @JsonProperty("imageId")
  private UUID imageId = null;

  public CouponIssueActionDto order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Порядковый номер действия в цепочке.
   * @return order
  **/
  @ApiModelProperty(value = "Порядковый номер действия в цепочке.")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

  public CouponIssueActionDto id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id действия в цепочке.
   * @return id
  **/
  @ApiModelProperty(value = "Id действия в цепочке.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CouponIssueActionDto couponEmissionId(Integer couponEmissionId) {
    this.couponEmissionId = couponEmissionId;
    return this;
  }

   /**
   * Идентификатор выпуска.
   * @return couponEmissionId
  **/
  @ApiModelProperty(value = "Идентификатор выпуска.")
  public Integer getCouponEmissionId() {
    return couponEmissionId;
  }

  public void setCouponEmissionId(Integer couponEmissionId) {
    this.couponEmissionId = couponEmissionId;
  }

  public CouponIssueActionDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Тип выдачи купона.
   * @return type
  **/
  @ApiModelProperty(value = "Тип выдачи купона.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CouponIssueActionDto templateMessage(String templateMessage) {
    this.templateMessage = templateMessage;
    return this;
  }

   /**
   * Шаблон сообщения.
   * @return templateMessage
  **/
  @ApiModelProperty(value = "Шаблон сообщения.")
  public String getTemplateMessage() {
    return templateMessage;
  }

  public void setTemplateMessage(String templateMessage) {
    this.templateMessage = templateMessage;
  }

  public CouponIssueActionDto subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Заголовок. Используется для {Loymax.ImportExport.Dto.Offers.Actions.ActionCouponIssueType.Email} и {Loymax.ImportExport.Dto.Offers.Actions.ActionCouponIssueType.PushNotification}.
   * @return subject
  **/
  @ApiModelProperty(value = "Заголовок. Используется для {Loymax.ImportExport.Dto.Offers.Actions.ActionCouponIssueType.Email} и {Loymax.ImportExport.Dto.Offers.Actions.ActionCouponIssueType.PushNotification}.")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public CouponIssueActionDto imageId(UUID imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Идентификатор изображения.
   * @return imageId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор изображения.")
  public UUID getImageId() {
    return imageId;
  }

  public void setImageId(UUID imageId) {
    this.imageId = imageId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponIssueActionDto couponIssueActionDto = (CouponIssueActionDto) o;
    return Objects.equals(this.order, couponIssueActionDto.order) &&
        Objects.equals(this.id, couponIssueActionDto.id) &&
        Objects.equals(this.couponEmissionId, couponIssueActionDto.couponEmissionId) &&
        Objects.equals(this.type, couponIssueActionDto.type) &&
        Objects.equals(this.templateMessage, couponIssueActionDto.templateMessage) &&
        Objects.equals(this.subject, couponIssueActionDto.subject) &&
        Objects.equals(this.imageId, couponIssueActionDto.imageId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, id, couponEmissionId, type, templateMessage, subject, imageId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponIssueActionDto {\n");
    
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    couponEmissionId: ").append(toIndentedString(couponEmissionId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    templateMessage: ").append(toIndentedString(templateMessage)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

