/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * Элемент детальной информации.
 */
@ApiModel(description = "Элемент детальной информации.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class DetailItem {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("rewardThumbnail")
  private RewardThumbnail rewardThumbnail = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("picture")
  private UUID picture = null;

  public DetailItem id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор детали.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор детали.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DetailItem rewardThumbnail(RewardThumbnail rewardThumbnail) {
    this.rewardThumbnail = rewardThumbnail;
    return this;
  }

   /**
   * Вознаграждение.
   * @return rewardThumbnail
  **/
  @ApiModelProperty(value = "Вознаграждение.")
  public RewardThumbnail getRewardThumbnail() {
    return rewardThumbnail;
  }

  public void setRewardThumbnail(RewardThumbnail rewardThumbnail) {
    this.rewardThumbnail = rewardThumbnail;
  }

  public DetailItem title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Заголовок.
   * @return title
  **/
  @ApiModelProperty(value = "Заголовок.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DetailItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание.
   * @return description
  **/
  @ApiModelProperty(value = "Описание.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DetailItem picture(UUID picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Изображение.
   * @return picture
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Изображение.")
  public UUID getPicture() {
    return picture;
  }

  public void setPicture(UUID picture) {
    this.picture = picture;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailItem detailItem = (DetailItem) o;
    return Objects.equals(this.id, detailItem.id) &&
        Objects.equals(this.rewardThumbnail, detailItem.rewardThumbnail) &&
        Objects.equals(this.title, detailItem.title) &&
        Objects.equals(this.description, detailItem.description) &&
        Objects.equals(this.picture, detailItem.picture);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, rewardThumbnail, title, description, picture);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rewardThumbnail: ").append(toIndentedString(rewardThumbnail)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

