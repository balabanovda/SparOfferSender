/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Модель оплаты для тестовой кассы.
 */
@ApiModel(description = "Модель оплаты для тестовой кассы.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class DeviceEmulationPaymentViewModel {
  @JsonProperty("paymentType")
  private String paymentType = null;

  @JsonProperty("paymentName")
  private String paymentName = null;

  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("info")
  private String info = null;

  @JsonProperty("identifier")
  private DeviceEmulationIdentifierViewModel identifier = null;

  public DeviceEmulationPaymentViewModel paymentType(String paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Логическое имя типа оплаты.
   * @return paymentType
  **/
  @ApiModelProperty(value = "Логическое имя типа оплаты.")
  public String getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }

  public DeviceEmulationPaymentViewModel paymentName(String paymentName) {
    this.paymentName = paymentName;
    return this;
  }

   /**
   * Название типа оплаты.
   * @return paymentName
  **/
  @ApiModelProperty(value = "Название типа оплаты.")
  public String getPaymentName() {
    return paymentName;
  }

  public void setPaymentName(String paymentName) {
    this.paymentName = paymentName;
  }

  public DeviceEmulationPaymentViewModel amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Сумма.
   * @return amount
  **/
  @ApiModelProperty(value = "Сумма.")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public DeviceEmulationPaymentViewModel info(String info) {
    this.info = info;
    return this;
  }

   /**
   * Информация.
   * @return info
  **/
  @ApiModelProperty(value = "Информация.")
  public String getInfo() {
    return info;
  }

  public void setInfo(String info) {
    this.info = info;
  }

  public DeviceEmulationPaymentViewModel identifier(DeviceEmulationIdentifierViewModel identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Идентификатор пользователя.
   * @return identifier
  **/
  @ApiModelProperty(value = "Идентификатор пользователя.")
  public DeviceEmulationIdentifierViewModel getIdentifier() {
    return identifier;
  }

  public void setIdentifier(DeviceEmulationIdentifierViewModel identifier) {
    this.identifier = identifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceEmulationPaymentViewModel deviceEmulationPaymentViewModel = (DeviceEmulationPaymentViewModel) o;
    return Objects.equals(this.paymentType, deviceEmulationPaymentViewModel.paymentType) &&
        Objects.equals(this.paymentName, deviceEmulationPaymentViewModel.paymentName) &&
        Objects.equals(this.amount, deviceEmulationPaymentViewModel.amount) &&
        Objects.equals(this.info, deviceEmulationPaymentViewModel.info) &&
        Objects.equals(this.identifier, deviceEmulationPaymentViewModel.identifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentType, paymentName, amount, info, identifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceEmulationPaymentViewModel {\n");
    
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    paymentName: ").append(toIndentedString(paymentName)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

