/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель покупки.
 */
@ApiModel(description = "Модель покупки.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class DeviceEmulationPurchaseViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("purchaseDate")
  private OffsetDateTime purchaseDate = null;

  @JsonProperty("deviceId")
  private Integer deviceId = null;

  /**
   * Состояние покупки.
   */
  public enum StateEnum {
    CREATED("Created"),
    
    CLOSED("Closed"),
    
    CANCELLED("Cancelled"),
    
    CONFIRMED("Confirmed"),
    
    PAID("Paid"),
    
    CALCULATED("Calculated");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("identifier")
  private DeviceEmulationIdentifierViewModel identifier = null;

  @JsonProperty("isAbleToConfirm")
  private Boolean isAbleToConfirm = null;

  @JsonProperty("totalAmount")
  private Double totalAmount = null;

  @JsonProperty("totalPayed")
  private Double totalPayed = null;

  @JsonProperty("amountWithoutDiscount")
  private Double amountWithoutDiscount = null;

  @JsonProperty("partnerId")
  private Integer partnerId = null;

  @JsonProperty("positions")
  private List<DeviceEmulationPositionViewModel> positions = null;

  @JsonProperty("payments")
  private List<DeviceEmulationPaymentViewModel> payments = null;

  @JsonProperty("coupons")
  private List<DeviceEmulationCouponModel> coupons = null;

  @JsonProperty("resultStateModel")
  private DeviceEmulationResultStateViewModel resultStateModel = null;

  public DeviceEmulationPurchaseViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public DeviceEmulationPurchaseViewModel purchaseDate(OffsetDateTime purchaseDate) {
    this.purchaseDate = purchaseDate;
    return this;
  }

   /**
   * Дата покупки.
   * @return purchaseDate
  **/
  @ApiModelProperty(value = "Дата покупки.")
  public OffsetDateTime getPurchaseDate() {
    return purchaseDate;
  }

  public void setPurchaseDate(OffsetDateTime purchaseDate) {
    this.purchaseDate = purchaseDate;
  }

  public DeviceEmulationPurchaseViewModel deviceId(Integer deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Идентификатор кассы.
   * @return deviceId
  **/
  @ApiModelProperty(value = "Идентификатор кассы.")
  public Integer getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(Integer deviceId) {
    this.deviceId = deviceId;
  }

  public DeviceEmulationPurchaseViewModel state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Состояние покупки.
   * @return state
  **/
  @ApiModelProperty(value = "Состояние покупки.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public DeviceEmulationPurchaseViewModel identifier(DeviceEmulationIdentifierViewModel identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Идентификатор пользователя.
   * @return identifier
  **/
  @ApiModelProperty(value = "Идентификатор пользователя.")
  public DeviceEmulationIdentifierViewModel getIdentifier() {
    return identifier;
  }

  public void setIdentifier(DeviceEmulationIdentifierViewModel identifier) {
    this.identifier = identifier;
  }

  public DeviceEmulationPurchaseViewModel isAbleToConfirm(Boolean isAbleToConfirm) {
    this.isAbleToConfirm = isAbleToConfirm;
    return this;
  }

   /**
   * Возможно ли подтвердить?.
   * @return isAbleToConfirm
  **/
  @ApiModelProperty(value = "Возможно ли подтвердить?.")
  public Boolean isIsAbleToConfirm() {
    return isAbleToConfirm;
  }

  public void setIsAbleToConfirm(Boolean isAbleToConfirm) {
    this.isAbleToConfirm = isAbleToConfirm;
  }

  public DeviceEmulationPurchaseViewModel totalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Общая сумма.
   * @return totalAmount
  **/
  @ApiModelProperty(value = "Общая сумма.")
  public Double getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }

  public DeviceEmulationPurchaseViewModel totalPayed(Double totalPayed) {
    this.totalPayed = totalPayed;
    return this;
  }

   /**
   * Суммарно оплачено.
   * @return totalPayed
  **/
  @ApiModelProperty(value = "Суммарно оплачено.")
  public Double getTotalPayed() {
    return totalPayed;
  }

  public void setTotalPayed(Double totalPayed) {
    this.totalPayed = totalPayed;
  }

  public DeviceEmulationPurchaseViewModel amountWithoutDiscount(Double amountWithoutDiscount) {
    this.amountWithoutDiscount = amountWithoutDiscount;
    return this;
  }

   /**
   * Сумма без скидки.
   * @return amountWithoutDiscount
  **/
  @ApiModelProperty(value = "Сумма без скидки.")
  public Double getAmountWithoutDiscount() {
    return amountWithoutDiscount;
  }

  public void setAmountWithoutDiscount(Double amountWithoutDiscount) {
    this.amountWithoutDiscount = amountWithoutDiscount;
  }

  public DeviceEmulationPurchaseViewModel partnerId(Integer partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Идентификатор партнера.
   * @return partnerId
  **/
  @ApiModelProperty(value = "Идентификатор партнера.")
  public Integer getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(Integer partnerId) {
    this.partnerId = partnerId;
  }

  public DeviceEmulationPurchaseViewModel positions(List<DeviceEmulationPositionViewModel> positions) {
    this.positions = positions;
    return this;
  }

  public DeviceEmulationPurchaseViewModel addPositionsItem(DeviceEmulationPositionViewModel positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

   /**
   * Позиции.
   * @return positions
  **/
  @ApiModelProperty(value = "Позиции.")
  public List<DeviceEmulationPositionViewModel> getPositions() {
    return positions;
  }

  public void setPositions(List<DeviceEmulationPositionViewModel> positions) {
    this.positions = positions;
  }

  public DeviceEmulationPurchaseViewModel payments(List<DeviceEmulationPaymentViewModel> payments) {
    this.payments = payments;
    return this;
  }

  public DeviceEmulationPurchaseViewModel addPaymentsItem(DeviceEmulationPaymentViewModel paymentsItem) {
    if (this.payments == null) {
      this.payments = new ArrayList<>();
    }
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Оплаты.
   * @return payments
  **/
  @ApiModelProperty(value = "Оплаты.")
  public List<DeviceEmulationPaymentViewModel> getPayments() {
    return payments;
  }

  public void setPayments(List<DeviceEmulationPaymentViewModel> payments) {
    this.payments = payments;
  }

  public DeviceEmulationPurchaseViewModel coupons(List<DeviceEmulationCouponModel> coupons) {
    this.coupons = coupons;
    return this;
  }

  public DeviceEmulationPurchaseViewModel addCouponsItem(DeviceEmulationCouponModel couponsItem) {
    if (this.coupons == null) {
      this.coupons = new ArrayList<>();
    }
    this.coupons.add(couponsItem);
    return this;
  }

   /**
   * Купоны.
   * @return coupons
  **/
  @ApiModelProperty(value = "Купоны.")
  public List<DeviceEmulationCouponModel> getCoupons() {
    return coupons;
  }

  public void setCoupons(List<DeviceEmulationCouponModel> coupons) {
    this.coupons = coupons;
  }

  public DeviceEmulationPurchaseViewModel resultStateModel(DeviceEmulationResultStateViewModel resultStateModel) {
    this.resultStateModel = resultStateModel;
    return this;
  }

   /**
   * Модель итогового состояния.
   * @return resultStateModel
  **/
  @ApiModelProperty(value = "Модель итогового состояния.")
  public DeviceEmulationResultStateViewModel getResultStateModel() {
    return resultStateModel;
  }

  public void setResultStateModel(DeviceEmulationResultStateViewModel resultStateModel) {
    this.resultStateModel = resultStateModel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceEmulationPurchaseViewModel deviceEmulationPurchaseViewModel = (DeviceEmulationPurchaseViewModel) o;
    return Objects.equals(this.id, deviceEmulationPurchaseViewModel.id) &&
        Objects.equals(this.purchaseDate, deviceEmulationPurchaseViewModel.purchaseDate) &&
        Objects.equals(this.deviceId, deviceEmulationPurchaseViewModel.deviceId) &&
        Objects.equals(this.state, deviceEmulationPurchaseViewModel.state) &&
        Objects.equals(this.identifier, deviceEmulationPurchaseViewModel.identifier) &&
        Objects.equals(this.isAbleToConfirm, deviceEmulationPurchaseViewModel.isAbleToConfirm) &&
        Objects.equals(this.totalAmount, deviceEmulationPurchaseViewModel.totalAmount) &&
        Objects.equals(this.totalPayed, deviceEmulationPurchaseViewModel.totalPayed) &&
        Objects.equals(this.amountWithoutDiscount, deviceEmulationPurchaseViewModel.amountWithoutDiscount) &&
        Objects.equals(this.partnerId, deviceEmulationPurchaseViewModel.partnerId) &&
        Objects.equals(this.positions, deviceEmulationPurchaseViewModel.positions) &&
        Objects.equals(this.payments, deviceEmulationPurchaseViewModel.payments) &&
        Objects.equals(this.coupons, deviceEmulationPurchaseViewModel.coupons) &&
        Objects.equals(this.resultStateModel, deviceEmulationPurchaseViewModel.resultStateModel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, purchaseDate, deviceId, state, identifier, isAbleToConfirm, totalAmount, totalPayed, amountWithoutDiscount, partnerId, positions, payments, coupons, resultStateModel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceEmulationPurchaseViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    purchaseDate: ").append(toIndentedString(purchaseDate)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    isAbleToConfirm: ").append(toIndentedString(isAbleToConfirm)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    totalPayed: ").append(toIndentedString(totalPayed)).append("\n");
    sb.append("    amountWithoutDiscount: ").append(toIndentedString(amountWithoutDiscount)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    coupons: ").append(toIndentedString(coupons)).append("\n");
    sb.append("    resultStateModel: ").append(toIndentedString(resultStateModel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

