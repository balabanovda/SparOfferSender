/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Фильтр запроса списка касс.
 */
@ApiModel(description = "Фильтр запроса списка касс.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class DeviceListFilter {
  @JsonProperty("from")
  private Integer from = null;

  @JsonProperty("count")
  private Integer count = null;

  @JsonProperty("merchantIds")
  private List<Integer> merchantIds = null;

  @JsonProperty("legalId")
  private Integer legalId = null;

  @JsonProperty("logicalId")
  private String logicalId = null;

  /**
   * Режим вывода по признаку удаления.
   */
  public enum ModeEnum {
    ARCHIVED("Archived"),
    
    NONARCHIVED("NonArchived");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModeEnum fromValue(String text) {
      for (ModeEnum b : ModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("mode")
  private ModeEnum mode = null;

  @JsonProperty("isOrderedByAscending")
  private Boolean isOrderedByAscending = null;

  @JsonProperty("debetOnly")
  private Boolean debetOnly = null;

  public DeviceListFilter from(Integer from) {
    this.from = from;
    return this;
  }

   /**
   * С какого.
   * @return from
  **/
  @ApiModelProperty(value = "С какого.")
  public Integer getFrom() {
    return from;
  }

  public void setFrom(Integer from) {
    this.from = from;
  }

  public DeviceListFilter count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Сколько.
   * @return count
  **/
  @ApiModelProperty(value = "Сколько.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public DeviceListFilter merchantIds(List<Integer> merchantIds) {
    this.merchantIds = merchantIds;
    return this;
  }

  public DeviceListFilter addMerchantIdsItem(Integer merchantIdsItem) {
    if (this.merchantIds == null) {
      this.merchantIds = new ArrayList<>();
    }
    this.merchantIds.add(merchantIdsItem);
    return this;
  }

   /**
   * Список идентификаторов магазинов.
   * @return merchantIds
  **/
  @ApiModelProperty(value = "Список идентификаторов магазинов.")
  public List<Integer> getMerchantIds() {
    return merchantIds;
  }

  public void setMerchantIds(List<Integer> merchantIds) {
    this.merchantIds = merchantIds;
  }

  public DeviceListFilter legalId(Integer legalId) {
    this.legalId = legalId;
    return this;
  }

   /**
   * Идентификатор юр. лица.
   * @return legalId
  **/
  @ApiModelProperty(value = "Идентификатор юр. лица.")
  public Integer getLegalId() {
    return legalId;
  }

  public void setLegalId(Integer legalId) {
    this.legalId = legalId;
  }

  public DeviceListFilter logicalId(String logicalId) {
    this.logicalId = logicalId;
    return this;
  }

   /**
   * Логическое имя.
   * @return logicalId
  **/
  @ApiModelProperty(value = "Логическое имя.")
  public String getLogicalId() {
    return logicalId;
  }

  public void setLogicalId(String logicalId) {
    this.logicalId = logicalId;
  }

  public DeviceListFilter mode(ModeEnum mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Режим вывода по признаку удаления.
   * @return mode
  **/
  @ApiModelProperty(value = "Режим вывода по признаку удаления.")
  public ModeEnum getMode() {
    return mode;
  }

  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }

  public DeviceListFilter isOrderedByAscending(Boolean isOrderedByAscending) {
    this.isOrderedByAscending = isOrderedByAscending;
    return this;
  }

   /**
   * Режим прямой сортировки.
   * @return isOrderedByAscending
  **/
  @ApiModelProperty(value = "Режим прямой сортировки.")
  public Boolean isIsOrderedByAscending() {
    return isOrderedByAscending;
  }

  public void setIsOrderedByAscending(Boolean isOrderedByAscending) {
    this.isOrderedByAscending = isOrderedByAscending;
  }

  public DeviceListFilter debetOnly(Boolean debetOnly) {
    this.debetOnly = debetOnly;
    return this;
  }

   /**
   * Выбор только дебетовых касс.
   * @return debetOnly
  **/
  @ApiModelProperty(value = "Выбор только дебетовых касс.")
  public Boolean isDebetOnly() {
    return debetOnly;
  }

  public void setDebetOnly(Boolean debetOnly) {
    this.debetOnly = debetOnly;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceListFilter deviceListFilter = (DeviceListFilter) o;
    return Objects.equals(this.from, deviceListFilter.from) &&
        Objects.equals(this.count, deviceListFilter.count) &&
        Objects.equals(this.merchantIds, deviceListFilter.merchantIds) &&
        Objects.equals(this.legalId, deviceListFilter.legalId) &&
        Objects.equals(this.logicalId, deviceListFilter.logicalId) &&
        Objects.equals(this.mode, deviceListFilter.mode) &&
        Objects.equals(this.isOrderedByAscending, deviceListFilter.isOrderedByAscending) &&
        Objects.equals(this.debetOnly, deviceListFilter.debetOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, count, merchantIds, legalId, logicalId, mode, isOrderedByAscending, debetOnly);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceListFilter {\n");
    
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    merchantIds: ").append(toIndentedString(merchantIds)).append("\n");
    sb.append("    legalId: ").append(toIndentedString(legalId)).append("\n");
    sb.append("    logicalId: ").append(toIndentedString(logicalId)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    isOrderedByAscending: ").append(toIndentedString(isOrderedByAscending)).append("\n");
    sb.append("    debetOnly: ").append(toIndentedString(debetOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

