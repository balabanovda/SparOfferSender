/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель представления действия \&quot;Разделение по наборам\&quot;.
 */
@ApiModel(description = "Модель представления действия \"Разделение по наборам\".")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class GoodsSetDivideActionViewModel {
  @JsonProperty("actionId")
  private Integer actionId = null;

  @JsonProperty("order")
  private Integer order = null;

  @JsonProperty("compositionInfo")
  private List<GoodsSetItemInfoViewModel> compositionInfo = null;

  /**
   * Поле, по значениям которого будет формироваться набор.
   */
  public enum TargetFieldTypeEnum {
    QUANTITY("Quantity"),
    
    AMOUNT("Amount");

    private String value;

    TargetFieldTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TargetFieldTypeEnum fromValue(String text) {
      for (TargetFieldTypeEnum b : TargetFieldTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("targetFieldType")
  private TargetFieldTypeEnum targetFieldType = null;

  /**
   * Поле сортировки.
   */
  public enum ChequeGoodsSortTypeEnum {
    POSITIONASCENDING("PositionAscending"),
    
    POSITIONDESCENDING("PositionDescending"),
    
    PRICEASCENDING("PriceAscending"),
    
    PRICEDESCENDING("PriceDescending");

    private String value;

    ChequeGoodsSortTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChequeGoodsSortTypeEnum fromValue(String text) {
      for (ChequeGoodsSortTypeEnum b : ChequeGoodsSortTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("chequeGoodsSortType")
  private ChequeGoodsSortTypeEnum chequeGoodsSortType = null;

  @JsonProperty("personalAttributeId")
  private Integer personalAttributeId = null;

  @JsonProperty("goodsAttributeId")
  private Integer goodsAttributeId = null;

  public GoodsSetDivideActionViewModel actionId(Integer actionId) {
    this.actionId = actionId;
    return this;
  }

   /**
   * Id действия. Если указан, редактируется действие, иначе создается новое.
   * @return actionId
  **/
  @ApiModelProperty(value = "Id действия. Если указан, редактируется действие, иначе создается новое.")
  public Integer getActionId() {
    return actionId;
  }

  public void setActionId(Integer actionId) {
    this.actionId = actionId;
  }

  public GoodsSetDivideActionViewModel order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Порядок действия.
   * @return order
  **/
  @ApiModelProperty(value = "Порядок действия.")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

  public GoodsSetDivideActionViewModel compositionInfo(List<GoodsSetItemInfoViewModel> compositionInfo) {
    this.compositionInfo = compositionInfo;
    return this;
  }

  public GoodsSetDivideActionViewModel addCompositionInfoItem(GoodsSetItemInfoViewModel compositionInfoItem) {
    if (this.compositionInfo == null) {
      this.compositionInfo = new ArrayList<>();
    }
    this.compositionInfo.add(compositionInfoItem);
    return this;
  }

   /**
   * Источник данных о товарах, из который будет формироваться набор.
   * @return compositionInfo
  **/
  @ApiModelProperty(value = "Источник данных о товарах, из который будет формироваться набор.")
  public List<GoodsSetItemInfoViewModel> getCompositionInfo() {
    return compositionInfo;
  }

  public void setCompositionInfo(List<GoodsSetItemInfoViewModel> compositionInfo) {
    this.compositionInfo = compositionInfo;
  }

  public GoodsSetDivideActionViewModel targetFieldType(TargetFieldTypeEnum targetFieldType) {
    this.targetFieldType = targetFieldType;
    return this;
  }

   /**
   * Поле, по значениям которого будет формироваться набор.
   * @return targetFieldType
  **/
  @ApiModelProperty(value = "Поле, по значениям которого будет формироваться набор.")
  public TargetFieldTypeEnum getTargetFieldType() {
    return targetFieldType;
  }

  public void setTargetFieldType(TargetFieldTypeEnum targetFieldType) {
    this.targetFieldType = targetFieldType;
  }

  public GoodsSetDivideActionViewModel chequeGoodsSortType(ChequeGoodsSortTypeEnum chequeGoodsSortType) {
    this.chequeGoodsSortType = chequeGoodsSortType;
    return this;
  }

   /**
   * Поле сортировки.
   * @return chequeGoodsSortType
  **/
  @ApiModelProperty(value = "Поле сортировки.")
  public ChequeGoodsSortTypeEnum getChequeGoodsSortType() {
    return chequeGoodsSortType;
  }

  public void setChequeGoodsSortType(ChequeGoodsSortTypeEnum chequeGoodsSortType) {
    this.chequeGoodsSortType = chequeGoodsSortType;
  }

  public GoodsSetDivideActionViewModel personalAttributeId(Integer personalAttributeId) {
    this.personalAttributeId = personalAttributeId;
    return this;
  }

   /**
   * Идентификатор атрибута персональных предложений.
   * @return personalAttributeId
  **/
  @ApiModelProperty(value = "Идентификатор атрибута персональных предложений.")
  public Integer getPersonalAttributeId() {
    return personalAttributeId;
  }

  public void setPersonalAttributeId(Integer personalAttributeId) {
    this.personalAttributeId = personalAttributeId;
  }

  public GoodsSetDivideActionViewModel goodsAttributeId(Integer goodsAttributeId) {
    this.goodsAttributeId = goodsAttributeId;
    return this;
  }

   /**
   * Идентификатор атрибута товара.
   * @return goodsAttributeId
  **/
  @ApiModelProperty(value = "Идентификатор атрибута товара.")
  public Integer getGoodsAttributeId() {
    return goodsAttributeId;
  }

  public void setGoodsAttributeId(Integer goodsAttributeId) {
    this.goodsAttributeId = goodsAttributeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoodsSetDivideActionViewModel goodsSetDivideActionViewModel = (GoodsSetDivideActionViewModel) o;
    return Objects.equals(this.actionId, goodsSetDivideActionViewModel.actionId) &&
        Objects.equals(this.order, goodsSetDivideActionViewModel.order) &&
        Objects.equals(this.compositionInfo, goodsSetDivideActionViewModel.compositionInfo) &&
        Objects.equals(this.targetFieldType, goodsSetDivideActionViewModel.targetFieldType) &&
        Objects.equals(this.chequeGoodsSortType, goodsSetDivideActionViewModel.chequeGoodsSortType) &&
        Objects.equals(this.personalAttributeId, goodsSetDivideActionViewModel.personalAttributeId) &&
        Objects.equals(this.goodsAttributeId, goodsSetDivideActionViewModel.goodsAttributeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionId, order, compositionInfo, targetFieldType, chequeGoodsSortType, personalAttributeId, goodsAttributeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoodsSetDivideActionViewModel {\n");
    
    sb.append("    actionId: ").append(toIndentedString(actionId)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    compositionInfo: ").append(toIndentedString(compositionInfo)).append("\n");
    sb.append("    targetFieldType: ").append(toIndentedString(targetFieldType)).append("\n");
    sb.append("    chequeGoodsSortType: ").append(toIndentedString(chequeGoodsSortType)).append("\n");
    sb.append("    personalAttributeId: ").append(toIndentedString(personalAttributeId)).append("\n");
    sb.append("    goodsAttributeId: ").append(toIndentedString(goodsAttributeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

