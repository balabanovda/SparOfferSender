/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * View model аудита.
 */
@ApiModel(description = "View model аудита.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class HistoryAuditViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("owner")
  private CreatorModel owner = null;

  @JsonProperty("cardNumber")
  private String cardNumber = null;

  /**
   * Тип аудита.
   */
  public enum AuditTypeEnum {
    LOGINSUCCESS("LoginSuccess"),
    
    LOGINWRONGPASSWORD("LoginWrongPassword"),
    
    LOGINBLOCK("LoginBlock"),
    
    CARDBLOCK("CardBlock"),
    
    CARDUNBLOCK("CardUnBlock"),
    
    CHANGEPHONE("ChangePhone"),
    
    REGISTRATIONACCEPTOFFER("RegistrationAcceptOffer"),
    
    REGISTRATIONPERSON("RegistrationPerson"),
    
    ADDUSERACTION("AddUserAction"),
    
    FINISHUSERACTION("FinishUserAction"),
    
    CARDACTIVATED("CardActivated"),
    
    REGISTRATIONANSWERQUESTIONS("RegistrationAnswerQuestions"),
    
    CARDSETPHONE("CardSetPhone"),
    
    ANSWER("Answer"),
    
    REMOVEACCOUNT("RemoveAccount"),
    
    ADDACCOUNT("AddAccount"),
    
    CARDLINK("CardLink"),
    
    CARDUNLINK("CardUnLink"),
    
    CHANGEEMAIL("ChangeEmail"),
    
    RESETPASSWORD("ResetPassword"),
    
    MAILING("Mailing"),
    
    TARGETGROUP("TargetGroup"),
    
    OFFER("Offer"),
    
    CARDDELETE("CardDelete"),
    
    CARDRECOVER("CardRecover"),
    
    AUTHENTICATION("Authentication"),
    
    FILTERS("Filters"),
    
    PAYMENTNOTENOUGHMONEY("PaymentNotEnoughMoney"),
    
    PAYMENTCARDBLOCKED("PaymentCardBlocked"),
    
    CARDISSUANCE("CardIssuance"),
    
    EXTERNALCARDREPLACEMENT("ExternalCardReplacement"),
    
    CARDPAYMENTBLOCK("CardPaymentBlock"),
    
    CARDPAYMENTUNBLOCK("CardPaymentUnBlock"),
    
    RUNCALCULATION("RunCalculation"),
    
    CARDREPLACE("CardReplace"),
    
    CHANGEPASSWORD("ChangePassword"),
    
    ACCOUNTBLOCK("AccountBlock"),
    
    ACCOUNTUNBLOCK("AccountUnBlock"),
    
    SETREFERRER("SetReferrer"),
    
    ADDREFERRAL("AddReferral"),
    
    MODIFICATIONSTATUSSUBSCRIPTIONS("ModificationStatusSubscriptions"),
    
    CONFIRMPURCHASE("ConfirmPurchase"),
    
    CANCELPURCHASE("CancelPurchase"),
    
    REGISTRATIONACCEPTPERSONALDATAPROCESSING("RegistrationAcceptPersonalDataProcessing"),
    
    MOBILEAPPINSTALLED("MobileAppInstalled"),
    
    PRIVATECLUBS("PrivateClubs"),
    
    IDENTIFIERBLOCK("IdentifierBlock"),
    
    IDENTIFIERUNBLOCK("IdentifierUnBlock"),
    
    CARDCATEGORYCHANGED("CardCategoryChanged"),
    
    MANUALSTATUSCHANGE("ManualStatusChange"),
    
    MEATRYADMANUALSTATUSCHANGE("MeatryadManualStatusChange"),
    
    DEREGISTRATION("Deregistration");

    private String value;

    AuditTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuditTypeEnum fromValue(String text) {
      for (AuditTypeEnum b : AuditTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("auditType")
  private AuditTypeEnum auditType = null;

  @JsonProperty("additionalInfos")
  private List<KeyValuePairOfStringAndString> additionalInfos = null;

  @JsonProperty("author")
  private CreatorModel author = null;

  public HistoryAuditViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public HistoryAuditViewModel creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Дата создания.
   * @return creationDate
  **/
  @ApiModelProperty(value = "Дата создания.")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public HistoryAuditViewModel owner(CreatorModel owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Владелец.
   * @return owner
  **/
  @ApiModelProperty(value = "Владелец.")
  public CreatorModel getOwner() {
    return owner;
  }

  public void setOwner(CreatorModel owner) {
    this.owner = owner;
  }

  public HistoryAuditViewModel cardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Номер карты.
   * @return cardNumber
  **/
  @ApiModelProperty(value = "Номер карты.")
  public String getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }

  public HistoryAuditViewModel auditType(AuditTypeEnum auditType) {
    this.auditType = auditType;
    return this;
  }

   /**
   * Тип аудита.
   * @return auditType
  **/
  @ApiModelProperty(value = "Тип аудита.")
  public AuditTypeEnum getAuditType() {
    return auditType;
  }

  public void setAuditType(AuditTypeEnum auditType) {
    this.auditType = auditType;
  }

  public HistoryAuditViewModel additionalInfos(List<KeyValuePairOfStringAndString> additionalInfos) {
    this.additionalInfos = additionalInfos;
    return this;
  }

  public HistoryAuditViewModel addAdditionalInfosItem(KeyValuePairOfStringAndString additionalInfosItem) {
    if (this.additionalInfos == null) {
      this.additionalInfos = new ArrayList<>();
    }
    this.additionalInfos.add(additionalInfosItem);
    return this;
  }

   /**
   * Дополнительная информация.
   * @return additionalInfos
  **/
  @ApiModelProperty(value = "Дополнительная информация.")
  public List<KeyValuePairOfStringAndString> getAdditionalInfos() {
    return additionalInfos;
  }

  public void setAdditionalInfos(List<KeyValuePairOfStringAndString> additionalInfos) {
    this.additionalInfos = additionalInfos;
  }

  public HistoryAuditViewModel author(CreatorModel author) {
    this.author = author;
    return this;
  }

   /**
   * Автор.
   * @return author
  **/
  @ApiModelProperty(value = "Автор.")
  public CreatorModel getAuthor() {
    return author;
  }

  public void setAuthor(CreatorModel author) {
    this.author = author;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryAuditViewModel historyAuditViewModel = (HistoryAuditViewModel) o;
    return Objects.equals(this.id, historyAuditViewModel.id) &&
        Objects.equals(this.creationDate, historyAuditViewModel.creationDate) &&
        Objects.equals(this.owner, historyAuditViewModel.owner) &&
        Objects.equals(this.cardNumber, historyAuditViewModel.cardNumber) &&
        Objects.equals(this.auditType, historyAuditViewModel.auditType) &&
        Objects.equals(this.additionalInfos, historyAuditViewModel.additionalInfos) &&
        Objects.equals(this.author, historyAuditViewModel.author);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, creationDate, owner, cardNumber, auditType, additionalInfos, author);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryAuditViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    auditType: ").append(toIndentedString(auditType)).append("\n");
    sb.append("    additionalInfos: ").append(toIndentedString(additionalInfos)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

