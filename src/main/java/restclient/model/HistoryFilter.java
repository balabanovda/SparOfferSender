/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * Параметры получения списка истории.
 */
@ApiModel(description = "Параметры получения списка истории.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class HistoryFilter {
  @JsonProperty("fromDate")
  private OffsetDateTime fromDate = null;

  @JsonProperty("toDate")
  private OffsetDateTime toDate = null;

  @JsonProperty("cardId")
  private Integer cardId = null;

  @JsonProperty("from")
  private Integer from = null;

  @JsonProperty("count")
  private Integer count = null;

  /**
   * Тип события в истории {Loymax.Mobile.Contract.Models.History.HistoryFilter.HistoryItemType}.
   */
  public enum HistoryItemTypeEnum {
    ALL("All"),
    
    PURCHASE("Purchase"),
    
    REWARDDATA("RewardData"),
    
    WITHDRAWDATA("WithdrawData");

    private String value;

    HistoryItemTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HistoryItemTypeEnum fromValue(String text) {
      for (HistoryItemTypeEnum b : HistoryItemTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("historyItemType")
  private HistoryItemTypeEnum historyItemType = null;

  @JsonProperty("chequeNumber")
  private String chequeNumber = null;

  public HistoryFilter fromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Дата с которой необходимо вывести историю.
   * @return fromDate
  **/
  @ApiModelProperty(value = "Дата с которой необходимо вывести историю.")
  public OffsetDateTime getFromDate() {
    return fromDate;
  }

  public void setFromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
  }

  public HistoryFilter toDate(OffsetDateTime toDate) {
    this.toDate = toDate;
    return this;
  }

   /**
   * Дата до которой необходимо вывести историю.
   * @return toDate
  **/
  @ApiModelProperty(value = "Дата до которой необходимо вывести историю.")
  public OffsetDateTime getToDate() {
    return toDate;
  }

  public void setToDate(OffsetDateTime toDate) {
    this.toDate = toDate;
  }

  public HistoryFilter cardId(Integer cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * ID карты. Если указан, то будет получена история только по этой карте.
   * @return cardId
  **/
  @ApiModelProperty(value = "ID карты. Если указан, то будет получена история только по этой карте.")
  public Integer getCardId() {
    return cardId;
  }

  public void setCardId(Integer cardId) {
    this.cardId = cardId;
  }

  public HistoryFilter from(Integer from) {
    this.from = from;
    return this;
  }

   /**
   * Начиная с какого элемента необходимо выводить.
   * @return from
  **/
  @ApiModelProperty(value = "Начиная с какого элемента необходимо выводить.")
  public Integer getFrom() {
    return from;
  }

  public void setFrom(Integer from) {
    this.from = from;
  }

  public HistoryFilter count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Кол-во элементов для вывода.
   * @return count
  **/
  @ApiModelProperty(value = "Кол-во элементов для вывода.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public HistoryFilter historyItemType(HistoryItemTypeEnum historyItemType) {
    this.historyItemType = historyItemType;
    return this;
  }

   /**
   * Тип события в истории {Loymax.Mobile.Contract.Models.History.HistoryFilter.HistoryItemType}.
   * @return historyItemType
  **/
  @ApiModelProperty(value = "Тип события в истории {Loymax.Mobile.Contract.Models.History.HistoryFilter.HistoryItemType}.")
  public HistoryItemTypeEnum getHistoryItemType() {
    return historyItemType;
  }

  public void setHistoryItemType(HistoryItemTypeEnum historyItemType) {
    this.historyItemType = historyItemType;
  }

  public HistoryFilter chequeNumber(String chequeNumber) {
    this.chequeNumber = chequeNumber;
    return this;
  }

   /**
   * Номер чека.
   * @return chequeNumber
  **/
  @ApiModelProperty(value = "Номер чека.")
  public String getChequeNumber() {
    return chequeNumber;
  }

  public void setChequeNumber(String chequeNumber) {
    this.chequeNumber = chequeNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryFilter historyFilter = (HistoryFilter) o;
    return Objects.equals(this.fromDate, historyFilter.fromDate) &&
        Objects.equals(this.toDate, historyFilter.toDate) &&
        Objects.equals(this.cardId, historyFilter.cardId) &&
        Objects.equals(this.from, historyFilter.from) &&
        Objects.equals(this.count, historyFilter.count) &&
        Objects.equals(this.historyItemType, historyFilter.historyItemType) &&
        Objects.equals(this.chequeNumber, historyFilter.chequeNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromDate, toDate, cardId, from, count, historyItemType, chequeNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryFilter {\n");
    
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    historyItemType: ").append(toIndentedString(historyItemType)).append("\n");
    sb.append("    chequeNumber: ").append(toIndentedString(chequeNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

