/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * ViewModel исторической записи.
 */
@ApiModel(description = "ViewModel исторической записи.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class HistoryItemModel {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("dateTime")
  private OffsetDateTime dateTime = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("userId")
  private Integer userId = null;

  @JsonProperty("identity")
  private String identity = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("location")
  private LocationDataModel location = null;

  @JsonProperty("partnerId")
  private UUID partnerId = null;

  @JsonProperty("brandId")
  private UUID brandId = null;

  @JsonProperty("brand")
  private BrandHistoryViewModel brand = null;

  @JsonProperty("data")
  private HistoryDataModel data = null;

  public HistoryItemModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Уникальный идентификатор.
   * @return id
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Уникальный идентификатор.")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public HistoryItemModel dateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Дата/время события.
   * @return dateTime
  **/
  @ApiModelProperty(value = "Дата/время события.")
  public OffsetDateTime getDateTime() {
    return dateTime;
  }

  public void setDateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
  }

  public HistoryItemModel type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Тип события.
   * @return type
  **/
  @ApiModelProperty(value = "Тип события.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public HistoryItemModel userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Идентификатор пользователя, к которому относится событие.
   * @return userId
  **/
  @ApiModelProperty(value = "Идентификатор пользователя, к которому относится событие.")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public HistoryItemModel identity(String identity) {
    this.identity = identity;
    return this;
  }

   /**
   * Дополнительные данные, позволяющие идентифицировать событие (номер карты, email итд).
   * @return identity
  **/
  @ApiModelProperty(value = "Дополнительные данные, позволяющие идентифицировать событие (номер карты, email итд).")
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }

  public HistoryItemModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание.
   * @return description
  **/
  @ApiModelProperty(value = "Описание.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public HistoryItemModel location(LocationDataModel location) {
    this.location = location;
    return this;
  }

   /**
   * Место события.
   * @return location
  **/
  @ApiModelProperty(value = "Место события.")
  public LocationDataModel getLocation() {
    return location;
  }

  public void setLocation(LocationDataModel location) {
    this.location = location;
  }

  public HistoryItemModel partnerId(UUID partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Идентификатор партнера.
   * @return partnerId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор партнера.")
  public UUID getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(UUID partnerId) {
    this.partnerId = partnerId;
  }

  public HistoryItemModel brandId(UUID brandId) {
    this.brandId = brandId;
    return this;
  }

   /**
   * Идентификатор брэнда.
   * @return brandId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор брэнда.")
  public UUID getBrandId() {
    return brandId;
  }

  public void setBrandId(UUID brandId) {
    this.brandId = brandId;
  }

  public HistoryItemModel brand(BrandHistoryViewModel brand) {
    this.brand = brand;
    return this;
  }

   /**
   * Идентификатор брэнда.
   * @return brand
  **/
  @ApiModelProperty(value = "Идентификатор брэнда.")
  public BrandHistoryViewModel getBrand() {
    return brand;
  }

  public void setBrand(BrandHistoryViewModel brand) {
    this.brand = brand;
  }

  public HistoryItemModel data(HistoryDataModel data) {
    this.data = data;
    return this;
  }

   /**
   * Данные.
   * @return data
  **/
  @ApiModelProperty(value = "Данные.")
  public HistoryDataModel getData() {
    return data;
  }

  public void setData(HistoryDataModel data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryItemModel historyItemModel = (HistoryItemModel) o;
    return Objects.equals(this.id, historyItemModel.id) &&
        Objects.equals(this.dateTime, historyItemModel.dateTime) &&
        Objects.equals(this.type, historyItemModel.type) &&
        Objects.equals(this.userId, historyItemModel.userId) &&
        Objects.equals(this.identity, historyItemModel.identity) &&
        Objects.equals(this.description, historyItemModel.description) &&
        Objects.equals(this.location, historyItemModel.location) &&
        Objects.equals(this.partnerId, historyItemModel.partnerId) &&
        Objects.equals(this.brandId, historyItemModel.brandId) &&
        Objects.equals(this.brand, historyItemModel.brand) &&
        Objects.equals(this.data, historyItemModel.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dateTime, type, userId, identity, description, location, partnerId, brandId, brand, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryItemModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    brandId: ").append(toIndentedString(brandId)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

