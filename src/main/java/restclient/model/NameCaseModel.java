/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Модель представления для вариантов написания.
 */
@ApiModel(description = "Модель представления для вариантов написания.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class NameCaseModel {
  @JsonProperty("nominative")
  private String nominative = null;

  @JsonProperty("genitive")
  private String genitive = null;

  @JsonProperty("plural")
  private String plural = null;

  @JsonProperty("abbreviation")
  private String abbreviation = null;

  public NameCaseModel nominative(String nominative) {
    this.nominative = nominative;
    return this;
  }

   /**
   * В единственном числе и именительном падеже.
   * @return nominative
  **/
  @ApiModelProperty(value = "В единственном числе и именительном падеже.")
  public String getNominative() {
    return nominative;
  }

  public void setNominative(String nominative) {
    this.nominative = nominative;
  }

  public NameCaseModel genitive(String genitive) {
    this.genitive = genitive;
    return this;
  }

   /**
   * В единственном числе и родительном падеже.
   * @return genitive
  **/
  @ApiModelProperty(value = "В единственном числе и родительном падеже.")
  public String getGenitive() {
    return genitive;
  }

  public void setGenitive(String genitive) {
    this.genitive = genitive;
  }

  public NameCaseModel plural(String plural) {
    this.plural = plural;
    return this;
  }

   /**
   * Во множественном числе и именительном падеже.
   * @return plural
  **/
  @ApiModelProperty(value = "Во множественном числе и именительном падеже.")
  public String getPlural() {
    return plural;
  }

  public void setPlural(String plural) {
    this.plural = plural;
  }

  public NameCaseModel abbreviation(String abbreviation) {
    this.abbreviation = abbreviation;
    return this;
  }

   /**
   * Сокращенный вариант.
   * @return abbreviation
  **/
  @ApiModelProperty(value = "Сокращенный вариант.")
  public String getAbbreviation() {
    return abbreviation;
  }

  public void setAbbreviation(String abbreviation) {
    this.abbreviation = abbreviation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NameCaseModel nameCaseModel = (NameCaseModel) o;
    return Objects.equals(this.nominative, nameCaseModel.nominative) &&
        Objects.equals(this.genitive, nameCaseModel.genitive) &&
        Objects.equals(this.plural, nameCaseModel.plural) &&
        Objects.equals(this.abbreviation, nameCaseModel.abbreviation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nominative, genitive, plural, abbreviation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NameCaseModel {\n");
    
    sb.append("    nominative: ").append(toIndentedString(nominative)).append("\n");
    sb.append("    genitive: ").append(toIndentedString(genitive)).append("\n");
    sb.append("    plural: ").append(toIndentedString(plural)).append("\n");
    sb.append("    abbreviation: ").append(toIndentedString(abbreviation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

