/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Цепочка действий акции.
 */
@ApiModel(description = "Цепочка действий акции.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class OfferActionsChainDto {

  @JsonProperty("filters")
  private List<FilterDto> filters = null;

  @JsonProperty("actions")
  private List<ActionDto> actions = null;

  @JsonProperty("order")
  private Integer order = null;

  @JsonProperty("name")
  private String name = null;

  public OfferActionsChainDto filters(List<FilterDto> filters) {
    this.filters = filters;
    return this;
  }

  public OfferActionsChainDto addFiltersItem(FilterDto filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

  /**
   * Фильтры цепочки.
   * @return filters
  **/
  @ApiModelProperty(value = "Фильтры цепочки.")
  public List<FilterDto> getFilters() {
    return filters;
  }

  public void setFilters(List<FilterDto> filters) {
    this.filters = filters;
  }

  public OfferActionsChainDto actions(List<ActionDto> actions) {
    this.actions = actions;
    return this;
  }

  public OfferActionsChainDto addActionsItem(ActionDto actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Действия.
   * @return actions
  **/
  @ApiModelProperty(value = "Действия.")
  public List<ActionDto> getActions() {
    return actions;
  }

  public void setActions(List<ActionDto> actions) {
    this.actions = actions;
  }

  public OfferActionsChainDto order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Порядковый номер цепочки.
   * @return order
  **/
  @ApiModelProperty(value = "Порядковый номер цепочки.")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

  public OfferActionsChainDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Название цепочки.
   * @return name
  **/
  @ApiModelProperty(value = "Название цепочки.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferActionsChainDto offerActionsChainDto = (OfferActionsChainDto) o;
    return Objects.equals(this.filters, offerActionsChainDto.filters) &&
        Objects.equals(this.actions, offerActionsChainDto.actions) &&
        Objects.equals(this.order, offerActionsChainDto.order) &&
        Objects.equals(this.name, offerActionsChainDto.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filters, actions, order, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferActionsChainDto {\n");
    
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

