/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель операции по покупке.
 */
@ApiModel(description = "Модель операции по покупке.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class OperationsViewModel {
  @JsonProperty("cardNumber")
  private CardViewModel cardNumber = null;

  @JsonProperty("amounts")
  private List<MoneyViewModel> amounts = null;

  /**
   * Состояние операции.
   */
  public enum StateEnum {
    CREATED("Created"),
    
    CONFIRMED("Confirmed"),
    
    CANCELED("Canceled"),
    
    DELETED("Deleted");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  /**
   * Тип операции.
   */
  public enum TypeEnum {
    PAYMENTOPERATION("PaymentOperation"),
    
    DEPOSITOPERATION("DepositOperation"),
    
    CASHBACKOPERATION("CashbackOperation"),
    
    REFUNDCASHBACKOPERATION("RefundCashbackOperation"),
    
    REFUNDPAYMENTOPERATION("RefundPaymentOperation"),
    
    CHARGINGOPERATION("ChargingOperation"),
    
    DIRECTDISCOUNTOPERATION("DirectDiscountOperation"),
    
    WITHDRAWOPERATION("WithdrawOperation"),
    
    GIFTCARDPAYMENTOPERATION("GiftCardPaymentOperation"),
    
    REFUNDGIFTCARDPAYMENTOPERATION("RefundGiftCardPaymentOperation");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("personIdentifier")
  private String personIdentifier = null;

  public OperationsViewModel cardNumber(CardViewModel cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Номер карты.
   * @return cardNumber
  **/
  @ApiModelProperty(value = "Номер карты.")
  public CardViewModel getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(CardViewModel cardNumber) {
    this.cardNumber = cardNumber;
  }

  public OperationsViewModel amounts(List<MoneyViewModel> amounts) {
    this.amounts = amounts;
    return this;
  }

  public OperationsViewModel addAmountsItem(MoneyViewModel amountsItem) {
    if (this.amounts == null) {
      this.amounts = new ArrayList<>();
    }
    this.amounts.add(amountsItem);
    return this;
  }

   /**
   * Количество средств.
   * @return amounts
  **/
  @ApiModelProperty(value = "Количество средств.")
  public List<MoneyViewModel> getAmounts() {
    return amounts;
  }

  public void setAmounts(List<MoneyViewModel> amounts) {
    this.amounts = amounts;
  }

  public OperationsViewModel state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Состояние операции.
   * @return state
  **/
  @ApiModelProperty(value = "Состояние операции.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public OperationsViewModel creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Дата создания.
   * @return creationDate
  **/
  @ApiModelProperty(value = "Дата создания.")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public OperationsViewModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Тип операции.
   * @return type
  **/
  @ApiModelProperty(value = "Тип операции.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public OperationsViewModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание операции.
   * @return description
  **/
  @ApiModelProperty(value = "Описание операции.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OperationsViewModel personIdentifier(String personIdentifier) {
    this.personIdentifier = personIdentifier;
    return this;
  }

   /**
   * Ид пользователя связанный с операцией.
   * @return personIdentifier
  **/
  @ApiModelProperty(value = "Ид пользователя связанный с операцией.")
  public String getPersonIdentifier() {
    return personIdentifier;
  }

  public void setPersonIdentifier(String personIdentifier) {
    this.personIdentifier = personIdentifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OperationsViewModel operationsViewModel = (OperationsViewModel) o;
    return Objects.equals(this.cardNumber, operationsViewModel.cardNumber) &&
        Objects.equals(this.amounts, operationsViewModel.amounts) &&
        Objects.equals(this.state, operationsViewModel.state) &&
        Objects.equals(this.creationDate, operationsViewModel.creationDate) &&
        Objects.equals(this.type, operationsViewModel.type) &&
        Objects.equals(this.description, operationsViewModel.description) &&
        Objects.equals(this.personIdentifier, operationsViewModel.personIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardNumber, amounts, state, creationDate, type, description, personIdentifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OperationsViewModel {\n");
    
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    amounts: ").append(toIndentedString(amounts)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    personIdentifier: ").append(toIndentedString(personIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

