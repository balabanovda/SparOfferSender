/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель атрибута клиента.
 */
@ApiModel(description = "Модель атрибута клиента.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class PersonAttributeModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Тип атрибута.
   */
  public enum UserAttributeTypeEnum {
    NOTIFIER("Notifier"),
    
    QUESTION("Question"),
    
    PARTNERINFO("PartnerInfo"),
    
    COMMON("Common"),
    
    PERSONALOFFER("PersonalOffer");

    private String value;

    UserAttributeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserAttributeTypeEnum fromValue(String text) {
      for (UserAttributeTypeEnum b : UserAttributeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("userAttributeType")
  private UserAttributeTypeEnum userAttributeType = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("logicalName")
  private String logicalName = null;

  @JsonProperty("fixedAnswers")
  private List<String> fixedAnswers = null;

  public PersonAttributeModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор атрибута.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор атрибута.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public PersonAttributeModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Наименование атрибута.
   * @return name
  **/
  @ApiModelProperty(value = "Наименование атрибута.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PersonAttributeModel userAttributeType(UserAttributeTypeEnum userAttributeType) {
    this.userAttributeType = userAttributeType;
    return this;
  }

   /**
   * Тип атрибута.
   * @return userAttributeType
  **/
  @ApiModelProperty(value = "Тип атрибута.")
  public UserAttributeTypeEnum getUserAttributeType() {
    return userAttributeType;
  }

  public void setUserAttributeType(UserAttributeTypeEnum userAttributeType) {
    this.userAttributeType = userAttributeType;
  }

  public PersonAttributeModel type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Тип атрибута.
   * @return type
  **/
  @ApiModelProperty(value = "Тип атрибута.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public PersonAttributeModel logicalName(String logicalName) {
    this.logicalName = logicalName;
    return this;
  }

   /**
   * Gets or sets the logical name.
   * @return logicalName
  **/
  @ApiModelProperty(value = "Gets or sets the logical name.")
  public String getLogicalName() {
    return logicalName;
  }

  public void setLogicalName(String logicalName) {
    this.logicalName = logicalName;
  }

  public PersonAttributeModel fixedAnswers(List<String> fixedAnswers) {
    this.fixedAnswers = fixedAnswers;
    return this;
  }

  public PersonAttributeModel addFixedAnswersItem(String fixedAnswersItem) {
    if (this.fixedAnswers == null) {
      this.fixedAnswers = new ArrayList<>();
    }
    this.fixedAnswers.add(fixedAnswersItem);
    return this;
  }

   /**
   * Варианты ответа.
   * @return fixedAnswers
  **/
  @ApiModelProperty(value = "Варианты ответа.")
  public List<String> getFixedAnswers() {
    return fixedAnswers;
  }

  public void setFixedAnswers(List<String> fixedAnswers) {
    this.fixedAnswers = fixedAnswers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonAttributeModel personAttributeModel = (PersonAttributeModel) o;
    return Objects.equals(this.id, personAttributeModel.id) &&
        Objects.equals(this.name, personAttributeModel.name) &&
        Objects.equals(this.userAttributeType, personAttributeModel.userAttributeType) &&
        Objects.equals(this.type, personAttributeModel.type) &&
        Objects.equals(this.logicalName, personAttributeModel.logicalName) &&
        Objects.equals(this.fixedAnswers, personAttributeModel.fixedAnswers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, userAttributeType, type, logicalName, fixedAnswers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonAttributeModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userAttributeType: ").append(toIndentedString(userAttributeType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    logicalName: ").append(toIndentedString(logicalName)).append("\n");
    sb.append("    fixedAnswers: ").append(toIndentedString(fixedAnswers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

