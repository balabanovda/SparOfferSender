/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * Информация о дополнительной карте.
 */
@ApiModel(description = "Информация о дополнительной карте.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class SecondaryCardInfoModel {
  @JsonProperty("pinCode")
  private String pinCode = null;

  @JsonProperty("strips")
  private StripNumbers strips = null;

  @JsonProperty("canUnBlocking")
  private Boolean canUnBlocking = null;

  @JsonProperty("passwordRequired")
  private Boolean passwordRequired = null;

  @JsonProperty("isDeleted")
  private Boolean isDeleted = null;

  @JsonProperty("replacementDate")
  private OffsetDateTime replacementDate = null;

  /**
   * Источник замены.
   */
  public enum ReplacementSourceEnum {
    USERPORTAL("UserPortal"),
    
    CALLCENTER("CallCenter"),
    
    DEVICE("Device");

    private String value;

    ReplacementSourceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReplacementSourceEnum fromValue(String text) {
      for (ReplacementSourceEnum b : ReplacementSourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("replacementSource")
  private ReplacementSourceEnum replacementSource = null;

  @JsonProperty("cardCategory")
  private CardCategoryInfo cardCategory = null;

  @JsonProperty("cardOwnerInfo")
  private UserInfoBase cardOwnerInfo = null;

  @JsonProperty("id")
  private Integer id = null;

  /**
   * Статус.
   */
  public enum StateEnum {
    EMITTED("Emitted"),
    
    PACKED("Packed"),
    
    ACTIVATED("Activated"),
    
    REPLACED("Replaced"),
    
    CREATING("Creating"),
    
    CREATED("Created"),
    
    PREPARED("Prepared"),
    
    ISSUED("Issued");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("number")
  private String number = null;

  @JsonProperty("barCode")
  private String barCode = null;

  @JsonProperty("block")
  private Boolean block = null;

  @JsonProperty("parentCardId")
  private Integer parentCardId = null;

  public SecondaryCardInfoModel pinCode(String pinCode) {
    this.pinCode = pinCode;
    return this;
  }

   /**
   * Пинкод.
   * @return pinCode
  **/
  @ApiModelProperty(value = "Пинкод.")
  public String getPinCode() {
    return pinCode;
  }

  public void setPinCode(String pinCode) {
    this.pinCode = pinCode;
  }

  public SecondaryCardInfoModel strips(StripNumbers strips) {
    this.strips = strips;
    return this;
  }

   /**
   * Номера магнитной полосы.
   * @return strips
  **/
  @ApiModelProperty(value = "Номера магнитной полосы.")
  public StripNumbers getStrips() {
    return strips;
  }

  public void setStrips(StripNumbers strips) {
    this.strips = strips;
  }

  public SecondaryCardInfoModel canUnBlocking(Boolean canUnBlocking) {
    this.canUnBlocking = canUnBlocking;
    return this;
  }

   /**
   * Возможна ли разблокировка карты.
   * @return canUnBlocking
  **/
  @ApiModelProperty(value = "Возможна ли разблокировка карты.")
  public Boolean isCanUnBlocking() {
    return canUnBlocking;
  }

  public void setCanUnBlocking(Boolean canUnBlocking) {
    this.canUnBlocking = canUnBlocking;
  }

  public SecondaryCardInfoModel passwordRequired(Boolean passwordRequired) {
    this.passwordRequired = passwordRequired;
    return this;
  }

   /**
   * Нужна ли проверка пароля.
   * @return passwordRequired
  **/
  @ApiModelProperty(value = "Нужна ли проверка пароля.")
  public Boolean isPasswordRequired() {
    return passwordRequired;
  }

  public void setPasswordRequired(Boolean passwordRequired) {
    this.passwordRequired = passwordRequired;
  }

  public SecondaryCardInfoModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Удалена или нет.
   * @return isDeleted
  **/
  @ApiModelProperty(value = "Удалена или нет.")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public SecondaryCardInfoModel replacementDate(OffsetDateTime replacementDate) {
    this.replacementDate = replacementDate;
    return this;
  }

   /**
   * Дата замены.
   * @return replacementDate
  **/
  @ApiModelProperty(value = "Дата замены.")
  public OffsetDateTime getReplacementDate() {
    return replacementDate;
  }

  public void setReplacementDate(OffsetDateTime replacementDate) {
    this.replacementDate = replacementDate;
  }

  public SecondaryCardInfoModel replacementSource(ReplacementSourceEnum replacementSource) {
    this.replacementSource = replacementSource;
    return this;
  }

   /**
   * Источник замены.
   * @return replacementSource
  **/
  @ApiModelProperty(value = "Источник замены.")
  public ReplacementSourceEnum getReplacementSource() {
    return replacementSource;
  }

  public void setReplacementSource(ReplacementSourceEnum replacementSource) {
    this.replacementSource = replacementSource;
  }

  public SecondaryCardInfoModel cardCategory(CardCategoryInfo cardCategory) {
    this.cardCategory = cardCategory;
    return this;
  }

   /**
   * Информация о категории карты.
   * @return cardCategory
  **/
  @ApiModelProperty(value = "Информация о категории карты.")
  public CardCategoryInfo getCardCategory() {
    return cardCategory;
  }

  public void setCardCategory(CardCategoryInfo cardCategory) {
    this.cardCategory = cardCategory;
  }

  public SecondaryCardInfoModel cardOwnerInfo(UserInfoBase cardOwnerInfo) {
    this.cardOwnerInfo = cardOwnerInfo;
    return this;
  }

   /**
   * Информация о владельце карты.
   * @return cardOwnerInfo
  **/
  @ApiModelProperty(value = "Информация о владельце карты.")
  public UserInfoBase getCardOwnerInfo() {
    return cardOwnerInfo;
  }

  public void setCardOwnerInfo(UserInfoBase cardOwnerInfo) {
    this.cardOwnerInfo = cardOwnerInfo;
  }

  public SecondaryCardInfoModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Ифентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Ифентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SecondaryCardInfoModel state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Статус.
   * @return state
  **/
  @ApiModelProperty(value = "Статус.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public SecondaryCardInfoModel number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Номер карты.
   * @return number
  **/
  @ApiModelProperty(value = "Номер карты.")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public SecondaryCardInfoModel barCode(String barCode) {
    this.barCode = barCode;
    return this;
  }

   /**
   * Баркод.
   * @return barCode
  **/
  @ApiModelProperty(value = "Баркод.")
  public String getBarCode() {
    return barCode;
  }

  public void setBarCode(String barCode) {
    this.barCode = barCode;
  }

  public SecondaryCardInfoModel block(Boolean block) {
    this.block = block;
    return this;
  }

   /**
   * Заблокирована или нет.
   * @return block
  **/
  @ApiModelProperty(value = "Заблокирована или нет.")
  public Boolean isBlock() {
    return block;
  }

  public void setBlock(Boolean block) {
    this.block = block;
  }

  public SecondaryCardInfoModel parentCardId(Integer parentCardId) {
    this.parentCardId = parentCardId;
    return this;
  }

   /**
   * Родительская карта для текущей.
   * @return parentCardId
  **/
  @ApiModelProperty(value = "Родительская карта для текущей.")
  public Integer getParentCardId() {
    return parentCardId;
  }

  public void setParentCardId(Integer parentCardId) {
    this.parentCardId = parentCardId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecondaryCardInfoModel secondaryCardInfoModel = (SecondaryCardInfoModel) o;
    return Objects.equals(this.pinCode, secondaryCardInfoModel.pinCode) &&
        Objects.equals(this.strips, secondaryCardInfoModel.strips) &&
        Objects.equals(this.canUnBlocking, secondaryCardInfoModel.canUnBlocking) &&
        Objects.equals(this.passwordRequired, secondaryCardInfoModel.passwordRequired) &&
        Objects.equals(this.isDeleted, secondaryCardInfoModel.isDeleted) &&
        Objects.equals(this.replacementDate, secondaryCardInfoModel.replacementDate) &&
        Objects.equals(this.replacementSource, secondaryCardInfoModel.replacementSource) &&
        Objects.equals(this.cardCategory, secondaryCardInfoModel.cardCategory) &&
        Objects.equals(this.cardOwnerInfo, secondaryCardInfoModel.cardOwnerInfo) &&
        Objects.equals(this.id, secondaryCardInfoModel.id) &&
        Objects.equals(this.state, secondaryCardInfoModel.state) &&
        Objects.equals(this.number, secondaryCardInfoModel.number) &&
        Objects.equals(this.barCode, secondaryCardInfoModel.barCode) &&
        Objects.equals(this.block, secondaryCardInfoModel.block) &&
        Objects.equals(this.parentCardId, secondaryCardInfoModel.parentCardId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pinCode, strips, canUnBlocking, passwordRequired, isDeleted, replacementDate, replacementSource, cardCategory, cardOwnerInfo, id, state, number, barCode, block, parentCardId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecondaryCardInfoModel {\n");
    
    sb.append("    pinCode: ").append(toIndentedString(pinCode)).append("\n");
    sb.append("    strips: ").append(toIndentedString(strips)).append("\n");
    sb.append("    canUnBlocking: ").append(toIndentedString(canUnBlocking)).append("\n");
    sb.append("    passwordRequired: ").append(toIndentedString(passwordRequired)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    replacementDate: ").append(toIndentedString(replacementDate)).append("\n");
    sb.append("    replacementSource: ").append(toIndentedString(replacementSource)).append("\n");
    sb.append("    cardCategory: ").append(toIndentedString(cardCategory)).append("\n");
    sb.append("    cardOwnerInfo: ").append(toIndentedString(cardOwnerInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    barCode: ").append(toIndentedString(barCode)).append("\n");
    sb.append("    block: ").append(toIndentedString(block)).append("\n");
    sb.append("    parentCardId: ").append(toIndentedString(parentCardId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

