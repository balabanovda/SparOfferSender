/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Фильтр типов подписок.
 */
@ApiModel(description = "Фильтр типов подписок.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class SubscriptionTypeFilter {
  @JsonProperty("searchedText")
  private String searchedText = null;

  /**
   * Тип подписки.
   */
  public enum SubscriptionTypeEnum {
    CASHBACK("Cashback"),
    
    PAYMENT("Payment"),
    
    REFILL("Refill"),
    
    OFFER("Offer"),
    
    SYSTEM("System"),
    
    MAILING("Mailing"),
    
    REFUND("Refund"),
    
    DEVICEEMULATION("DeviceEmulation");

    private String value;

    SubscriptionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubscriptionTypeEnum fromValue(String text) {
      for (SubscriptionTypeEnum b : SubscriptionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("subscriptionType")
  private SubscriptionTypeEnum subscriptionType = null;

  /**
   * Тип канала.
   */
  public enum NotificationGatewayTypeEnum {
    SMS("Sms"),
    
    EMAIL("Email"),
    
    PUSH("Push"),
    
    VIBER("Viber"),
    
    SOCIALSNETWORKS("SocialsNetworks"),
    
    CHATBOT("ChatBot");

    private String value;

    NotificationGatewayTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NotificationGatewayTypeEnum fromValue(String text) {
      for (NotificationGatewayTypeEnum b : NotificationGatewayTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("notificationGatewayType")
  private NotificationGatewayTypeEnum notificationGatewayType = null;

  public SubscriptionTypeFilter searchedText(String searchedText) {
    this.searchedText = searchedText;
    return this;
  }

   /**
   * Текст поиска.
   * @return searchedText
  **/
  @ApiModelProperty(value = "Текст поиска.")
  public String getSearchedText() {
    return searchedText;
  }

  public void setSearchedText(String searchedText) {
    this.searchedText = searchedText;
  }

  public SubscriptionTypeFilter subscriptionType(SubscriptionTypeEnum subscriptionType) {
    this.subscriptionType = subscriptionType;
    return this;
  }

   /**
   * Тип подписки.
   * @return subscriptionType
  **/
  @ApiModelProperty(value = "Тип подписки.")
  public SubscriptionTypeEnum getSubscriptionType() {
    return subscriptionType;
  }

  public void setSubscriptionType(SubscriptionTypeEnum subscriptionType) {
    this.subscriptionType = subscriptionType;
  }

  public SubscriptionTypeFilter notificationGatewayType(NotificationGatewayTypeEnum notificationGatewayType) {
    this.notificationGatewayType = notificationGatewayType;
    return this;
  }

   /**
   * Тип канала.
   * @return notificationGatewayType
  **/
  @ApiModelProperty(value = "Тип канала.")
  public NotificationGatewayTypeEnum getNotificationGatewayType() {
    return notificationGatewayType;
  }

  public void setNotificationGatewayType(NotificationGatewayTypeEnum notificationGatewayType) {
    this.notificationGatewayType = notificationGatewayType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionTypeFilter subscriptionTypeFilter = (SubscriptionTypeFilter) o;
    return Objects.equals(this.searchedText, subscriptionTypeFilter.searchedText) &&
        Objects.equals(this.subscriptionType, subscriptionTypeFilter.subscriptionType) &&
        Objects.equals(this.notificationGatewayType, subscriptionTypeFilter.notificationGatewayType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchedText, subscriptionType, notificationGatewayType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionTypeFilter {\n");
    
    sb.append("    searchedText: ").append(toIndentedString(searchedText)).append("\n");
    sb.append("    subscriptionType: ").append(toIndentedString(subscriptionType)).append("\n");
    sb.append("    notificationGatewayType: ").append(toIndentedString(notificationGatewayType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

