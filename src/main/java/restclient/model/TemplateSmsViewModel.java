/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Действия для оповещения по смс.
 */
@ApiModel(description = "Действия для оповещения по смс.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class TemplateSmsViewModel {
  /**
   * Уведомление будет рассылаться не чаще чем раз в указанный период.              Если не указано, то каждый раз при срабатывании лимита.
   */
  public enum FrequencyEnum {
    HOUR("Hour"),
    
    DAY("Day"),
    
    WEEK("Week"),
    
    MONTH("Month");

    private String value;

    FrequencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FrequencyEnum fromValue(String text) {
      for (FrequencyEnum b : FrequencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("frequency")
  private FrequencyEnum frequency = null;

  @JsonProperty("message")
  private String message = null;

  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("isArchived")
  private Boolean isArchived = null;

  @JsonProperty("phone")
  private String phone = null;

  public TemplateSmsViewModel frequency(FrequencyEnum frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Уведомление будет рассылаться не чаще чем раз в указанный период.              Если не указано, то каждый раз при срабатывании лимита.
   * @return frequency
  **/
  @ApiModelProperty(value = "Уведомление будет рассылаться не чаще чем раз в указанный период.              Если не указано, то каждый раз при срабатывании лимита.")
  public FrequencyEnum getFrequency() {
    return frequency;
  }

  public void setFrequency(FrequencyEnum frequency) {
    this.frequency = frequency;
  }

  public TemplateSmsViewModel message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Текст уведомления.
   * @return message
  **/
  @ApiModelProperty(value = "Текст уведомления.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public TemplateSmsViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public TemplateSmsViewModel isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * В архивном состоянии или нет.
   * @return isArchived
  **/
  @ApiModelProperty(value = "В архивном состоянии или нет.")
  public Boolean isIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }

  public TemplateSmsViewModel phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Номер телефона.
   * @return phone
  **/
  @ApiModelProperty(value = "Номер телефона.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateSmsViewModel templateSmsViewModel = (TemplateSmsViewModel) o;
    return Objects.equals(this.frequency, templateSmsViewModel.frequency) &&
        Objects.equals(this.message, templateSmsViewModel.message) &&
        Objects.equals(this.id, templateSmsViewModel.id) &&
        Objects.equals(this.isArchived, templateSmsViewModel.isArchived) &&
        Objects.equals(this.phone, templateSmsViewModel.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frequency, message, id, isArchived, phone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateSmsViewModel {\n");
    
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

