/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package restclient.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Модель обновления заявки.
 */
@ApiModel(description = "Модель обновления заявки.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class UpdateTicketModel {
  @JsonProperty("ticketId")
  private String ticketId = null;

  /**
   * Идентификатор дерегистрируемого пользователя.
   */
  public enum TicketTypeEnum {
    DEFAULT("Default"),
    
    CARDBLOCK("CardBlock"),
    
    CARDUNBLOCK("CardUnBlock"),
    
    CARDACTIVATE("CardActivate"),
    
    CARDCHANGE("CardChange"),
    
    CHANGEPHONE("ChangePhone"),
    
    SENDPASSWORD("SendPassword"),
    
    UPDATESUBSCRIPTIONS("UpdateSubscriptions"),
    
    BLOCKACCOUNT("BlockAccount"),
    
    UNBLOCKACCOUNT("UnBlockAccount"),
    
    DELETECARD("DeleteCard"),
    
    RECOVERYCARD("RecoveryCard"),
    
    CHANGEEMAIL("ChangeEmail"),
    
    CHANGECARDCATEGORY("ChangeCardCategory"),
    
    DEREGISTER("Deregister"),
    
    COMPLETECALL("CompleteCall"),
    
    SETCARD("SetCard");

    private String value;

    TicketTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TicketTypeEnum fromValue(String text) {
      for (TicketTypeEnum b : TicketTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("ticketType")
  private TicketTypeEnum ticketType = null;

  public UpdateTicketModel ticketId(String ticketId) {
    this.ticketId = ticketId;
    return this;
  }

   /**
   * Идентификатор заявки в OTRS.
   * @return ticketId
  **/
  @ApiModelProperty(value = "Идентификатор заявки в OTRS.")
  public String getTicketId() {
    return ticketId;
  }

  public void setTicketId(String ticketId) {
    this.ticketId = ticketId;
  }

  public UpdateTicketModel ticketType(TicketTypeEnum ticketType) {
    this.ticketType = ticketType;
    return this;
  }

   /**
   * Идентификатор дерегистрируемого пользователя.
   * @return ticketType
  **/
  @ApiModelProperty(value = "Идентификатор дерегистрируемого пользователя.")
  public TicketTypeEnum getTicketType() {
    return ticketType;
  }

  public void setTicketType(TicketTypeEnum ticketType) {
    this.ticketType = ticketType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateTicketModel updateTicketModel = (UpdateTicketModel) o;
    return Objects.equals(this.ticketId, updateTicketModel.ticketId) &&
        Objects.equals(this.ticketType, updateTicketModel.ticketType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ticketId, ticketType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateTicketModel {\n");
    
    sb.append("    ticketId: ").append(toIndentedString(ticketId)).append("\n");
    sb.append("    ticketType: ").append(toIndentedString(ticketType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

