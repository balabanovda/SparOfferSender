{
  "swagger": "2.0",
  "info": {
    "version": "V1",
    "title": "Loymax.SystemApi",
    "description": "Loymax version: 2020.1.1.55071",
    "x-swagger-net-version": "8.3.23.1103"
  },
  "host": "sparmv-stg.loymax.tech",
  "basePath": "/systemapi",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Users/{personId}/Accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Получить информацию о счетах клиента.",
        "operationId": "Account_GetAccountModels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfAccountViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/Anketa/Questions": {
      "get": {
        "tags": [
          "Anketa"
        ],
        "summary": "Получить список вопросов анкеты.",
        "operationId": "Anketa_GetQuestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfAnketaQuestionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Announcements": {
      "get": {
        "tags": [
          "Announcement"
        ],
        "summary": "Возвращает список всех реклам для рекламного места.",
        "operationId": "Announcement_GetAnnouncements",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какой рекламы.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.titleSubstr",
            "in": "query",
            "description": "Подстрока для поиска по названию рекламы.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.spaceName",
            "in": "query",
            "description": "Подстрока для поиска по названию рекламного места.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.state",
            "in": "query",
            "description": "Gets or sets the state.",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "Ready",
              "Published"
            ],
            "x-loymax-type": "Loymax.Business.Announcement.Model.AnnouncementState, Loymax.Business.Announcement.Model",
            "x-loymax-enum-type": "AnnouncementState"
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "description": "Начальная дата выборки.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "description": "Конечная дата выборки.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.archivedState",
            "in": "query",
            "description": "Сущности из архива.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfSystemApiAnnouncementModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsView"
        ]
      },
      "put": {
        "tags": [
          "Announcement"
        ],
        "summary": "Создать рекламу.",
        "operationId": "Announcement_CreateAnnouncement",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель рекламы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemApiAnnouncementModel"
            }
          },
          {
            "name": "timeZone",
            "in": "header",
            "description": "Временная зона.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsManage"
        ]
      }
    },
    "/api/Announcements/{id}": {
      "get": {
        "tags": [
          "Announcement"
        ],
        "summary": "Возвращает рекламу по идентификатору.",
        "operationId": "Announcement_GetAnnouncement",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSystemApiAnnouncementModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsView"
        ]
      },
      "post": {
        "tags": [
          "Announcement"
        ],
        "summary": "Обновить рекламу.",
        "operationId": "Announcement_UpdateAnnouncement",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор рекламы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель рекламы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemApiAnnouncementModel"
            }
          },
          {
            "name": "timeZone",
            "in": "header",
            "description": "Временная зона.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsManage"
        ]
      },
      "delete": {
        "tags": [
          "Announcement"
        ],
        "summary": "Удалить рекламу.",
        "operationId": "Announcement_DeleteAnnouncement",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsManage"
        ]
      }
    },
    "/api/Announcements/{id}/complete": {
      "post": {
        "tags": [
          "Announcement"
        ],
        "summary": "Завершить создание рекламы.",
        "operationId": "Announcement_CompleteAnnouncement",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsManage"
        ]
      }
    },
    "/api/Announcements/{id}/publish": {
      "post": {
        "tags": [
          "Announcement"
        ],
        "summary": "Опубликовать рекламу.",
        "operationId": "Announcement_PublishAnnouncement",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsPublish"
        ]
      }
    },
    "/api/Announcements/{id}/archive": {
      "post": {
        "tags": [
          "Announcement"
        ],
        "summary": "Отправить рекламу в архив.",
        "operationId": "Announcement_ArchiveAnnouncement",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsManage"
        ]
      }
    },
    "/api/Announcements/{id}/restore": {
      "post": {
        "tags": [
          "Announcement"
        ],
        "summary": "Восстановить рекламу из архива.",
        "operationId": "Announcement_RestoreAnnouncement",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementsManage"
        ]
      }
    },
    "/api/AnnouncementAttribute": {
      "get": {
        "tags": [
          "AnnouncementAttribute"
        ],
        "summary": "Получить все атрибуты.",
        "operationId": "AnnouncementAttribute_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfAttributeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesView",
          "AnnouncementsView"
        ]
      },
      "put": {
        "tags": [
          "AnnouncementAttribute"
        ],
        "summary": "Создать атрибут.",
        "operationId": "AnnouncementAttribute_CreateAttribute",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attribute",
            "in": "body",
            "description": "Модель атрибута.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttributeModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesManage"
        ]
      }
    },
    "/api/AnnouncementAttribute/{id}": {
      "get": {
        "tags": [
          "AnnouncementAttribute"
        ],
        "summary": "Получить атрибут по Id.",
        "operationId": "AnnouncementAttribute_GetAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id атрибута.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfAttributeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesView",
          "AnnouncementsView"
        ]
      },
      "post": {
        "tags": [
          "AnnouncementAttribute"
        ],
        "summary": "Обновить атрибут.",
        "operationId": "AnnouncementAttribute_UpdateAttribute",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id атрибута.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attribute",
            "in": "body",
            "description": "Модель атрибута.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttributeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesManage"
        ]
      },
      "delete": {
        "tags": [
          "AnnouncementAttribute"
        ],
        "summary": "Удалить атрибут.",
        "operationId": "AnnouncementAttribute_DeleteAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id атрибута.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesManage"
        ]
      }
    },
    "/api/AnnouncementAttribute/availableMapping": {
      "get": {
        "tags": [
          "AnnouncementAttribute"
        ],
        "summary": "The get available mappings.",
        "operationId": "AnnouncementAttribute_GetAvailableMappings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attributeType",
            "in": "query",
            "description": "The attribute type.",
            "required": true,
            "type": "string",
            "enum": [
              "String",
              "Boolean",
              "Numeric",
              "DateTime",
              "Image",
              "Video",
              "Html",
              "Dictionary",
              "Mechant"
            ],
            "x-loymax-type": "Loymax.Business.Announcement.Model.AttributeType, Loymax.Business.Announcement",
            "x-loymax-enum-type": "AttributeType"
          },
          {
            "name": "relatedAnnouncementType",
            "in": "query",
            "description": "The related announcement type.",
            "required": true,
            "type": "string",
            "enum": [
              "Offer"
            ],
            "x-loymax-type": "Loymax.Business.Announcement.Model.RelatedAnnouncementType, Loymax.Business.Announcement.Model",
            "x-loymax-enum-type": "RelatedAnnouncementType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfRelatedEntityPropertyModel[]"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesView"
        ]
      }
    },
    "/api/AnnouncementSpace": {
      "get": {
        "tags": [
          "AnnouncementSpace"
        ],
        "summary": "Получить все рекламные места.",
        "operationId": "AnnouncementSpace_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfSpaceModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesView",
          "AnnouncementsView"
        ]
      },
      "put": {
        "tags": [
          "AnnouncementSpace"
        ],
        "summary": "The create space.",
        "operationId": "AnnouncementSpace_CreateSpace",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "space",
            "in": "body",
            "description": "The space.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpaceModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesManage"
        ]
      }
    },
    "/api/AnnouncementSpace/{id}/attributes": {
      "get": {
        "tags": [
          "AnnouncementSpace"
        ],
        "summary": "Получить все атрибуты конкретного рекламного места.",
        "operationId": "AnnouncementSpace_GetBySpace",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfAttributeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesView",
          "AnnouncementsView"
        ]
      }
    },
    "/api/AnnouncementSpace/{id}": {
      "get": {
        "tags": [
          "AnnouncementSpace"
        ],
        "summary": "Получить рекламное место по id.",
        "operationId": "AnnouncementSpace_GetSpace",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id рекламного места.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSpaceModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesView"
        ]
      },
      "post": {
        "tags": [
          "AnnouncementSpace"
        ],
        "summary": "The update space.",
        "operationId": "AnnouncementSpace_UpdateSpace",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "space",
            "in": "body",
            "description": "The space.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpaceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesManage"
        ]
      },
      "delete": {
        "tags": [
          "AnnouncementSpace"
        ],
        "summary": "The delete space.",
        "operationId": "AnnouncementSpace_DeleteSpace",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnnouncementSpacesManage"
        ]
      }
    },
    "/api/OAuth/Applications": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Получает список приложений.",
        "operationId": "Application_GetFilteredPagedList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.mode",
            "in": "query",
            "description": "Режим выбора архивных объектов.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.isOrderedByAscending",
            "in": "query",
            "description": "Режим прямой сортировки.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.partnerIds",
            "in": "query",
            "description": "Id партнеров.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfApplicationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationView"
        ]
      },
      "put": {
        "tags": [
          "Application"
        ],
        "summary": "Создание нового приложения.",
        "operationId": "Application_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель для создания приложения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateApplicationModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfApplicationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/OAuth/Applications/{id}": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Получает приложение по идентификатору.",
        "operationId": "Application_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор приложения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfApplicationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationView"
        ]
      },
      "post": {
        "tags": [
          "Application"
        ],
        "summary": "Редактирование приложения.",
        "operationId": "Application_Edit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор приложения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель для изменения приложения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      },
      "delete": {
        "tags": [
          "Application"
        ],
        "summary": "Удаление приложения.",
        "operationId": "Application_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор приложения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/OAuth/Applications/{id}/Restore": {
      "post": {
        "tags": [
          "Application"
        ],
        "summary": "Востановить приложение.",
        "operationId": "Application_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/OAuth/Applications/{id}/Secret/Generate": {
      "post": {
        "tags": [
          "Application"
        ],
        "summary": "Генерирует новый секретный ключ приложения.",
        "operationId": "Application_GenerateSecret",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор приложения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/OAuth/Applications/{id}/Secret": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Получает секрет приложения по идентификатору.",
        "operationId": "Application_GetSecret",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор приложения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/OAuth/Applications/{applicationId}/Permissions": {
      "get": {
        "tags": [
          "ApplicationPermission"
        ],
        "summary": "Получить список разрешений приложения.",
        "operationId": "ApplicationPermission_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Идентификатор приложения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationView"
        ]
      },
      "put": {
        "tags": [
          "ApplicationPermission"
        ],
        "operationId": "ApplicationPermission_ChangePermissions",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "permissionChanges",
            "in": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/Attributes": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Получить список всех атрибутов.",
        "operationId": "Attribute_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Id партнера (для получения списка для акции).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nameSearch",
            "in": "query",
            "description": "Название атрибута.",
            "required": false,
            "type": "string"
          },
          {
            "name": "logicalName",
            "in": "query",
            "description": "Логическое имя.",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributeType",
            "in": "query",
            "description": "Тип атрибута.",
            "required": false,
            "type": "string",
            "default": "PersonalOffer",
            "enum": [
              "Notifier",
              "Question",
              "PartnerInfo",
              "Common",
              "PersonalOffer"
            ],
            "x-loymax-type": "Loymax.Common.Portable.UserAttributeType, Loymax.Common.Portable",
            "x-loymax-enum-type": "UserAttributeType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfBaseUserAttributeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UserAttributeView",
          "UserAttributeRead"
        ]
      },
      "put": {
        "tags": [
          "Attribute"
        ],
        "summary": "Создание атрибута.",
        "operationId": "Attribute_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные для создания.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonalOfferAttributeViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UserAttributeManage"
        ]
      }
    },
    "/api/Attributes/{id}": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Получить атрибут по идентификатору.",
        "operationId": "Attribute_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBaseUserAttributeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UserAttributeView",
          "UserAttributeRead"
        ]
      },
      "post": {
        "tags": [
          "Attribute"
        ],
        "summary": "Обновление данных атрибута.",
        "operationId": "Attribute_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные для обновления.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonalOfferAttributeViewModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UserAttributeManage"
        ]
      }
    },
    "/api/deposit": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получить историю операций с бонусами.",
        "operationId": "BatchOperations_GetOperationsHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начальный элемент.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Начало периода.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Конец периода.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.type",
            "in": "query",
            "description": "Тип операций.",
            "required": false,
            "type": "string",
            "enum": [
              "Withdraw",
              "Deposit"
            ],
            "x-loymax-type": "Loymax.Entities.BatchType, Loymax.Entities",
            "x-loymax-enum-type": "BatchType"
          },
          {
            "name": "filter.state",
            "in": "query",
            "description": "Состояние операции.",
            "required": false,
            "type": "string",
            "enum": [
              "NotProcessed",
              "Processed"
            ],
            "x-loymax-type": "Loymax.Entities.BatchState, Loymax.Entities",
            "x-loymax-enum-type": "BatchState"
          },
          {
            "name": "filter.cardNumber",
            "in": "query",
            "description": "Номер карты.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.loyaltyPrograms",
            "in": "query",
            "description": "Список программ лояльности.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.marketingCampaigns",
            "in": "query",
            "description": "Список маркетинговых компаний.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfBatchOperationsBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      },
      "put": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Выполняет начисление или списание средств со счетов группы карт.",
        "operationId": "BatchOperations_Deposit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Данные по операциям.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchOperationsViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDeposit"
        ]
      }
    },
    "/api/deposit/{batchId}": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получить список операций по ID пакета.",
        "operationId": "BatchOperations_GetBatch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "ID пакетной операции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBatchOperationsViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/deposit/{batchId}/operations": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получить список операций по ID пакета.",
        "operationId": "BatchOperations_GetOperations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "ID пакетной операции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начальный элемент.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfOperationViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/deposit/export": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получает историю операций в виде csv-файла.",
        "operationId": "BatchOperations_GetHistoryCsv",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "timeZone",
            "in": "query",
            "description": "Часовой пояс.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Начало периода.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Конец периода.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.type",
            "in": "query",
            "description": "Тип операций.",
            "required": false,
            "type": "string",
            "enum": [
              "Withdraw",
              "Deposit"
            ],
            "x-loymax-type": "Loymax.Entities.BatchType, Loymax.Entities",
            "x-loymax-enum-type": "BatchType"
          },
          {
            "name": "filter.state",
            "in": "query",
            "description": "Состояние операции.",
            "required": false,
            "type": "string",
            "enum": [
              "NotProcessed",
              "Processed"
            ],
            "x-loymax-type": "Loymax.Entities.BatchState, Loymax.Entities",
            "x-loymax-enum-type": "BatchState"
          },
          {
            "name": "filter.cardNumber",
            "in": "query",
            "description": "Номер карты.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.loyaltyPrograms",
            "in": "query",
            "description": "Список программ лояльности.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.marketingCampaigns",
            "in": "query",
            "description": "Список маркетинговых компаний.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/deposit/devices": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Показывает доступные пользователю устройства(кассы) для операций начисления/списания.",
        "operationId": "BatchOperations_GetAvailableDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "substring",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим вывода по признаку удаления.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Ид программы лояльности.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfDeviceBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/deposit/validateCsv": {
      "post": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получить список номеров карт и соответствующих сумм для списания/начисления, извлеченных из CSV-файла.",
        "operationId": "BatchOperations_GetOperationsDataFromCsv",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfParsedBatchOperationsModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDeposit"
        ]
      }
    },
    "/api/deposit/{batchId}/progress": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получить информацию о фоновой обработке операций для группы операций.",
        "operationId": "BatchOperations_GetBatchOperationsQueueProgress",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "Id группы операций.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBatchOperationsQueueInfo"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/deposit/{batchId}/transactionProgress": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получить информацию о фоновой обработке транзакций операций для группы операций.",
        "operationId": "BatchOperations_GetBatchOperationsTransactionQueueProgress",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "Id группы операций.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBatchOperationsTransactionQueueInfo"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/deposit/{batchId}/exportErrors": {
      "get": {
        "tags": [
          "BatchOperations"
        ],
        "summary": "Получить список ошибочных операций для группы операций в виде csv-файла.",
        "operationId": "BatchOperations_GetErrorOperationsCsv",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "Id группы операций.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/emissions/booklets": {
      "get": {
        "tags": [
          "BookletEmission"
        ],
        "summary": "Получить список выпусков буклетов.",
        "operationId": "BookletEmission_GetCardEmissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 5
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfBookletEmissionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionView"
        ]
      },
      "put": {
        "tags": [
          "BookletEmission"
        ],
        "summary": "Создать выпуск буклетов.",
        "operationId": "BookletEmission_CreateCardEmission",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emission",
            "in": "body",
            "description": "Модель выпуска.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookletEmissionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionManage"
        ]
      }
    },
    "/api/emissions/booklets/{id}": {
      "get": {
        "tags": [
          "BookletEmission"
        ],
        "summary": "Получить выпуск буклетов по id.",
        "operationId": "BookletEmission_GetBookletEmission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBookletEmissionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionView"
        ]
      }
    },
    "/api/emissions/booklets/{id}/export": {
      "get": {
        "tags": [
          "BookletEmission"
        ],
        "summary": "Получить выпуск в виде CSV файла.",
        "operationId": "BookletEmission_GetBookletEmissionCsv",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id выпуска буклетов.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionView"
        ]
      }
    },
    "/api/brands": {
      "get": {
        "tags": [
          "Brands"
        ],
        "summary": "Возвращает список всех брендов.",
        "operationId": "Brands_GetBrands",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.state",
            "in": "query",
            "description": "Определяет, возвращать ли объекты с состоянием hidden.",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "Hidden"
            ],
            "x-loymax-type": "Loymax.Entities.BrandInfoState, Loymax.Entities",
            "x-loymax-enum-type": "BrandInfoState"
          },
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.substring",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.sortingIds",
            "in": "query",
            "description": "Идентификаторы брендов, которые будут выбираться первыми.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfBrandViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsView",
          "BrandsRead"
        ]
      },
      "put": {
        "tags": [
          "Brands"
        ],
        "summary": "Создает бренд.",
        "operationId": "Brands_CreateBrand",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandModel",
            "in": "body",
            "description": "Модель бренда.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrandViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsManage"
        ]
      }
    },
    "/api/brands/{id}": {
      "get": {
        "tags": [
          "Brands"
        ],
        "summary": "Получение описания бренда.",
        "operationId": "Brands_GetBrandInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBrandViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsView"
        ]
      },
      "post": {
        "tags": [
          "Brands"
        ],
        "summary": "Редактирование бренда.",
        "operationId": "Brands_UpdateBrand",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "brandModel",
            "in": "body",
            "description": "Модель для редактирования бренда.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrandViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsManage"
        ]
      },
      "delete": {
        "tags": [
          "Brands"
        ],
        "summary": "Удаляет бренд.",
        "operationId": "Brands_DeleteBrand",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsManage"
        ]
      }
    },
    "/api/brands/{brandId}/Images": {
      "get": {
        "tags": [
          "BrandsImages"
        ],
        "summary": "Получить список изображений для бренда.",
        "operationId": "BrandsImages_GetImages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsView"
        ]
      },
      "put": {
        "tags": [
          "BrandsImages"
        ],
        "summary": "Создать изображение.",
        "operationId": "BrandsImages_AddImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Новое изображение.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewImageFileModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsManage"
        ]
      },
      "post": {
        "tags": [
          "BrandsImages"
        ],
        "summary": "Обновить изображение.",
        "operationId": "BrandsImages_EditImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель изображения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedImageFileModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsManage"
        ]
      }
    },
    "/api/brands/{brandId}/Images/{imageId}": {
      "get": {
        "tags": [
          "BrandsImages"
        ],
        "summary": "Получить изображение.",
        "operationId": "BrandsImages_GetImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsView"
        ]
      },
      "delete": {
        "tags": [
          "BrandsImages"
        ],
        "summary": "Удалить изображение.",
        "operationId": "BrandsImages_DeleteImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображение.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BrandsManage"
        ]
      }
    },
    "/api/Events": {
      "get": {
        "tags": [
          "BusinessEvents"
        ],
        "summary": "Возвращает список активностей.",
        "operationId": "BusinessEvents_GetBusinessEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.from",
            "in": "query",
            "description": "С какого элемента брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Сколько элементов брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.activityDateFrom",
            "in": "query",
            "description": "Дата создания с.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.activityDateTo",
            "in": "query",
            "description": "Дата создания по.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.personId",
            "in": "query",
            "description": "Идентификатор пользователя.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.purchaseId",
            "in": "query",
            "description": "Идентификатор покупки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.contextType",
            "in": "query",
            "description": "Тип контекста.",
            "required": false,
            "type": "string",
            "enum": [
              "Unknown",
              "DeviceRequest",
              "ShowcasePurchase",
              "UserDateTimeEvent",
              "BonusLifeTimeEvent",
              "ChangeNotifier",
              "RegistrationEnd",
              "LinkCard",
              "ChangeCardState",
              "SmsRegistration",
              "QuestionnaireUpdate",
              "ExternalCardReplace",
              "PushDeviceRegistration",
              "SendPasswordToCheque",
              "PurchaseOperation",
              "SocialNetworkAction",
              "ManualPayOperation",
              "ReferralActivity",
              "UserDeregistration"
            ],
            "x-loymax-type": "Loymax.Entities.BusinessActivityContextType, Loymax.Entities",
            "x-loymax-enum-type": "BusinessActivityContextType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfBusinessActivityViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BusinessEventsView",
          "EventCalculationsRead"
        ]
      }
    },
    "/api/Events/{eventType}/Variables": {
      "get": {
        "tags": [
          "BusinessEvents"
        ],
        "summary": "Возвращает список доступных переменных контекста.",
        "operationId": "BusinessEvents_GetAvailableVariables",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventType",
            "in": "path",
            "description": "Тип события.",
            "required": true,
            "type": "string",
            "enum": [
              "OnPurchaseCalculate",
              "OnAttachPhone",
              "OnPurchaseConfirm",
              "OnPurchasePayment",
              "OnBalanceRequest",
              "OnCardIssue",
              "OnCardActivation",
              "OnSocialActivity",
              "OnSocialGroupJoin",
              "OnFriendInvite",
              "OnSocialGroupLeave",
              "OnQuestionnaireUpdate",
              "OnMobileAppInstall",
              "OnEndPersonRegistration",
              "OnSocialNetworkLink",
              "OnBonusLifetimeExpired",
              "OnBirthday",
              "OnPurchaseRefund",
              "OnReferralPurchase",
              "OnPurchaseCancel",
              "OnRemoveSocialActivity",
              "OnPurchaseDiscount",
              "OnSendPasswordToCheque",
              "OnGoodsSetProcess",
              "OnAttachEmail",
              "OnBonusLifetimeActivation",
              "OnPurchasePaymentCalculate",
              "OnPurchasePaymentCancel",
              "OnCouponPurchased",
              "OnCouponRefunded",
              "OnPurchaseDeposit",
              "OnCardAttach",
              "OnCardReplace",
              "OnExternalCardReplace",
              "OnPurchaseRefundCalculate",
              "OnManualCharge",
              "OnManualWithdraw"
            ],
            "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
            "x-loymax-enum-type": "OfferEventType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Calculators": {
      "get": {
        "tags": [
          "Calculator"
        ],
        "summary": "Получить все калькуляторы.",
        "operationId": "Calculator_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "types",
            "in": "query",
            "description": "Тип.",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "FilterPurchases",
                "PartnerPurchaseAmount",
                "DecimalQuestion",
                "CountGoodsByOfferChain"
              ],
              "x-loymax-type": "Loymax.Entities.RepositoryCalculatorType, Loymax.Entities",
              "x-loymax-enum-type": "RepositoryCalculatorType"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "RepositoryCalculatorType",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<RepositoryCalculatorType>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<RepositoryCalculatorType>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCalculatorViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/CallCenter/BlockCard": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Блокирует карту.",
        "operationId": "CallCenter_BlockCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "blockCardModel",
            "in": "body",
            "description": "Модель для блокировки карт.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlockCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardBlock"
        ]
      }
    },
    "/api/CallCenter/UnBlockCard": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Разблокирует карту.",
        "operationId": "CallCenter_UnBlockCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "unBlockCardModel",
            "in": "body",
            "description": "Модель для разблокировки карты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnBlockCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardBlock"
        ]
      }
    },
    "/api/CallCenter/ChangePhone": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Измененяет номера телефона.",
        "operationId": "CallCenter_ChangePhone",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changePhoneModel",
            "in": "body",
            "description": "Модель для смены телефона.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePhoneModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PhoneChange"
        ]
      }
    },
    "/api/CallCenter/ChangeEmail": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Измененяет модель Email.",
        "operationId": "CallCenter_ChangeEmail",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changeEmailModel",
            "in": "body",
            "description": "Модель для смены email.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeEmailModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "EmailsChange"
        ]
      }
    },
    "/api/CallCenter/ReplaceCard": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Заменяет карты.",
        "operationId": "CallCenter_ReplacePersonCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "replacePersonCardModel",
            "in": "body",
            "description": "Модель для замены карты клиента.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplacePersonCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardReplace"
        ]
      }
    },
    "/api/CallCenter/UpdateSubscriptions": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Обновление подписок.",
        "operationId": "CallCenter_UpdateSubscriptions",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updateSubscriptionsModel",
            "in": "body",
            "description": "Модель для обновления подписок.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSubscriptionsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionsManage"
        ]
      }
    },
    "/api/CallCenter/SendNewPasswordToPhone": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Установить новый пароль для клиента и выслать на телефон.",
        "operationId": "CallCenter_SendNewPasswordToPhone",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sendNewPasswordModel",
            "in": "body",
            "description": "Модель для отправки нового пароля.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendNewPasswordModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardPasswordSend"
        ]
      }
    },
    "/api/CallCenter/SendNewPasswordToEmail": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Установить новый пароль для клиента и выслать на почту.",
        "operationId": "CallCenter_SendNewPasswordToEmail",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sendNewPasswordModel",
            "in": "body",
            "description": "Модель для отправки нового пароля.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendNewPasswordModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardPasswordSend"
        ]
      }
    },
    "/api/CallCenter/DeleteCard": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Удаление карты клиента.",
        "operationId": "CallCenter_DeleteCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deleteCardModel",
            "in": "body",
            "description": "Данные для удаления карты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDelete"
        ]
      }
    },
    "/api/CallCenter/RecoverCard": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Восстановление карты.",
        "operationId": "CallCenter_RecoverCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "recoverCardModel",
            "in": "body",
            "description": "Данные для восстановления карты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRecover"
        ]
      }
    },
    "/api/CallCenter/BlockAccount": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Блокировка счета.",
        "operationId": "CallCenter_BlockAccount",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "blockAccountModel",
            "in": "body",
            "description": "Модель для операции блокировки счета.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlockAccountModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AccountBlock"
        ]
      }
    },
    "/api/CallCenter/UnBlockAccount": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Разблокировка счета.",
        "operationId": "CallCenter_UnBlockAccount",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "blockAccountModel",
            "in": "body",
            "description": "Модель для операции блокировки счета.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlockAccountModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AccountBlock"
        ]
      }
    },
    "/api/CallCenter/ActivatedCard": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Активация карты.",
        "operationId": "CallCenter_ActivatedCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "activatedCardModel",
            "in": "body",
            "description": "Модель активации.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivatedCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardActivate"
        ]
      }
    },
    "/api/CallCenter/ChangeCardCategory": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Смена категории для карты.",
        "operationId": "CallCenter_ChangeCardCategory",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changeCardCategory",
            "in": "body",
            "description": "Данные для смены категории карты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeCardCategoryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoryChange"
        ]
      }
    },
    "/api/CallCenter/CompleteCall": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Завершение звонка клиента.",
        "operationId": "CallCenter_CompleteCall",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Данные о причинах обращения в тех. поддержку.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteCallModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CallCenterView"
        ]
      }
    },
    "/api/CallCenter/DeregisterPerson": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Дерегистрировать пользователя.",
        "operationId": "CallCenter_DeregisterPerson",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель с параметрами.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeregisterPersonModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersDeregister"
        ]
      }
    },
    "/api/CallCenter/UpdateTicket": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Обновить тикет.",
        "operationId": "CallCenter_UpdateTicket",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "updateTicketModel",
            "in": "body",
            "description": "Модель с параметрами.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTicketModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardSet"
        ]
      }
    },
    "/api/Cards/{cardId}/checkPassword": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Проверка пароля карты.",
        "operationId": "Card_CheckCardPassword",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cardPassword",
            "in": "query",
            "description": "Пароль.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBoolean"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/Cards/{cardId}": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получить информацию о карте по ее идентификатору.",
        "operationId": "Card_GetCardInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Номер карты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSystemApiCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/Cards": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получить информацию о карте по ее номеру.",
        "operationId": "Card_GetApiCards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardNumber",
            "in": "query",
            "description": "Номер карты.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Идентификатор программы лояльности.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSystemApiCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      },
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "Получить список карт по магнитному номеру.",
        "operationId": "Card_GetCardInfoByStripNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stripNumbers.strip1",
            "in": "query",
            "description": "Магнитная полоса №1.",
            "required": false,
            "type": "string"
          },
          {
            "name": "stripNumbers.strip2",
            "in": "query",
            "description": "Магнитная полоса №2.",
            "required": false,
            "type": "string"
          },
          {
            "name": "stripNumbers.strip3",
            "in": "query",
            "description": "Магнитная полоса №3.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfSystemApiCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/Cards/{cardId}/ReplacementChain": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получить цепочку замен карт по идентификатору карты.",
        "operationId": "Card_GetCardReplacementsByCardId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов в цепочке.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfSystemApiCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/Cards/Range/{beginCardId}/{endCardId}": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получить информацию по картам для диапазона карт. Карты должны быть из одной эмиссии. Количество карт в диапазоне не должно быть более 500.",
        "operationId": "Card_GetRange",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "beginCardId",
            "in": "path",
            "description": "Id карты начала диапазона.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "endCardId",
            "in": "path",
            "description": "Id карты конца диапазона.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCardCompactInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/Cards/{cardId}/Issue": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "Выдать карту.",
        "operationId": "Card_IssueCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Идентификатор партнера, выдающего карту.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardIssue"
        ]
      }
    },
    "/api/Cards/SetCardInfo": {
      "get": {
        "tags": [
          "Card"
        ],
        "summary": "Получить информацию о настройках по выпуску карт.",
        "operationId": "Card_SetCardInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfEmitCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardIssue"
        ]
      }
    },
    "/api/cardCategories": {
      "get": {
        "tags": [
          "CardCategory"
        ],
        "summary": "Возвращает список всех категорий карт.",
        "operationId": "CardCategory_GetCardCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "substring",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCardCategoryModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesView",
          "CardCategoriesRead",
          "CardCategoryChange"
        ]
      },
      "put": {
        "tags": [
          "CardCategory"
        ],
        "summary": "Создает категорию карт.",
        "operationId": "CardCategory_CreateCardCategory",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardCategory",
            "in": "body",
            "description": "Модель категории карт.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardCategoryModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesManage"
        ]
      }
    },
    "/api/cardCategories/{id}": {
      "get": {
        "tags": [
          "CardCategory"
        ],
        "summary": "Возвращает категорию по id.",
        "operationId": "CardCategory_GetCardCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id категории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCardCategoryModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesView"
        ]
      },
      "post": {
        "tags": [
          "CardCategory"
        ],
        "summary": "Изменяет категорию карт.",
        "operationId": "CardCategory_UpdateCardCategory",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id категории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cardCategory",
            "in": "body",
            "description": "Модель категории карт..",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardCategoryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesManage"
        ]
      },
      "delete": {
        "tags": [
          "CardCategory"
        ],
        "summary": "Удаляет категорию карт.",
        "operationId": "CardCategory_DeleteCardCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id категории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesManage"
        ]
      }
    },
    "/api/cardCategories/{categoryId}/Images": {
      "get": {
        "tags": [
          "CardCategoryImages"
        ],
        "summary": "Получить список изображений для категории.",
        "operationId": "CardCategoryImages_GetImages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesView"
        ]
      },
      "put": {
        "tags": [
          "CardCategoryImages"
        ],
        "summary": "Создать изображение.",
        "operationId": "CardCategoryImages_AddImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Новое изображение.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewImageFileModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesManage"
        ]
      },
      "post": {
        "tags": [
          "CardCategoryImages"
        ],
        "summary": "Обновить изображение.",
        "operationId": "CardCategoryImages_EditImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель изображения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedImageFileModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesManage"
        ]
      }
    },
    "/api/cardCategories/{categoryId}/Images/{imageId}": {
      "get": {
        "tags": [
          "CardCategoryImages"
        ],
        "summary": "Получить изображение.",
        "operationId": "CardCategoryImages_GetImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesView"
        ]
      },
      "delete": {
        "tags": [
          "CardCategoryImages"
        ],
        "summary": "Удалить изображение.",
        "operationId": "CardCategoryImages_DeleteImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображение.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardCategoriesManage"
        ]
      }
    },
    "/api/emissions/cards": {
      "get": {
        "tags": [
          "CardEmission"
        ],
        "summary": "Получить список выпусков карт.",
        "operationId": "CardEmission_GetCardEmissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.loyaltyPrograms",
            "in": "query",
            "description": "Список ПЛ для фильтра по ПЛ.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCardEmissionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionView"
        ]
      },
      "put": {
        "tags": [
          "CardEmission"
        ],
        "summary": "Создать выпуск карт.",
        "operationId": "CardEmission_CreateCardEmission",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emission",
            "in": "body",
            "description": "Модель выпуска.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardEmissionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionManage"
        ]
      }
    },
    "/api/emissions/cards/{id}": {
      "get": {
        "tags": [
          "CardEmission"
        ],
        "summary": "Получить выпуск карт по id.",
        "operationId": "CardEmission_GetCardEmission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCardEmissionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionView"
        ]
      }
    },
    "/api/emissions/cards/{id}/pack": {
      "post": {
        "tags": [
          "CardEmission"
        ],
        "summary": "Расфасовать выпуск карт.",
        "operationId": "CardEmission_PackCardEmission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id выпуска карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionManage"
        ]
      }
    },
    "/api/emissions/cards/{id}/progress": {
      "get": {
        "tags": [
          "CardEmission"
        ],
        "summary": "Получить информацию по фоновой фасовке карт для указанной очереди.",
        "operationId": "CardEmission_GetCardEmissionPackingQueueProgress",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id выпуска карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCardsPackingQueueInfo"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionView"
        ]
      }
    },
    "/api/emissions/cards/{id}/export": {
      "get": {
        "tags": [
          "CardEmission"
        ],
        "summary": "Получить выпуск в виде CSV файла.",
        "operationId": "CardEmission_GetCardEmissionCsv",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id выпуска карт.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardEmissionView"
        ]
      }
    },
    "/api/Cards/{cardId}/Pack": {
      "post": {
        "tags": [
          "CardPacking"
        ],
        "summary": "Расфасовать карту.",
        "operationId": "CardPacking_PackCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты для фасовки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "packingModel",
            "in": "body",
            "description": "Дополнительная информация для фасовки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardPackingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardPacking"
        ]
      }
    },
    "/api/catalogs/{partnerId}/attributes": {
      "get": {
        "tags": [
          "CatalogAttribute"
        ],
        "summary": "Атрибуты в каталоге партнера.",
        "operationId": "CatalogAttribute_GetByPartner",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCatalogAttributeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/catalogs/{partnerId}/attributes/{attributeId}/values": {
      "get": {
        "tags": [
          "CatalogAttribute"
        ],
        "summary": "Получает список значений атрибута в выбранном диапазоне.",
        "operationId": "CatalogAttribute_GetValues",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeId",
            "in": "path",
            "description": "ID атрибута.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого элемента.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "nameSubstr",
            "in": "query",
            "description": "Подстрока поиска по названию.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsAttributeValueViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/communicationOffers": {
      "get": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Возвращает список всех инструкций для акций.",
        "operationId": "CommunicationOffer_GetOffers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какой акции.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.communicationOfferState",
            "in": "query",
            "description": "Статус акции.",
            "required": false,
            "type": "string",
            "enum": [
              "Active",
              "CommingSoon"
            ],
            "x-loymax-type": "Loymax.Common.Portable.OfferState, Loymax.Common.Portable",
            "x-loymax-enum-type": "OfferState"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Дата С.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Дата По.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.brandIds",
            "in": "query",
            "description": "Набор идентификаторов брендов.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.categoriesIds",
            "in": "query",
            "description": "Набор идентификаторов категорий рекламных материалов.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Подстрока для поиска по имени.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.isArchived",
            "in": "query",
            "description": "Признак удаления.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.priorityMin",
            "in": "query",
            "description": "Минимальный приоритет.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.priorityMax",
            "in": "query",
            "description": "Максимальный приоритет.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCommunicationOfferModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      },
      "put": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Создает детали для акции.",
        "operationId": "CommunicationOffer_CreateOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель деталей.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunicationOfferModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCommunicationOfferModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{id}": {
      "get": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Получение описания детали для акции.",
        "operationId": "CommunicationOffer_GetOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор деталей.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCommunicationOfferModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      },
      "post": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Редактирование деталей для акции.",
        "operationId": "CommunicationOffer_EditOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель деталей.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCommunicationOfferModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      },
      "delete": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Удаляет детали для акции.",
        "operationId": "CommunicationOffer_DeleteOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{id}/Archive": {
      "delete": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Отправка акции в архив.",
        "operationId": "CommunicationOffer_AddInArchivedOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{id}/Restore": {
      "post": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Востановить акцию.",
        "operationId": "CommunicationOffer_RestoreOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{id}/availableMerchantInfos": {
      "get": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Возвращает список магазинов достпных для рекламного материала.",
        "operationId": "CommunicationOffer_GetMerchantInfosByBrand",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор рекламного материала.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "По.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.cityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.сategoryID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.archivedShowMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfMerchantInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      }
    },
    "/api/communicationOffers/availableTargetGroups": {
      "get": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Возвращает список целевых аудиторий.",
        "operationId": "CommunicationOffer_GetTargetGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id рекламных материалов.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "По.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.partnerIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.loyaltyPrograms",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.creatorIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.archivedShowMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.calculatedShowMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotCalculatedOnly",
              "CalculatedOnly"
            ],
            "x-loymax-type": "Loymax.Entities.TargetGroupCalculatedShowMode, Loymax.Entities",
            "x-loymax-enum-type": "TargetGroupCalculatedShowMode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfTargetGroupViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      }
    },
    "/api/communicationOffers/availableOffers": {
      "get": {
        "tags": [
          "CommunicationOffer"
        ],
        "summary": "Возвращает список доступных акций.",
        "operationId": "CommunicationOffer_GetAvaliableOffers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "По.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "substring",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfOfferInfoShortViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      }
    },
    "/api/communicationOffersCategories": {
      "get": {
        "tags": [
          "CommunicationOfferCategory"
        ],
        "summary": "Получить список категорий рекламных материалов.",
        "operationId": "CommunicationOfferCategory_GetCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Название категории.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.state",
            "in": "query",
            "description": "Признак архивирования категории.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.partnersIds",
            "in": "query",
            "description": "Список идентификаторов партнеров.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.sortingIds",
            "in": "query",
            "description": "Идентификаторы, которые будут выбираться первыми.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCommunicationOfferCategoryViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferCategoryView"
        ]
      },
      "put": {
        "tags": [
          "CommunicationOfferCategory"
        ],
        "summary": "Создать категорию рекламного материала.",
        "operationId": "CommunicationOfferCategory_CreateCategory",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryModel",
            "in": "body",
            "description": "Модель категории.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunicationOfferCategoryViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferCategoryManage"
        ]
      }
    },
    "/api/communicationOffersCategories/{id}": {
      "get": {
        "tags": [
          "CommunicationOfferCategory"
        ],
        "summary": "Получить категорию рекламного материала.",
        "operationId": "CommunicationOfferCategory_GetCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCommunicationOfferCategoryViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferCategoryView"
        ]
      },
      "post": {
        "tags": [
          "CommunicationOfferCategory"
        ],
        "summary": "Редактировать категорию рекламного материала.",
        "operationId": "CommunicationOfferCategory_EditCategory",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "categoryModel",
            "in": "body",
            "description": "Модель категории.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunicationOfferCategoryViewModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferCategoryManage"
        ]
      }
    },
    "/api/communicationOffersCategories/{id}/archive": {
      "post": {
        "tags": [
          "CommunicationOfferCategory"
        ],
        "summary": "Архивировать категорию рекламного материала.",
        "operationId": "CommunicationOfferCategory_ArchiveCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferCategoryManage"
        ]
      }
    },
    "/api/communicationOffersCategories/{id}/restore": {
      "post": {
        "tags": [
          "CommunicationOfferCategory"
        ],
        "summary": "Восстановить архивированную категорию рекламного материала.",
        "operationId": "CommunicationOfferCategory_RestoreCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferCategoryManage"
        ]
      }
    },
    "/api/communicationOffers/{offerId}/details": {
      "get": {
        "tags": [
          "CommunicationOfferDetail"
        ],
        "summary": "Возвращает список деталей для акций.",
        "operationId": "CommunicationOfferDetail_GetOfferDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOfferDetailModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      },
      "put": {
        "tags": [
          "CommunicationOfferDetail"
        ],
        "summary": "Создает детали для акции.",
        "operationId": "CommunicationOfferDetail_CreateOfferDetail",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель деталей.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAndEditDetailModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{offerId}/details/{id}": {
      "get": {
        "tags": [
          "CommunicationOfferDetail"
        ],
        "summary": "Получение описания детали для акции.",
        "operationId": "CommunicationOfferDetail_GetOfferDetail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор деталей.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferDetailModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      },
      "post": {
        "tags": [
          "CommunicationOfferDetail"
        ],
        "summary": "Редактирование деталей для акции.",
        "operationId": "CommunicationOfferDetail_EditOfferDetail",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель деталей.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAndEditDetailModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      },
      "delete": {
        "tags": [
          "CommunicationOfferDetail"
        ],
        "summary": "Удаляет детали для акции.",
        "operationId": "CommunicationOfferDetail_DeleteOfferDetail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{offerId}/Images": {
      "get": {
        "tags": [
          "CommunicationOfferImages"
        ],
        "summary": "Получить список изображений для акции.",
        "operationId": "CommunicationOfferImages_GetImages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      },
      "put": {
        "tags": [
          "CommunicationOfferImages"
        ],
        "summary": "Создать изображение.",
        "operationId": "CommunicationOfferImages_AddImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Новое изображение.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewImageFileModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{offerId}/Images/{imageId}": {
      "get": {
        "tags": [
          "CommunicationOfferImages"
        ],
        "summary": "Получить изображение.",
        "operationId": "CommunicationOfferImages_GetImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      },
      "post": {
        "tags": [
          "CommunicationOfferImages"
        ],
        "summary": "Обновить изображение.",
        "operationId": "CommunicationOfferImages_EditImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель изображения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedImageFileModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      },
      "delete": {
        "tags": [
          "CommunicationOfferImages"
        ],
        "summary": "Удалить изображение.",
        "operationId": "CommunicationOfferImages_DeleteImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображение.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/communicationOffers/{offerId}/instructions": {
      "get": {
        "tags": [
          "CommunicationOfferInstruction"
        ],
        "summary": "Возвращает все инструкций для акций в виде многострочного текста.",
        "operationId": "CommunicationOfferInstruction_GetOfferInstructions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferInstructionsModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      },
      "put": {
        "tags": [
          "CommunicationOfferInstruction"
        ],
        "summary": "Создает коллекцию инструкций для акции.",
        "operationId": "CommunicationOfferInstruction_CreateOfferInstruction",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель инструкций.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferInstructionsModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferManage"
        ]
      }
    },
    "/api/configurations": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Получить коллекцию всех конфигураций.",
        "operationId": "Configuration_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfConfigurationViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ConfigurationView"
        ]
      },
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Изменить значения конфигураций на новые.",
        "operationId": "Configuration_EditConfiguration",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configs",
            "in": "body",
            "description": "Новые значения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationListViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ConfigurationManage"
        ]
      }
    },
    "/api/configurationDeploys": {
      "get": {
        "tags": [
          "ConfigurationDeploys"
        ],
        "summary": "Возвращает список всех деплоев.",
        "operationId": "ConfigurationDeploys_GetDeploys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Дата С.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Дата По.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.packageVersionSubstring",
            "in": "query",
            "description": "Подстрока для поиска по версионности.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.isSuccess",
            "in": "query",
            "description": "Успешность выполнения.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.authorSubstring",
            "in": "query",
            "description": "Подстрока для поиска по автору.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.externalId",
            "in": "query",
            "description": "Внешний идентификатор.",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfConfigurationDeployViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SystemUpdatesView"
        ]
      }
    },
    "/api/configurationDeploys/{externalId}": {
      "get": {
        "tags": [
          "ConfigurationDeploys"
        ],
        "summary": "Получение описания деплоя.",
        "operationId": "ConfigurationDeploys_GetDeployInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "description": "Внешний дентификатор деплоя.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfConfigurationDeployViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SystemUpdatesView"
        ]
      }
    },
    "/api/configurationPlugins": {
      "get": {
        "tags": [
          "ConfigurationPlugins"
        ],
        "summary": "Возвращает список всех плагинов.",
        "operationId": "ConfigurationPlugins_GetPlugins",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.pluginSubstring",
            "in": "query",
            "description": "Подстрока для поиска по названию плагина.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.deployIdSubstring",
            "in": "query",
            "description": "Подстрока для поиска по ID деплоя.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfConfigurationPluginViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SystemUpdatesView"
        ]
      }
    },
    "/api/configurationScripts": {
      "get": {
        "tags": [
          "ConfigurationScripts"
        ],
        "summary": "Возвращает список всех скриптов.",
        "operationId": "ConfigurationScripts_GetScripts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Дата С.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Дата По.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.idSubstring",
            "in": "query",
            "description": "Подстрока для поиска по идентификатору.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.descriptionSubstring",
            "in": "query",
            "description": "Подстрока для поиска по описание.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.configDeployId",
            "in": "query",
            "description": "Идентификатор деплоя.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Наименование БД.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfConfigurationScriptViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SystemUpdatesView"
        ]
      }
    },
    "/api/configurationScripts/availableDatabases": {
      "get": {
        "tags": [
          "ConfigurationScripts"
        ],
        "summary": "Возвращает доступные БД.",
        "operationId": "ConfigurationScripts_GetDbNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SystemUpdatesView"
        ]
      }
    },
    "/api/Counters": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Возвращает список доступных счётчиков.",
        "operationId": "Counter_GetAvailableCounters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.eventType",
            "in": "query",
            "description": "Тип события.",
            "required": false,
            "type": "string",
            "enum": [
              "OnPurchaseCalculate",
              "OnAttachPhone",
              "OnPurchaseConfirm",
              "OnPurchasePayment",
              "OnBalanceRequest",
              "OnCardIssue",
              "OnCardActivation",
              "OnSocialActivity",
              "OnSocialGroupJoin",
              "OnFriendInvite",
              "OnSocialGroupLeave",
              "OnQuestionnaireUpdate",
              "OnMobileAppInstall",
              "OnEndPersonRegistration",
              "OnSocialNetworkLink",
              "OnBonusLifetimeExpired",
              "OnBirthday",
              "OnPurchaseRefund",
              "OnReferralPurchase",
              "OnPurchaseCancel",
              "OnRemoveSocialActivity",
              "OnPurchaseDiscount",
              "OnSendPasswordToCheque",
              "OnGoodsSetProcess",
              "OnAttachEmail",
              "OnBonusLifetimeActivation",
              "OnPurchasePaymentCalculate",
              "OnPurchasePaymentCancel",
              "OnCouponPurchased",
              "OnCouponRefunded",
              "OnPurchaseDeposit",
              "OnCardAttach",
              "OnCardReplace",
              "OnExternalCardReplace",
              "OnPurchaseRefundCalculate",
              "OnManualCharge",
              "OnManualWithdraw"
            ],
            "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
            "x-loymax-enum-type": "OfferEventType"
          },
          {
            "name": "filter.nameText",
            "in": "query",
            "description": "Текст, содержащийся в названии счетчика.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.counterType",
            "in": "query",
            "description": "Тип счетчика.",
            "required": false,
            "type": "string",
            "enum": [
              "Original",
              "PurchaseCounter",
              "MultiplicityCounter"
            ],
            "x-loymax-type": "Loymax.Common.Portable.CounterType, Loymax.Common.Portable",
            "x-loymax-enum-type": "CounterType"
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "description": "С какой даты искать.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "description": "По какую дату искать.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.partners",
            "in": "query",
            "description": "Список партнеров, по которым будут отфильтрованы счетчики.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.loyaltyProgramIds",
            "in": "query",
            "description": "Список id программ лояльности, для фильтрации счетчиков.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCounterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "put": {
        "tags": [
          "Counter"
        ],
        "summary": "Создание нового счётчика.",
        "operationId": "Counter_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CounterViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCounterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Counters/Targets": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Возвращает список параметров для счётчика.",
        "operationId": "Counter_GetTargets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventTypes",
            "in": "query",
            "description": "Список типов событий.",
            "required": true,
            "items": {
              "type": "string",
              "enum": [
                "OnPurchaseCalculate",
                "OnAttachPhone",
                "OnPurchaseConfirm",
                "OnPurchasePayment",
                "OnBalanceRequest",
                "OnCardIssue",
                "OnCardActivation",
                "OnSocialActivity",
                "OnSocialGroupJoin",
                "OnFriendInvite",
                "OnSocialGroupLeave",
                "OnQuestionnaireUpdate",
                "OnMobileAppInstall",
                "OnEndPersonRegistration",
                "OnSocialNetworkLink",
                "OnBonusLifetimeExpired",
                "OnBirthday",
                "OnPurchaseRefund",
                "OnReferralPurchase",
                "OnPurchaseCancel",
                "OnRemoveSocialActivity",
                "OnPurchaseDiscount",
                "OnSendPasswordToCheque",
                "OnGoodsSetProcess",
                "OnAttachEmail",
                "OnBonusLifetimeActivation",
                "OnPurchasePaymentCalculate",
                "OnPurchasePaymentCancel",
                "OnCouponPurchased",
                "OnCouponRefunded",
                "OnPurchaseDeposit",
                "OnCardAttach",
                "OnCardReplace",
                "OnExternalCardReplace",
                "OnPurchaseRefundCalculate",
                "OnManualCharge",
                "OnManualWithdraw"
              ],
              "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
              "x-loymax-enum-type": "OfferEventType"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "OfferEventType",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OfferEventType>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<OfferEventType>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCounterTargetViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Counters/{id}": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Возвращает счётчик по идентификатору.",
        "operationId": "Counter_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор счётчика.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCounterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Редактирование счетчика.",
        "operationId": "Counter_UpdateCounter",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id редактируемого счетчика.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель счетчика.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CounterViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/emissions/coupons": {
      "get": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Получает список существующих выпусков купонов.",
        "operationId": "CouponEmission_GetCouponEmissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "properties",
            "in": "query",
            "description": "Требуемые свойства view-модели. Если не указано ни одного, то будут заданы все.",
            "required": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.changeDateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.changeDateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.types",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Public",
                "Person",
                "Distributed"
              ],
              "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponEmissionFilter+CouponEmissionType, Loymax.Coupon.Contract",
              "x-loymax-enum-type": "CouponEmissionType"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "CouponEmissionType",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CouponEmissionType>",
            "x-loymax-property-collection-type": "System.Collections.Generic.IEnumerable<CouponEmissionType>"
          },
          {
            "name": "filter.partnerIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.loyaltyProgramIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.personId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCouponEmissionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionView",
          "CouponEmissionPersonRead"
        ]
      },
      "put": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Создание выпуска.",
        "operationId": "CouponEmission_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "viewModel",
            "in": "body",
            "description": "Фильтр на создание.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponEmissionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionManage"
        ]
      }
    },
    "/api/coupons/byEmission/{emissionId}": {
      "get": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Получает список купонов.",
        "operationId": "CouponEmission_GetApiCouponsByEmissionByEmissionId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emissionId",
            "in": "path",
            "description": "Идентификатор эмиссии.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Состояние.",
            "required": false,
            "type": "string",
            "default": "Issued",
            "enum": [
              "Created",
              "Issued",
              "Used",
              "Rejected",
              "QueuedToUse",
              "QueuedToIssue"
            ],
            "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponState, Loymax.Coupon.Contract",
            "x-loymax-enum-type": "CouponState"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCouponViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionView"
        ]
      }
    },
    "/api/emissions/coupons/{emissionId}": {
      "get": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Получает информацию о выпуске купонов.",
        "operationId": "CouponEmission_GetCouponEmission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emissionId",
            "in": "path",
            "description": "Идентификатор выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCouponEmissionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionView"
        ]
      },
      "post": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Редактирование выпуска.",
        "operationId": "CouponEmission_EditEmission",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emissionId",
            "in": "path",
            "description": "Идентификатор выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewModel",
            "in": "body",
            "description": "Параметры выпуска.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponEmissionViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionManage"
        ]
      },
      "delete": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Производит архивирование выпуска.",
        "operationId": "CouponEmission_Archive",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emissionId",
            "in": "path",
            "description": "Идентификатор выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionManage"
        ]
      }
    },
    "/api/emissions/coupons/{emissionId}/restore": {
      "post": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Производит восстановление выпуска из архива.",
        "operationId": "CouponEmission_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emissionId",
            "in": "path",
            "description": "Идентификатор выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionManage"
        ]
      }
    },
    "/api/emissions/coupons/{emissionId}/csv": {
      "get": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Получает выпуск в виде CSV файла.",
        "operationId": "CouponEmission_GetEmissionCsv",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "emissionId",
            "in": "path",
            "description": "ID выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionView"
        ]
      }
    },
    "/api/emissions/coupons/{emissionId}/issue": {
      "post": {
        "tags": [
          "CouponEmission"
        ],
        "summary": "Выдать купоны из выпуска.",
        "operationId": "CouponEmission_IssueCoupons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "emissionId",
            "in": "path",
            "description": "Идентификатор выпуска.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponEmissionManage"
        ]
      }
    },
    "/api/currency": {
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Создание новой валюты.",
        "operationId": "Currency_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCurrencyViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CurrencyManage"
        ]
      },
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Получить страницу из списка валют.",
        "operationId": "Currency_GetFilteredPagedList",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "Фильтр для валют.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCurrencyViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/currency/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Получить валюту по идентификатору.",
        "operationId": "Currency_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCurrencyViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      },
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Редактирование валюты.",
        "operationId": "Currency_UpdateCurrency",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CurrencyManage"
        ]
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Отправить валюту в архив.",
        "operationId": "Currency_ArchiveCurrency",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CurrencyManage"
        ]
      }
    },
    "/api/currency/{id}/restore": {
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Вернуть валюту из архива.",
        "operationId": "Currency_RestoreCurrency",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CurrencyManage"
        ]
      }
    },
    "/api/Devices": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Показывает доступные пользователю устройства(кассы).",
        "operationId": "Device_GetAvailableDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "logicalName",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим вывода по признаку удаления.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Ид программы лояльности.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortingId",
            "in": "query",
            "description": "Id для сортировки и отображения.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfDeviceBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DevicesRead"
        ]
      }
    },
    "/api/Devices/{id}/balances": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Получить информацию о балансах кассы.",
        "operationId": "Device_GetDeviceBalances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Подстрока для поиска по названию валюты.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.sortingIds",
            "in": "query",
            "description": "Список идентификаторов для первоочередного выбора..",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMoneyViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardDepositView"
        ]
      }
    },
    "/api/DeviceCapabilities/{deviceTypeId}": {
      "get": {
        "tags": [
          "DeviceCapability"
        ],
        "summary": "Получить все возможности типа кассы.",
        "operationId": "DeviceCapability_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceTypeId",
            "in": "path",
            "description": "Индификатор типа кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfDeviceCapabilityViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesView"
        ]
      },
      "post": {
        "tags": [
          "DeviceCapability"
        ],
        "summary": "Обновить возможности типа кассы.",
        "operationId": "DeviceCapability_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceTypeId",
            "in": "path",
            "description": "Индификатор {Loymax.Entities.DeviceType}.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "capabilities",
            "in": "body",
            "description": "Коллекция моделей {Loymax.SystemApi.Models.Devices.DeviceCapabilityViewModel}.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCapabilityListViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesManage"
        ]
      }
    },
    "/api/deviceEmulation/brands": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает список всех доступных брендов.",
        "operationId": "DeviceEmulation_GetBrandsWithDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Объем выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "name",
            "in": "query",
            "description": "Название.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfBrandViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/brands/{brandId}/merchants": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает список всех доступных магазинов.",
        "operationId": "DeviceEmulation_GetMerchantsWithDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Объем выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "name",
            "in": "query",
            "description": "Название.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMerchantViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/brands/{brandId}/merchants/{merchantId}/devices": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает список доступных касс.",
        "operationId": "DeviceEmulation_GetAvailableDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "Идентификатор бренда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantId",
            "in": "path",
            "description": "Идентификатор мерчанта.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfTestDeviceViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/devices/{deviceID}": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает кассу по идентификатору.",
        "operationId": "DeviceEmulation_GetDeviceByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "Идентификатор кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfTestDeviceViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Получить указанное количество покупок с указанной позиции.",
        "operationId": "DeviceEmulation_GetPurchases",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "startChequeTime",
            "in": "query",
            "description": "Нижняя граница времени покупки.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lastChequeTime",
            "in": "query",
            "description": "Верхняя граница времени покупки.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "merchantIds",
            "in": "query",
            "description": "Идентификатор магазина.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "loyaltyPrograms",
            "in": "query",
            "description": "Идентификатор программ лояльности.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "chequeNumber",
            "in": "query",
            "description": "Номер чека.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начальная позиция в списке.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "description": "Номер карты.",
            "required": false,
            "type": "string"
          },
          {
            "name": "personId",
            "in": "query",
            "description": "Идентификатор пользователя.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "personIdentifier",
            "in": "query",
            "description": "Идентификатор пользователя связанный с покупкой.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPurchaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает текущую покупку.",
        "operationId": "DeviceEmulation_GetPurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationPurchaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      },
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Создает покупку на тестовой кассе.",
        "operationId": "DeviceEmulation_CreatePurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Идентификатор тестовой кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dateTime",
            "in": "query",
            "description": "Время покупки.",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/balance": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает баланс.",
        "operationId": "DeviceEmulation_GetBalance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Идентификатор кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Время запроса.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "identifier.value",
            "in": "query",
            "description": "Значение.",
            "required": false,
            "type": "string"
          },
          {
            "name": "identifier.loyaltyProgram",
            "in": "query",
            "description": "Программа лояльности.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationBalanceViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/coupons": {
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Добавляет список купонов.",
        "operationId": "DeviceEmulation_CreateCoupons",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Входная модель.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceEmulationCreateCouponsFromListModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/coupons/{number}": {
      "delete": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Удаляет купон по номеру.",
        "operationId": "DeviceEmulation_DeleteCouponByNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Номер купона.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/positions": {
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Добавляет чековые позиции.",
        "operationId": "DeviceEmulation_CreateChequePositions",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createChequePositionViewModels",
            "in": "body",
            "description": "Список чековых позиций.",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceEmulationCreateChequePositionModel"
              },
              "xml": {
                "name": "DeviceEmulationCreateChequePositionModel",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/positions/{positionId}": {
      "post": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Обновляет чековую позицию.",
        "operationId": "DeviceEmulation_UpdateChequePosition",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "description": "Номер позиции в покупке.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "newPosition",
            "in": "body",
            "description": "Новая чековая позиция.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceEmulationUpdateChequePositionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      },
      "delete": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Удаляет чековую позицию.",
        "operationId": "DeviceEmulation_DeleteChequePosition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "description": "Номер позиции в покупке.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/positions/{positionId}/swap": {
      "post": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Меняет местами позиции в чеке.",
        "operationId": "DeviceEmulation_SwapChequePositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "description": "Номер позиции в покупке.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "secondPositionId",
            "in": "query",
            "description": "Номер второй позиции в покупке.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/positions/{id}/params": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает список параметров чековой позиции.",
        "operationId": "DeviceEmulation_GetChequePositionParams",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор позиции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfDeviceEmulationPositionParamViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      },
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Задает список параметров чековой позиции.",
        "operationId": "DeviceEmulation_CreateChequePositionParams",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор позиции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paramCollection",
            "in": "body",
            "description": "Параметры для обновления.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceEmulationPositionParamCollectionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/payments": {
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Задать оплаты.",
        "operationId": "DeviceEmulation_SetPayments",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "addPaymentModels",
            "in": "body",
            "description": "Модели оплат.",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceEmulationAddBonusPaymentModel"
              },
              "xml": {
                "name": "DeviceEmulationAddBonusPaymentModel",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationResultStateViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/payments/cash": {
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Добавить оплату реальными деньгами.",
        "operationId": "DeviceEmulation_SetCashPayment",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cashPaymentModel",
            "in": "body",
            "description": "Модель добавления оплаты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceEmulationCashPaymentModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/payments/thirdPartyBonus": {
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Добавить оплату бонусами сторонних компаний.",
        "operationId": "DeviceEmulation_SetThirdPartyBonusPayment",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "thirdPartyBonusPaymentModel",
            "in": "body",
            "description": "Модель добавления оплаты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceEmulationThirdPartyBonusPaymentModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/payments/other": {
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Добавить оплату бонусами сторонних компаний.",
        "operationId": "DeviceEmulation_SetOtherPayment",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "otherPaymentModel",
            "in": "body",
            "description": "Модель добавления оплаты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceEmulationAddOtherPaymentModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/userIdentifier": {
      "put": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Добавление идентификатора пользователя.",
        "operationId": "DeviceEmulation_AddUserIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "identifier.value",
            "in": "query",
            "description": "Значение.",
            "required": false,
            "type": "string"
          },
          {
            "name": "identifier.loyaltyProgram",
            "in": "query",
            "description": "Программа лояльности.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/calculate": {
      "post": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Рассчитать прямую скидку.",
        "operationId": "DeviceEmulation_Calculate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationCalculateResultStateViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/finish": {
      "post": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Завершить покупку.",
        "operationId": "DeviceEmulation_FinishCheque",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/cashier": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Получить информацию о кассире.",
        "operationId": "DeviceEmulation_GetCashierInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationCashierViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/confirm": {
      "post": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Подтвердить покупку.",
        "operationId": "DeviceEmulation_ConfirmPurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationChequeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/cancel": {
      "post": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Отменить покупку.",
        "operationId": "DeviceEmulation_CancelPurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationResultStateViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/deviceEmulation/purchases/current/availableAmount": {
      "get": {
        "tags": [
          "DeviceEmulation"
        ],
        "summary": "Возвращает доступные средства по карте.",
        "operationId": "DeviceEmulation_GetAvailableAmount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "identifier.value",
            "in": "query",
            "description": "Значение.",
            "required": false,
            "type": "string"
          },
          {
            "name": "identifier.loyaltyProgram",
            "in": "query",
            "description": "Программа лояльности.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceEmulationBalanceViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceEmulationView"
        ]
      }
    },
    "/api/DeviceTypes/{id}": {
      "get": {
        "tags": [
          "DeviceType"
        ],
        "summary": "Возвращает тип кассы.",
        "operationId": "DeviceType_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Индификатор типа кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesView"
        ]
      },
      "post": {
        "tags": [
          "DeviceType"
        ],
        "summary": "Обновить тип кассы.",
        "operationId": "DeviceType_UpdateDeviceType",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Индификатор типа кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Обновляемая модель типа кассы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceTypeViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesManage"
        ]
      },
      "delete": {
        "tags": [
          "DeviceType"
        ],
        "summary": "Архивировать тип кассы.",
        "operationId": "DeviceType_ArchiveDeviceType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Индификатор типа кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesManage"
        ]
      }
    },
    "/api/DeviceTypes": {
      "get": {
        "tags": [
          "DeviceType"
        ],
        "summary": "Возвращает список всех типов касс.",
        "operationId": "DeviceType_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст поиска.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.version",
            "in": "query",
            "description": "Версия поиска.",
            "required": false,
            "type": "string",
            "enum": [
              "Version20",
              "Version22",
              "Version30",
              "Version32"
            ],
            "x-loymax-type": "Loymax.Common.XmlVersion, Loymax.Common",
            "x-loymax-enum-type": "XmlVersion"
          },
          {
            "name": "filter.condition",
            "in": "query",
            "description": "Состояние.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.encodingType",
            "in": "query",
            "description": "Тип кодировки.",
            "required": false,
            "type": "string",
            "enum": [
              "ASCII",
              "Cp866",
              "Koi8r",
              "Windows1251",
              "Unicode",
              "UTF7",
              "UTF8",
              "UTF32"
            ],
            "x-loymax-type": "Loymax.Entities.DeviceTypeValidEncodingType, Loymax.Entities",
            "x-loymax-enum-type": "DeviceTypeValidEncodingType"
          },
          {
            "name": "filter.sortingIds",
            "in": "query",
            "description": "Идентификаторы типов касс, выводимых в начале списка.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfDeviceTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesView"
        ]
      },
      "put": {
        "tags": [
          "DeviceType"
        ],
        "summary": "Создает тип кассы.",
        "operationId": "DeviceType_CreateDeviceType",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель типа кассы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceTypeViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesManage"
        ]
      }
    },
    "/api/DeviceTypes/{id}/restore": {
      "post": {
        "tags": [
          "DeviceType"
        ],
        "summary": "Восстановить тип кассы.",
        "operationId": "DeviceType_RestoreDeviceType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Индификатор типа кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceTypesManage"
        ]
      }
    },
    "/api/emissionNumberTemplates/{id}": {
      "get": {
        "tags": [
          "EmissionNumberTemplate"
        ],
        "summary": "Возвращает шаблон для генерации номеров выпусков по его ID.",
        "operationId": "EmissionNumberTemplate_GetEmissionTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID шаблона уведомлений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfNumberTemplateViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TemplateNumbersView",
          "TemplateNumbersRead"
        ]
      },
      "post": {
        "tags": [
          "EmissionNumberTemplate"
        ],
        "summary": "Редактирование шаблона для генерации номеров выпусков.",
        "operationId": "EmissionNumberTemplate_UpdateEmissionTemplate",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор шаблона для генерации номеров выпусков.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "numberTemplateModel",
            "in": "body",
            "description": "Модель для шаблона для генерации номеров выпусков.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberTemplateViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TemplateNumbersManage"
        ]
      },
      "delete": {
        "tags": [
          "EmissionNumberTemplate"
        ],
        "summary": "Добавить в архив шаблон для генерации номеров выпусков.",
        "operationId": "EmissionNumberTemplate_ArchiveEmissionNumberTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TemplateNumbersManage"
        ]
      }
    },
    "/api/emissionNumberTemplates": {
      "get": {
        "tags": [
          "EmissionNumberTemplate"
        ],
        "summary": "Получение списка всех шаблонов для генерации номеров выпусков.",
        "operationId": "EmissionNumberTemplate_GetEmissionTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.emissionType",
            "in": "query",
            "description": "Тип шаблона уведомлений.",
            "required": false,
            "type": "string",
            "enum": [
              "CardEmission",
              "BookletEmission",
              "CouponEmission"
            ],
            "x-loymax-type": "Loymax.Entities.EmissionTypeEnum, Loymax.Entities",
            "x-loymax-enum-type": "EmissionTypeEnum"
          },
          {
            "name": "filter.textSubStr",
            "in": "query",
            "description": "Подстрока текстового описания шаблона.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.showMode",
            "in": "query",
            "description": "Режим отображения архивных шаблонов.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfNumberTemplateViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TemplateNumbersView",
          "TemplateNumbersRead"
        ]
      },
      "put": {
        "tags": [
          "EmissionNumberTemplate"
        ],
        "summary": "Создание шаблона для генерации номеров выпусков.",
        "operationId": "EmissionNumberTemplate_CreateEmissionTemplate",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "numberTemplateModel",
            "in": "body",
            "description": "Модель шаблона для генерации номеров выпусков.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberTemplateViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TemplateNumbersManage"
        ]
      }
    },
    "/api/emissionNumberTemplates/{id}/restore": {
      "post": {
        "tags": [
          "EmissionNumberTemplate"
        ],
        "summary": "Восстановить из архива шаблон для генерации номеров выпусков.",
        "operationId": "EmissionNumberTemplate_RestoreEmissionNumberTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TemplateNumbersManage"
        ]
      }
    },
    "/api/EventCalculations": {
      "get": {
        "tags": [
          "EventCalculation"
        ],
        "summary": "Возвращает список расчётов.",
        "operationId": "EventCalculation_GetPagedList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.from",
            "in": "query",
            "description": "С какого элемента брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Сколько элементов брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.calculationKey",
            "in": "query",
            "description": "Ключ расчёта.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfEventCalculationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "EventCalculationsRead"
        ]
      }
    },
    "/api/EventCalculations/{id}": {
      "get": {
        "tags": [
          "EventCalculation"
        ],
        "summary": "Возвращает информацию о расчёте по идентификатору.",
        "operationId": "EventCalculation_GetById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор расчёта.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfEventCalculationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "EventCalculationsRead"
        ]
      }
    },
    "/api/extensions": {
      "get": {
        "tags": [
          "Extension"
        ],
        "summary": "Возвращает список всех плагинов.",
        "operationId": "Extension_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.nameSearchedText",
            "in": "query",
            "description": "Текст поиска в имени.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.classNameSearchedText",
            "in": "query",
            "description": "Текст поиска в имени класса.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.isDisabled",
            "in": "query",
            "description": "Состояние.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfExtensionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsView"
        ]
      },
      "put": {
        "tags": [
          "Extension"
        ],
        "summary": "Добавить плагин.",
        "operationId": "Extension_CreateExtension",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель плагина.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsManage"
        ]
      }
    },
    "/api/extensions/{id}": {
      "get": {
        "tags": [
          "Extension"
        ],
        "summary": "Получить плагин по ID.",
        "operationId": "Extension_GetExtension",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfExtensionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsView"
        ]
      },
      "post": {
        "tags": [
          "Extension"
        ],
        "summary": "Редактирование плагина по ID.",
        "operationId": "Extension_UpdateExtension",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель плагина.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsManage"
        ]
      },
      "delete": {
        "tags": [
          "Extension"
        ],
        "summary": "Удалить плагин.",
        "operationId": "Extension_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsManage"
        ]
      }
    },
    "/api/extensions/{extensionId}/configurations": {
      "get": {
        "tags": [
          "ExtensionConfiguration"
        ],
        "summary": "Получить конфигурацию плагина по его ID.",
        "operationId": "ExtensionConfiguration_GetByExtensionId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "Id плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedKey",
            "in": "query",
            "description": "Ключ.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchedValue",
            "in": "query",
            "description": "Значение.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfExtensionConfigurationViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsView"
        ]
      },
      "put": {
        "tags": [
          "ExtensionConfiguration"
        ],
        "summary": "Создать новый параметр конфигурации плагина.",
        "operationId": "ExtensionConfiguration_CreateExtensionConfiguration",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "Id плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель конфигурации.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionConfigurationViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsManage"
        ]
      }
    },
    "/api/extensions/{extensionId}/configurations/{id}": {
      "get": {
        "tags": [
          "ExtensionConfiguration"
        ],
        "summary": "Получить конфигурацию плагина по ID.",
        "operationId": "ExtensionConfiguration_GetByExtensionIdAndKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "Id плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfExtensionConfigurationViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsView"
        ]
      },
      "post": {
        "tags": [
          "ExtensionConfiguration"
        ],
        "summary": "Редактирование конфигурации плагина по Id.",
        "operationId": "ExtensionConfiguration_UpdateExtensionConfiguration",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "Id плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель конфигурации.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionConfigurationViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsManage"
        ]
      },
      "delete": {
        "tags": [
          "ExtensionConfiguration"
        ],
        "summary": "Удалить конфигурацию плагина по ID.",
        "operationId": "ExtensionConfiguration_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "Id плагина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PluginsManage"
        ]
      }
    },
    "/api/users/{personId}/favoriteGoods": {
      "get": {
        "tags": [
          "FavoriteGoods"
        ],
        "summary": "Функция возвращает список наборов любимых товаров.",
        "operationId": "FavoriteGoods_GetFavoriteGoodsList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id персоны.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Дата начала интервала.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Дата окончания интервала.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого номера.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько записей вернуть.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "Наименование группы товаров.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "personalOfferName",
            "in": "query",
            "description": "Наименование персонального предложения.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfFavoriteGoodsSetShortViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FavoriteGoodsView"
        ]
      }
    },
    "/api/users/{personId}/favoriteGoods/{id}": {
      "get": {
        "tags": [
          "FavoriteGoods"
        ],
        "summary": "Функция возвращает набор любимых товаров.",
        "operationId": "FavoriteGoods_GetFavoriteGoods",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id персоны.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id набора любимых товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFavoriteGoodsSetViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FavoriteGoodsView"
        ]
      },
      "post": {
        "tags": [
          "FavoriteGoods"
        ],
        "summary": "Функция устанавливает набор любимых товаров пользователя.",
        "operationId": "FavoriteGoods_SetFavoriteGoods",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id персоны.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id набора любимых товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "query",
            "description": "Номер позиции в наборе любимых товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsId",
            "in": "query",
            "description": "Id нового товара для изменения.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pin",
            "in": "query",
            "description": "Pin код подтверждения (необязательный).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FavoriteGoodsEdit",
          "FavoriteGoodsManage"
        ]
      },
      "delete": {
        "tags": [
          "FavoriteGoods"
        ],
        "summary": "Функция очищает набор любимых товаров.",
        "operationId": "FavoriteGoods_DeleteFavoriteGoods",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id персоны.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id набора любимых товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FavoriteGoodsManage"
        ]
      }
    },
    "/api/files": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Получить указанное количество файлов с указанной позиции.",
        "operationId": "File_Gets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Позиция первого файла.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество файлов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Поиск по имени файла.",
            "required": false,
            "type": "string"
          },
          {
            "name": "guid",
            "in": "query",
            "description": "Поиск по Guid.",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfFileEdit"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesView",
          "FilesRead"
        ]
      },
      "put": {
        "tags": [
          "File"
        ],
        "summary": "Создание файла.",
        "operationId": "File_CreateFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Имя файла.",
            "required": true,
            "type": "string"
          },
          {
            "name": "guid",
            "in": "query",
            "description": "Уникальное имя файла.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesManage"
        ]
      }
    },
    "/api/files/{id}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Получить параметры файла.",
        "operationId": "File_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFileEdit"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesView",
          "FilesRead"
        ]
      },
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Редактирование файла.",
        "operationId": "File_UpdateFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "guid",
            "in": "query",
            "description": "Уникальное имя файла.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Имя файла.",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesManage"
        ]
      },
      "delete": {
        "tags": [
          "File"
        ],
        "summary": "Удаление файла.",
        "operationId": "File_DeleteFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesManage"
        ]
      }
    },
    "/api/files/guid/{guid}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Получить параметры файла.",
        "description": "Используется только в витрине.",
        "operationId": "File_GetFileByGuid",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "Guid файла.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFileEdit"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesView",
          "FilesRead"
        ]
      }
    },
    "/api/files/maxSizeFile": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Максимальный размер загружаемого файла.",
        "operationId": "File_MaxSize",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesView"
        ]
      }
    },
    "/api/Files/{id}": {
      "get": {
        "tags": [
          "FileStorage"
        ],
        "summary": "Получение файла из файлового хранилища.",
        "operationId": "FileStorage_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "query",
            "description": "Идентификатор задачи рассылки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDownload",
            "in": "query",
            "description": "Триггер скачивания файла.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Filters/FiltersTree": {
      "get": {
        "tags": [
          "FilterTree"
        ],
        "summary": "Возвращает дерево доступных фильтров для заданного FilterTreeDestinationType.",
        "operationId": "FilterTree_GetFiltersTree",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "getFiltersTreeModel.offerId",
            "in": "query",
            "description": "Id акции.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "getFiltersTreeModel.chainId",
            "in": "query",
            "description": "Id цепочки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "getFiltersTreeModel.filterDestinationType",
            "in": "query",
            "description": "Для чего нужно получить дерево фильтров.",
            "required": false,
            "type": "string",
            "enum": [
              "TargetGroup",
              "Offer",
              "OfferAction",
              "FilterPurchase",
              "FilterPosition"
            ],
            "x-loymax-type": "Loymax.Business.Filters.FilterDestinationType, Loymax.Business.Filters",
            "x-loymax-enum-type": "FilterDestinationType"
          },
          {
            "name": "getFiltersTreeModel.eventType",
            "in": "query",
            "description": "Тип события.",
            "required": false,
            "type": "string",
            "enum": [
              "OnPurchaseCalculate",
              "OnAttachPhone",
              "OnPurchaseConfirm",
              "OnPurchasePayment",
              "OnBalanceRequest",
              "OnCardIssue",
              "OnCardActivation",
              "OnSocialActivity",
              "OnSocialGroupJoin",
              "OnFriendInvite",
              "OnSocialGroupLeave",
              "OnQuestionnaireUpdate",
              "OnMobileAppInstall",
              "OnEndPersonRegistration",
              "OnSocialNetworkLink",
              "OnBonusLifetimeExpired",
              "OnBirthday",
              "OnPurchaseRefund",
              "OnReferralPurchase",
              "OnPurchaseCancel",
              "OnRemoveSocialActivity",
              "OnPurchaseDiscount",
              "OnSendPasswordToCheque",
              "OnGoodsSetProcess",
              "OnAttachEmail",
              "OnBonusLifetimeActivation",
              "OnPurchasePaymentCalculate",
              "OnPurchasePaymentCancel",
              "OnCouponPurchased",
              "OnCouponRefunded",
              "OnPurchaseDeposit",
              "OnCardAttach",
              "OnCardReplace",
              "OnExternalCardReplace",
              "OnPurchaseRefundCalculate",
              "OnManualCharge",
              "OnManualWithdraw"
            ],
            "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
            "x-loymax-enum-type": "OfferEventType"
          },
          {
            "name": "getFiltersTreeModel.exclusionType",
            "in": "query",
            "description": "Тип события, исходя из которого нужно отфильтровать результат.",
            "required": false,
            "type": "string",
            "enum": [
              "OnPurchaseCalculate",
              "OnAttachPhone",
              "OnPurchaseConfirm",
              "OnPurchasePayment",
              "OnBalanceRequest",
              "OnCardIssue",
              "OnCardActivation",
              "OnSocialActivity",
              "OnSocialGroupJoin",
              "OnFriendInvite",
              "OnSocialGroupLeave",
              "OnQuestionnaireUpdate",
              "OnMobileAppInstall",
              "OnEndPersonRegistration",
              "OnSocialNetworkLink",
              "OnBonusLifetimeExpired",
              "OnBirthday",
              "OnPurchaseRefund",
              "OnReferralPurchase",
              "OnPurchaseCancel",
              "OnRemoveSocialActivity",
              "OnPurchaseDiscount",
              "OnSendPasswordToCheque",
              "OnGoodsSetProcess",
              "OnAttachEmail",
              "OnBonusLifetimeActivation",
              "OnPurchasePaymentCalculate",
              "OnPurchasePaymentCancel",
              "OnCouponPurchased",
              "OnCouponRefunded",
              "OnPurchaseDeposit",
              "OnCardAttach",
              "OnCardReplace",
              "OnExternalCardReplace",
              "OnPurchaseRefundCalculate",
              "OnManualCharge",
              "OnManualWithdraw"
            ],
            "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
            "x-loymax-enum-type": "OfferEventType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfFilterTreeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView",
          "TargetGroupView"
        ]
      }
    },
    "/api/filterTypes": {
      "get": {
        "tags": [
          "FilterType"
        ],
        "summary": "Возвращает доступные типы фильтров.",
        "operationId": "FilterType_GetFilterTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "filter.substring",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.showMode",
            "in": "query",
            "description": "Режим отображения архивных типов фильтров.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfFilterTypeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilterTypesView"
        ]
      }
    },
    "/api/filterTypes/{id}/Delete": {
      "post": {
        "tags": [
          "FilterType"
        ],
        "summary": "Удалить тип фильтра.",
        "operationId": "FilterType_DeleteFilterType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilterTypesManage"
        ]
      }
    },
    "/api/filterTypes/{id}/Restore": {
      "post": {
        "tags": [
          "FilterType"
        ],
        "summary": "Восстановить тип фильтра.",
        "operationId": "FilterType_RestoreFilterType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilterTypesManage"
        ]
      }
    },
    "/api/Questions/FixedAnswers/{id}": {
      "get": {
        "tags": [
          "FixedAnswer"
        ],
        "summary": "Получить фиксированный ответ.",
        "operationId": "FixedAnswer_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор фиксированного ответа.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFixedAnswerViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireView",
          "QuestionnaireRead"
        ]
      },
      "post": {
        "tags": [
          "FixedAnswer"
        ],
        "summary": "Обновить фиксированный ответ.",
        "operationId": "FixedAnswer_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель фиксированного ответа.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FixedAnswerViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      },
      "delete": {
        "tags": [
          "FixedAnswer"
        ],
        "summary": "Удалить фиксированный ответ.",
        "operationId": "FixedAnswer_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор удаляемого фиксированного ответа.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/Questions/FixedAnswers": {
      "get": {
        "tags": [
          "FixedAnswer"
        ],
        "summary": "Получить все фиксированные ответы по вопросу.",
        "operationId": "FixedAnswer_GetAllByQuestion",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "query",
            "description": "Id вопроса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfFixedAnswerViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireView",
          "QuestionnaireRead"
        ]
      },
      "put": {
        "tags": [
          "FixedAnswer"
        ],
        "summary": "Создать фиксированный ответ.",
        "operationId": "FixedAnswer_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель фиксированного ответа.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FixedAnswerViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/Questions/FixedAnswers/{id}/ChangePosition": {
      "post": {
        "tags": [
          "FixedAnswer"
        ],
        "summary": "Изменить порядок фиксированного ответа.",
        "operationId": "FixedAnswer_ChangePosition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор изменяемого фиксированного ответа.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Порядок.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/goodsCatalog": {
      "get": {
        "tags": [
          "GoodsCatalog"
        ],
        "summary": "Получить каталог товаров.",
        "operationId": "GoodsCatalog_GetGoodsCatalog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "query",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Id родительского узла.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст, используемый при фильтрации.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchParameter",
            "in": "query",
            "description": "Параметр, по которому выполняется поиск.",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "ItemId",
              "BarCode"
            ],
            "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
            "x-loymax-enum-type": "GoodsCatalogSearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsCatalog/info/{catalogItemId}": {
      "get": {
        "tags": [
          "GoodsCatalog"
        ],
        "summary": "Получить информацию об элементе в каталоге.",
        "operationId": "GoodsCatalog_GetCatalogItemInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "query",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "catalogItemId",
            "in": "path",
            "description": "Id элемента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfGoodsCatalogLeafViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups": {
      "get": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Получить полную информацию о группах товаров.",
        "operationId": "GoodsGroup_GetGoodsGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "sortingFilterId",
            "in": "query",
            "description": "ID фильтра, группы товаров которого будут выбираться первыми.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortingIds",
            "in": "query",
            "description": "Список идентификаторов для первоочередного выбора.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "properties",
            "in": "query",
            "description": "Требуемые свойства view-модели. Если не указано ни одного, то будут заданы все.",
            "required": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.creatorIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.partnerIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.archivedShowMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsGroupViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      },
      "put": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Создание группы товаров.",
        "operationId": "GoodsGroup_CreateGoodsGroup",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель группы товаров.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsGroupModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{id}": {
      "get": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Получить группу товаров по id.",
        "operationId": "GoodsGroup_GetGoodsGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfGoodsGroupViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      },
      "post": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Редактирование группы товаров.",
        "operationId": "GoodsGroup_UpdateGoodsGroup",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель группы товаров.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsGroupModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      },
      "delete": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Архивировать группу товаров.",
        "operationId": "GoodsGroup_ArchiveGoodsGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{id}/goodsCount": {
      "get": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Получить количество товаров в группе товаров.",
        "description": "Для фиксированной группы товаров - количество зафиксированных товаров, для нефиксированной - текущее количество товаров в наборах.",
        "operationId": "GoodsGroup_GetGoodsGroupGoodsCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      }
    },
    "/api/goodsGroups/{id}/fix": {
      "post": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Фиксация группы товаров.",
        "operationId": "GoodsGroup_FixGoodsGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{id}/unfix": {
      "post": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Снять фиксацию с группы товаров.",
        "operationId": "GoodsGroup_UnfixGoodsGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{id}/restore": {
      "post": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Восстановить из архива группу товаров.",
        "operationId": "GoodsGroup_RestoreGoodsGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/creators": {
      "get": {
        "tags": [
          "GoodsGroup"
        ],
        "summary": "Получение списка создателей групп товаров.",
        "operationId": "GoodsGroup_GetGoodsGroupsCreators",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим отображения создателей архивных групп товаров.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCreatorModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/fixedCatalog": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить каталог зафиксированных товаров группы товаров.",
        "operationId": "GoodsGroupCatalog_GetGoodsGroupFixedCatalog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Id родительского узла.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/fixedCatalog/search": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить иерархию каталога товаров от корневого элемента до отфильтрованных, зафиксированных.",
        "operationId": "GoodsGroupCatalog_GetCatalogHierarchyToFilteredFixedCatalogItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов удовлетворяющих фильтру.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст, используемый при фильтрации.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchParameter",
            "in": "query",
            "description": "Параметр, по которому выполняется поиск.",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "ItemId",
              "BarCode"
            ],
            "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
            "x-loymax-enum-type": "GoodsCatalogSearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/catalog": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить каталог товаров, состоящих в наборах группы товаров.",
        "operationId": "GoodsGroupCatalog_GetGoodsGroupCatalog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Id родительского узла.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/catalog/search": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить иерархию каталога товаров от корневого элемента до отфильтрованных, состоящих в группе товаров.",
        "operationId": "GoodsGroupCatalog_GetCatalogHierarchyToFilteredGoodsGroupCatalogItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов удовлетворяющих фильтру.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст, используемый при фильтрации.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchParameter",
            "in": "query",
            "description": "Параметр, по которому выполняется поиск.",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "ItemId",
              "BarCode"
            ],
            "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
            "x-loymax-enum-type": "GoodsCatalogSearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить каталог товаров набора.",
        "operationId": "GoodsGroupCatalog_GetGoodsSetCatalog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Id родительского узла.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "checkedOnly",
            "in": "query",
            "description": "Отображать только выбранные элементы.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст, используемый при фильтрации.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchParameter",
            "in": "query",
            "description": "Параметр, по которому выполняется поиск.",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "ItemId",
              "BarCode"
            ],
            "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
            "x-loymax-enum-type": "GoodsCatalogSearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog/search": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных.",
        "operationId": "GoodsGroupCatalog_GetCatalogHierarchyToFilteredCatalogItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов удовлетворяющих фильтру.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст, используемый при фильтрации.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchParameter",
            "in": "query",
            "description": "Параметр, по которому выполняется поиск.",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "ItemId",
              "BarCode"
            ],
            "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
            "x-loymax-enum-type": "GoodsCatalogSearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/filteredCatalog": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить каталог товаров, подходящих под фильтры по атрибутам.",
        "operationId": "GoodsGroupCatalog_GetGoodsSetFilteredCatalog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Id родительского узла.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/filteredCatalog/search": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных по атрибутам и фильтру.",
        "operationId": "GoodsGroupCatalog_GetCatalogHierarchyToFilteredAttributesCatalogItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов удовлетворяющих фильтру.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст, используемый при фильтрации.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchParameter",
            "in": "query",
            "description": "Параметр, по которому выполняется поиск.",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "ItemId",
              "BarCode"
            ],
            "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
            "x-loymax-enum-type": "GoodsCatalogSearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/attributeFilter/{attributeFilterId}/catalog": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить каталог товаров, подходящих под фильтр по атрибуту.",
        "operationId": "GoodsGroupCatalog_GetGoodsSetAttributeFilterCatalog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeFilterId",
            "in": "path",
            "description": "Id фильтра по атрибуту.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Id родительского узла.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/attributeFilter/{attributeFilterId}/catalog/search": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных по атрибуту и строке поиска.",
        "operationId": "GoodsGroupCatalog_GetCatalogHierarchyToFilteredAttributeCatalogItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeFilterId",
            "in": "path",
            "description": "Id фильтра по атрибуту.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов удовлетворяющих фильтру.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст, используемый при фильтрации.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.searchParameter",
            "in": "query",
            "description": "Параметр, по которому выполняется поиск.",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "ItemId",
              "BarCode"
            ],
            "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
            "x-loymax-enum-type": "GoodsCatalogSearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog/items/{goodsCatalogItemId}": {
      "post": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Обновить состояние элемента каталога в наборе товаров.",
        "operationId": "GoodsGroupCatalog_UpdateGoodsSetCatalogItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsCatalogItemId",
            "in": "path",
            "description": "Id элемента каталога.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "checkState",
            "in": "query",
            "description": "Обновленное состояние элемента.",
            "required": true,
            "type": "string",
            "enum": [
              "Unchecked",
              "Indeterminate",
              "Checked"
            ],
            "x-loymax-type": "Loymax.Domain.Contract.Model.Goods.CheckState, Loymax.Domain.Contract",
            "x-loymax-enum-type": "CheckState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/catalog/items/{catalogItemId}/index": {
      "get": {
        "tags": [
          "GoodsGroupCatalog"
        ],
        "summary": "Получить порядковый номер элемента в каталоге.",
        "operationId": "GoodsGroupCatalog_GetCatalogItemIndex",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "catalogItemId",
            "in": "path",
            "description": "Id элемента каталога.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Id родительского элемента каталога.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      }
    },
    "/api/goodsGroups/Import": {
      "post": {
        "tags": [
          "GoodsGroupImportExport"
        ],
        "summary": "Импортировать группы товаров.",
        "operationId": "GoodsGroupImportExport_ImportGoodsGroups",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "importModel",
            "in": "body",
            "description": "Модель импортируемых групп товаров.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsGroupsImportModel"
            }
          },
          {
            "name": "rewriteExisting",
            "in": "query",
            "description": "Перезаписать ли существующую ГТ.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfGoodsGroupsImportResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/Export": {
      "get": {
        "tags": [
          "GoodsGroupImportExport"
        ],
        "summary": "Экспортировать группу товаров по Id.",
        "operationId": "GoodsGroupImportExport_ExportGoodsGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoodsGroupsExportResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      }
    },
    "/api/goodsGroups/Export": {
      "get": {
        "tags": [
          "GoodsGroupImportExport"
        ],
        "summary": "Экспортировать группы товаров.",
        "operationId": "GoodsGroupImportExport_ExportGoodsGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какой группы товаров начинать экспорт.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество групп товаров.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "creatorIds",
            "in": "query",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "partnerIds",
            "in": "query",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "archivedShowMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoodsGroupsExportResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/goodsSets": {
      "get": {
        "tags": [
          "GoodsGroupSet"
        ],
        "summary": "Получить наборы группы товаров.",
        "operationId": "GoodsGroupSet_GetGoodsGroupGoodsSets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого элемента.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип набора.",
            "required": false,
            "type": "string",
            "enum": [
              "Exclusive",
              "Inclusive"
            ],
            "x-loymax-type": "Loymax.Domain.Contract.Model.Goods.GoodsSetType, Loymax.Domain.Contract",
            "x-loymax-enum-type": "GoodsSetType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfGoodsSetViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      },
      "put": {
        "tags": [
          "GoodsGroupSet"
        ],
        "summary": "Создать набор группы товаров.",
        "operationId": "GoodsGroupSet_CreateGoodsGroupGoodsSet",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель набора товаров.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsSetModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}": {
      "post": {
        "tags": [
          "GoodsGroupSet"
        ],
        "summary": "Редактировать набор группы товаров.",
        "operationId": "GoodsGroupSet_UpdateGoodsGroupGoodsSet",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель набора товаров.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsSetModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      },
      "delete": {
        "tags": [
          "GoodsGroupSet"
        ],
        "summary": "Архивировать набор группы товаров.",
        "operationId": "GoodsGroupSet_DeleteGoodsGroupGoodsSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems": {
      "get": {
        "tags": [
          "GoodsGroupSetAttributeFilter"
        ],
        "summary": "Получить фильтры по атрибутам набора группы товаров.",
        "operationId": "GoodsGroupSetAttributeFilter_GetGoodsSetAttributeFilterItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfGoodsSetAttributeFilterItemViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      },
      "put": {
        "tags": [
          "GoodsGroupSetAttributeFilter"
        ],
        "summary": "Создает фильтр по атрибутам.",
        "operationId": "GoodsGroupSetAttributeFilter_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "View-модель фильтра.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsSetAttributeFilterItemViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/{attributeItemId}": {
      "get": {
        "tags": [
          "GoodsGroupSetAttributeFilter"
        ],
        "summary": "Получает фильтр по атрибутам по его ID.",
        "operationId": "GoodsGroupSetAttributeFilter_GetApiGoodsGroupsByGoodsGroupIdGoodsSetsByGoodsSetIdAttributeItemsByAttributeItemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeItemId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfGoodsSetAttributeFilterItemViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsRead"
        ]
      },
      "post": {
        "tags": [
          "GoodsGroupSetAttributeFilter"
        ],
        "summary": "Редактирует фильтр по атрибутам.",
        "operationId": "GoodsGroupSetAttributeFilter_Edit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeItemId",
            "in": "path",
            "description": "Id фильтра по атрибутам.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "View-модель фильтра.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsSetAttributeFilterItemViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      },
      "delete": {
        "tags": [
          "GoodsGroupSetAttributeFilter"
        ],
        "summary": "Удаляет фильтр по атрибутам.",
        "operationId": "GoodsGroupSetAttributeFilter_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeItemId",
            "in": "path",
            "description": "Id фильтра по атрибутам.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GoodsGroupsManage"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/availableAttributes": {
      "get": {
        "tags": [
          "GoodsGroupSetAttributeFilter"
        ],
        "summary": "Доступные для выбора атрибуты.",
        "operationId": "GoodsGroupSetAttributeFilter_GetAvailableAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCatalogAttributeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/{attributeItemId}/availableAttributes": {
      "get": {
        "tags": [
          "GoodsGroupSetAttributeFilter"
        ],
        "summary": "Получает атрибуты, доступные для выбора в атрибутном фильтре.",
        "operationId": "GoodsGroupSetAttributeFilter_GetItemAvailableAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "goodsGroupId",
            "in": "path",
            "description": "Id группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "goodsSetId",
            "in": "path",
            "description": "Id набора группы товаров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attributeItemId",
            "in": "path",
            "description": "Id фильтра по атрибутам.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCatalogAttributeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      }
    },
    "/api/Users/{personId}/History": {
      "get": {
        "tags": [
          "History"
        ],
        "summary": "Получить историю.",
        "operationId": "History_GetHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Дата с которой необходимо вывести историю.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Дата до которой необходимо вывести историю.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.cardId",
            "in": "query",
            "description": "ID карты. Если указан, то будет получена история только по этой карте.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начиная с какого элемента необходимо выводить.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Кол-во элементов для вывода.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.historyItemType",
            "in": "query",
            "description": "Тип события в истории {Loymax.Mobile.Contract.Models.History.HistoryFilter.HistoryItemType}.",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Purchase",
              "RewardData",
              "WithdrawData"
            ],
            "x-loymax-type": "Loymax.History.Contract.Types.HistoryItemType, Loymax.History.Contract",
            "x-loymax-enum-type": "HistoryItemType"
          },
          {
            "name": "filter.chequeNumber",
            "in": "query",
            "description": "Номер чека.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfHistoryListModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "HistoryPersonRead"
        ]
      }
    },
    "/api/audits": {
      "get": {
        "tags": [
          "HistoryAudit"
        ],
        "summary": "Получить аудиты.",
        "operationId": "HistoryAudit_GetAudits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какой записи.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.auditTypes",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "LoginSuccess",
                "LoginWrongPassword",
                "LoginBlock",
                "CardBlock",
                "CardUnBlock",
                "ChangePhone",
                "RegistrationAcceptOffer",
                "RegistrationPerson",
                "AddUserAction",
                "FinishUserAction",
                "CardActivated",
                "RegistrationAnswerQuestions",
                "CardSetPhone",
                "Answer",
                "RemoveAccount",
                "AddAccount",
                "CardLink",
                "CardUnLink",
                "ChangeEmail",
                "ResetPassword",
                "Mailing",
                "TargetGroup",
                "Offer",
                "CardDelete",
                "CardRecover",
                "Authentication",
                "Filters",
                "PaymentNotEnoughMoney",
                "PaymentCardBlocked",
                "CardIssuance",
                "ExternalCardReplacement",
                "CardPaymentBlock",
                "CardPaymentUnBlock",
                "RunCalculation",
                "CardReplace",
                "ChangePassword",
                "AccountBlock",
                "AccountUnBlock",
                "SetReferrer",
                "AddReferral",
                "ModificationStatusSubscriptions",
                "ConfirmPurchase",
                "CancelPurchase",
                "RegistrationAcceptPersonalDataProcessing",
                "MobileAppInstalled",
                "PrivateClubs",
                "IdentifierBlock",
                "IdentifierUnBlock",
                "CardCategoryChanged",
                "ManualStatusChange",
                "MeatryadManualStatusChange",
                "Deregistration"
              ],
              "x-loymax-type": "Loymax.Entities.AuditType, Loymax.Entities",
              "x-loymax-enum-type": "AuditType"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "AuditType",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<AuditType>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<AuditType>"
          },
          {
            "name": "filter.personId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfHistoryAuditViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AuditView",
          "AuditPersonRead"
        ]
      }
    },
    "/api/audits/{id}": {
      "get": {
        "tags": [
          "HistoryAudit"
        ],
        "summary": "Получить аудит по идентификатору.",
        "operationId": "HistoryAudit_GetAuditById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfHistoryAuditViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AuditView"
        ]
      }
    },
    "/api/images/{imageId}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Получить изображение.",
        "operationId": "Image_GetImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображения.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesView",
          "FilesRead"
        ]
      },
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Сохранить изображение.",
        "operationId": "Image_UpdateImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображения.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Новое изображение.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewFileModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesManage"
        ]
      },
      "delete": {
        "tags": [
          "Image"
        ],
        "summary": "Удалить изображение.",
        "operationId": "Image_DeleteImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображения.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesManage"
        ]
      }
    },
    "/api/images": {
      "put": {
        "tags": [
          "Image"
        ],
        "summary": "Сохранить изображение.",
        "operationId": "Image_AddImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Новое изображение.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewFileModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfGuid"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "FilesManage"
        ]
      }
    },
    "/api/legals": {
      "get": {
        "tags": [
          "Legal"
        ],
        "summary": "Возвращает список доступных юридических лиц.",
        "operationId": "Legal_GetLegals",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Название.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "partnersIds",
            "in": "query",
            "description": "Идентификаторы партнеров.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Идентификатор программы лояльности.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfLegalViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      }
    },
    "/api/lifeTimeDefinitions": {
      "get": {
        "tags": [
          "LifeTimeDefinition"
        ],
        "operationId": "LifeTimeDefinition_GetLifeTimeDefinitions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "logicalName",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "partnerId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lifeTimeDefinitionIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfLifeTimeDefinitionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LifeTimeDefinitionsView",
          "LifeTimeDefinitionsRead"
        ]
      },
      "put": {
        "tags": [
          "LifeTimeDefinition"
        ],
        "summary": "Создает время жизни бонуса.",
        "operationId": "LifeTimeDefinition_CreateLifeTimeDefinition",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LifeTimeDefinitionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LifeTimeDefinitionsManage"
        ]
      }
    },
    "/api/lifeTimeDefinitions/{id}": {
      "get": {
        "tags": [
          "LifeTimeDefinition"
        ],
        "summary": "Получение времени жизни бонуса.",
        "operationId": "LifeTimeDefinition_GetLifeTimeDefinition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор времени жизни бонуса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfLifeTimeDefinitionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LifeTimeDefinitionsView",
          "LifeTimeDefinitionsRead"
        ]
      },
      "post": {
        "tags": [
          "LifeTimeDefinition"
        ],
        "summary": "Редактирование времени жизни бонуса.",
        "operationId": "LifeTimeDefinition_UpdateLifeTimeDefinition",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор времени жизни бонуса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LifeTimeDefinitionViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LifeTimeDefinitionsManage"
        ]
      },
      "delete": {
        "tags": [
          "LifeTimeDefinition"
        ],
        "summary": "Удаляет время жизни бонуса.",
        "operationId": "LifeTimeDefinition_DeleteLifeTimeDefinition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id времени жизни бонуса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LifeTimeDefinitionsManage"
        ]
      }
    },
    "/api/lifeTimeDefinitions/{id}/restore": {
      "post": {
        "tags": [
          "LifeTimeDefinition"
        ],
        "summary": "Востанавливает время жизни бонуса.",
        "operationId": "LifeTimeDefinition_RestoreLifeTimeDefinition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id времени жизни бонуса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LifeTimeDefinitionsManage"
        ]
      }
    },
    "/api/LimitRules": {
      "get": {
        "tags": [
          "Limit"
        ],
        "summary": "Получить информацию о текущих правилах лимитов.",
        "operationId": "Limit_GetRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Фильтр для отображения списка.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfLimitRuleModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      },
      "put": {
        "tags": [
          "Limit"
        ],
        "summary": "Добавляет новое правило.",
        "operationId": "Limit_AddRule",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rule",
            "in": "body",
            "description": "Параметры правила.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitRuleModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/{id}": {
      "get": {
        "tags": [
          "Limit"
        ],
        "summary": "Получить информацию о правиле лимита.",
        "operationId": "Limit_GetRule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfLimitRuleModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      },
      "post": {
        "tags": [
          "Limit"
        ],
        "summary": "Редактировать правило.",
        "operationId": "Limit_UpdateRule",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rule",
            "in": "body",
            "description": "Параметры правила.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitRuleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      },
      "delete": {
        "tags": [
          "Limit"
        ],
        "summary": "Удаление правила.",
        "operationId": "Limit_DeleteRule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/{id}/Restore": {
      "post": {
        "tags": [
          "Limit"
        ],
        "summary": "Восстановление правила.",
        "operationId": "Limit_RestoreRule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/Types": {
      "get": {
        "tags": [
          "Limit"
        ],
        "summary": "Получить информацию о типах лимитов.",
        "operationId": "Limit_GetLimitTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfLimitTypeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      }
    },
    "/api/LimitRules/Periods": {
      "get": {
        "tags": [
          "Limit"
        ],
        "summary": "Получить доступные периоды для конкретного правила.",
        "operationId": "Limit_GetLimitPeriods",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "typeName",
            "in": "query",
            "description": "The type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfLimitPeriod"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      }
    },
    "/api/LimitRules/{ruleId}/Borders/{borderId}/Actions": {
      "get": {
        "tags": [
          "LimitAction"
        ],
        "summary": "Получить список действий.",
        "operationId": "LimitAction_GetActions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfLimitActionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      },
      "put": {
        "tags": [
          "LimitAction"
        ],
        "summary": "Добавить новое действие.",
        "operationId": "LimitAction_AddAction",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Правило, для которого добавляем действие.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limitActionViewModel",
            "in": "body",
            "description": "Действие.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitActionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/{ruleId}/Borders/{borderId}/Actions/{actionId}": {
      "get": {
        "tags": [
          "LimitAction"
        ],
        "summary": "Получить действие для конкретной границы правила.",
        "operationId": "LimitAction_GetAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfLimitActionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      },
      "post": {
        "tags": [
          "LimitAction"
        ],
        "summary": "Редактирование действие.",
        "operationId": "LimitAction_UpdateAction",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Правило, для которого редактируем действие.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limitActionViewModel",
            "in": "body",
            "description": "Вносимые изменения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitActionViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      },
      "delete": {
        "tags": [
          "LimitAction"
        ],
        "summary": "Удаление действия.",
        "operationId": "LimitAction_DeleteAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/{ruleId}/Borders/{borderId}/Actions/{actionId}/Restore": {
      "post": {
        "tags": [
          "LimitAction"
        ],
        "summary": "Восстановление действия.",
        "operationId": "LimitAction_RestoreAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/{ruleId}/Borders": {
      "get": {
        "tags": [
          "LimitBorder"
        ],
        "summary": "Получить список границ для указанного правила.",
        "operationId": "LimitBorder_GetBorders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfLimitBorderModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      },
      "put": {
        "tags": [
          "LimitBorder"
        ],
        "summary": "Добавить новую границу.",
        "operationId": "LimitBorder_AddBorder",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Правило, для которого добавляем границу.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limitBorderModel",
            "in": "body",
            "description": "Граница.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitBorderModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/{ruleId}/Borders/{borderId}": {
      "get": {
        "tags": [
          "LimitBorder"
        ],
        "summary": "Получить границу для указанного правила.",
        "operationId": "LimitBorder_GetBorder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfLimitBorderModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesView"
        ]
      },
      "post": {
        "tags": [
          "LimitBorder"
        ],
        "summary": "Редактирование границы конкретного правила.",
        "operationId": "LimitBorder_UpdateBorder",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderModel",
            "in": "body",
            "description": "Вносимые изменения для границы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitBorderModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      },
      "delete": {
        "tags": [
          "LimitBorder"
        ],
        "summary": "Удаление границы.",
        "operationId": "LimitBorder_DeleteBorder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/LimitRules/{ruleId}/Borders/{borderId}/Restore": {
      "post": {
        "tags": [
          "LimitBorder"
        ],
        "summary": "Восстановление границы.",
        "operationId": "LimitBorder_RestoreBorder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Идентификатор правила.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "borderId",
            "in": "path",
            "description": "Идентификатор границы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LimitRulesManage"
        ]
      }
    },
    "/api/Location/Cities": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Получить список городов.",
        "operationId": "Location_GetCities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "startWith",
            "in": "query",
            "description": "Поисковая строка.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Кол-во выводимых элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Location/Streets": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Получить список улиц.",
        "operationId": "Location_GetStreets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "startWith",
            "in": "query",
            "description": "С какого элемента выводить.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Кол-во выводимых элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "city",
            "in": "query",
            "description": "Фильтр по городу.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Location/Houses": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Получить список домов.",
        "operationId": "Location_GetHouses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "startWith",
            "in": "query",
            "description": "С какого элемента выводить.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Кол-во выводимых элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "street",
            "in": "query",
            "description": "Фильтр по улице.",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "Название города.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Location/Regions": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Получить список регионов.",
        "operationId": "Location_GetRegions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfRegionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Location/Region/{regionId}/Cities": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Получить список регионов.",
        "operationId": "Location_GetCitiesByRegionId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "Id региона.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Индекс первого элемента выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCityViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/locations/Cities": {
      "get": {
        "tags": [
          "LocationEdit"
        ],
        "summary": "Получить список городов.",
        "operationId": "LocationEdit_GetCities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "startSubstr",
            "in": "query",
            "description": "Стартовая подстрока.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого эл-та.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCityDataModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      },
      "put": {
        "tags": [
          "LocationEdit"
        ],
        "summary": "Добавить новый город.",
        "operationId": "LocationEdit_Add",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel города.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CityDataModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LocationsManage"
        ]
      }
    },
    "/api/locations/{id}": {
      "get": {
        "tags": [
          "LocationEdit"
        ],
        "summary": "Получить Location по идентификатору.",
        "operationId": "LocationEdit_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfLocationDataModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LocationsManage"
        ]
      },
      "post": {
        "tags": [
          "LocationEdit"
        ],
        "summary": "Редактирование Location.",
        "operationId": "LocationEdit_Edit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationDataModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LocationsManage"
        ]
      }
    },
    "/api/locations": {
      "put": {
        "tags": [
          "LocationEdit"
        ],
        "summary": "Добавить новую Location.",
        "operationId": "LocationEdit_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationDataModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LocationsManage"
        ]
      }
    },
    "/api/LoyaltyPrograms": {
      "get": {
        "tags": [
          "LoyaltyProgram"
        ],
        "summary": "Получить список программ лояльности.",
        "operationId": "LoyaltyProgram_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.from",
            "in": "query",
            "description": "С какого элемента брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Сколько элементов брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.partnerIds",
            "in": "query",
            "description": "Список Id партнёров.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Подстрока для фильтрации по имени.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.sortingIds",
            "in": "query",
            "description": "Список идентификаторов для первоочередного выбора.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfLoyaltyProgramModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsView",
          "LoyaltyProgramsRead"
        ]
      },
      "put": {
        "tags": [
          "LoyaltyProgram"
        ],
        "summary": "Создать программу лояльности.",
        "operationId": "LoyaltyProgram_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель данных программы лояльности.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoyaltyProgramModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsManage"
        ]
      }
    },
    "/api/LoyaltyPrograms/{id}": {
      "get": {
        "tags": [
          "LoyaltyProgram"
        ],
        "summary": "Получить программу лояльности по системному идентификатору.",
        "operationId": "LoyaltyProgram_GetApiLoyaltyProgramsById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfLoyaltyProgramModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsView",
          "LoyaltyProgramsRead"
        ]
      },
      "post": {
        "tags": [
          "LoyaltyProgram"
        ],
        "summary": "Редактировать программу лояльности.",
        "operationId": "LoyaltyProgram_Edit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель редактирования данных программы лояльности.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoyaltyProgramModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsManage"
        ]
      }
    },
    "/api/LoyaltyPrograms/{id}/Partners": {
      "get": {
        "tags": [
          "LoyaltyProgram"
        ],
        "summary": "Получить список партнёров программы лояльности.",
        "operationId": "LoyaltyProgram_GetPartners",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начальная позиция.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPartnerModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "LoyaltyProgramsView"
        ]
      }
    },
    "/api/LoyaltyPrograms/{id}/Partners/{partnerId}": {
      "put": {
        "tags": [
          "LoyaltyProgram"
        ],
        "summary": "Добавить партнёра в программу лояльности.",
        "operationId": "LoyaltyProgram_AddPartner",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнёра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage",
          "LoyaltyProgramsManage"
        ]
      },
      "delete": {
        "tags": [
          "LoyaltyProgram"
        ],
        "summary": "Удалить партнёра из программы лояльности.",
        "operationId": "LoyaltyProgram_RemovePartner",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнёра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage",
          "LoyaltyProgramsManage"
        ]
      }
    },
    "/api/loyaltyPrograms/{loyaltyProgramId}/Images": {
      "get": {
        "tags": [
          "LoyaltyProgramsImages"
        ],
        "summary": "Получить список изображений для программы лояльности.",
        "operationId": "LoyaltyProgramsImages_GetImages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "loyaltyProgramId",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsView"
        ]
      },
      "put": {
        "tags": [
          "LoyaltyProgramsImages"
        ],
        "summary": "Создать изображение.",
        "operationId": "LoyaltyProgramsImages_AddImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "loyaltyProgramId",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Новое изображение.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewImageFileModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsManage"
        ]
      },
      "post": {
        "tags": [
          "LoyaltyProgramsImages"
        ],
        "summary": "Обновить изображение.",
        "operationId": "LoyaltyProgramsImages_EditImage",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "loyaltyProgramId",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель изображения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedImageFileModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsManage"
        ]
      }
    },
    "/api/loyaltyPrograms/{loyaltyProgramId}/Images/{imageId}": {
      "get": {
        "tags": [
          "LoyaltyProgramsImages"
        ],
        "summary": "Получить изображение.",
        "operationId": "LoyaltyProgramsImages_GetImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "loyaltyProgramId",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор файла.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfImageFileViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsView"
        ]
      },
      "delete": {
        "tags": [
          "LoyaltyProgramsImages"
        ],
        "summary": "Удалить изображение.",
        "operationId": "LoyaltyProgramsImages_DeleteImage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "loyaltyProgramId",
            "in": "path",
            "description": "Идентификатор программы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Идентификатор изображение.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LoyaltyProgramsManage"
        ]
      }
    },
    "/api/OAuth/Clients": {
      "get": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Получает список доступных OAuth клиентов.",
        "operationId": "LoymaxClient_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какой позиции.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Признак архивации.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfOAuthSettings"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworkView"
        ]
      },
      "put": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Создание OAuth клиента.",
        "operationId": "LoymaxClient_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clients",
            "in": "body",
            "description": "Настройки доступа к OAuth сервису.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthSettingsViewModelEx"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworkManage"
        ]
      }
    },
    "/api/OAuth/Clients/{id}": {
      "get": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Возвращает OAuth клиента по id.",
        "operationId": "LoymaxClient_GetApiOAuthClientsById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id OAuth клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOAuthSettings"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworkView"
        ]
      },
      "post": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Редактирование OAuth клиента.",
        "operationId": "LoymaxClient_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор настроек доступа к OAuth сервису.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clients",
            "in": "body",
            "description": "Настройки доступа к OAuth сервису.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthSettingsViewModelEx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworkManage"
        ]
      },
      "delete": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Удаляет OAuth клиента по id записи.",
        "operationId": "LoymaxClient_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id записи.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworkManage"
        ]
      }
    },
    "/api/OAuth/Clients/{provider}/Activities": {
      "get": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Получает список доступных для отслеживания типов активности.",
        "operationId": "LoymaxClient_Activities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "Провайдер.",
            "required": true,
            "type": "string",
            "enum": [
              "Facebook",
              "VKontakte",
              "Instagram",
              "Twitter",
              "Google",
              "MyMail",
              "Odnoklassniki",
              "Loymax"
            ],
            "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProviderType, Loymax.Business.Social.Common",
            "x-loymax-enum-type": "OAuthProviderType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOAuthActivityType"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/OAuth/Clients/{provider}/Objects/{target}": {
      "get": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Получает список доступных для отслеживания объектов.",
        "operationId": "LoymaxClient_Objects",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "Провайдер.",
            "required": true,
            "type": "string",
            "enum": [
              "Facebook",
              "VKontakte",
              "Instagram",
              "Twitter",
              "Google",
              "MyMail",
              "Odnoklassniki",
              "Loymax"
            ],
            "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProviderType, Loymax.Business.Social.Common",
            "x-loymax-enum-type": "OAuthProviderType"
          },
          {
            "name": "target",
            "in": "path",
            "description": "Идентификатор объекта (владельца публикаций: пользователь, группа и т.п.).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfClientObjectModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/OAuth/Clients/{id}/restore": {
      "post": {
        "tags": [
          "LoymaxClient"
        ],
        "summary": "Восстановление OAuth клиента по id записи.",
        "operationId": "LoymaxClient_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id запроса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworkManage"
        ]
      }
    },
    "/api/mailings": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Получить список рассылок.",
        "operationId": "Mailing_GetMailings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Дата С.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Дата По.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.from",
            "in": "query",
            "description": "С какого элемента брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Сколько элементов брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.creatorIds",
            "in": "query",
            "description": "Список id создателей акций для фильтрации.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Название.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.mailingType",
            "in": "query",
            "description": "Тип рассылки.",
            "required": false,
            "type": "string",
            "enum": [
              "Mail",
              "Sms",
              "Push",
              "Viber",
              "SocialNetworks",
              "ChatBot"
            ],
            "x-loymax-type": "Loymax.Entities.MailingWaySendType, Loymax.Entities",
            "x-loymax-enum-type": "MailingWaySendType"
          },
          {
            "name": "filter.marketingCampaignId",
            "in": "query",
            "description": "ID маркетинговой кампании.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.sortByAttachDate",
            "in": "query",
            "description": "Значение, указывающее, нужно ли сортировать рассылки по дате прикрепления.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.loyaltyProgramIds",
            "in": "query",
            "description": "Идентификаторы программ лояльности.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMailingBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      },
      "put": {
        "tags": [
          "Mailing"
        ],
        "summary": "Создаёт рассылку.",
        "operationId": "Mailing_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель создания рассылки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailingCreateModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailingViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingManage"
        ]
      }
    },
    "/api/mailings/{mailingId}": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Возвращает модель рассылки.",
        "operationId": "Mailing_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailingViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      },
      "post": {
        "tags": [
          "Mailing"
        ],
        "summary": "Сохраняет рассылку.",
        "operationId": "Mailing_Save",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель рассылки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailingViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailingViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingManage"
        ]
      },
      "delete": {
        "tags": [
          "Mailing"
        ],
        "summary": "Удаляет рассылку.",
        "operationId": "Mailing_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingManage"
        ]
      }
    },
    "/api/mailings/{mailingId}/run": {
      "post": {
        "tags": [
          "Mailing"
        ],
        "summary": "Запускает рассылку.",
        "operationId": "Mailing_Run",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Дата и время запуска рассылки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailingRunViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailingViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingTaskRun"
        ]
      }
    },
    "/api/mailings/{mailingId}/phones": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Возвращает модель загруженных номеров телефонов в рассылку.",
        "operationId": "Mailing_Phones",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailingPhonesViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      },
      "post": {
        "tags": [
          "Mailing"
        ],
        "summary": "Загружает номера телефонов в SMS рассылку.",
        "operationId": "Mailing_PostApiMailingsByMailingIdPhones",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель загружаемых телефонов.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailingPhonesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailingPhonesViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingManage"
        ]
      }
    },
    "/api/mailings/{mailingId}/sendTest": {
      "post": {
        "tags": [
          "Mailing"
        ],
        "summary": "Отправляет тестовое сообщение.",
        "operationId": "Mailing_SendTest",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель тестовой рассылки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailingTestsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingManage"
        ]
      }
    },
    "/api/mailings/{mailingId}/gateways": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Возвращает доступные шлюза рассылки.",
        "operationId": "Mailing_Gateways",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfMailingGatewayViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      }
    },
    "/api/mailingCreators": {
      "get": {
        "tags": [
          "MailingCreator"
        ],
        "summary": "Получает список создателей рассылок.",
        "operationId": "MailingCreator_GetCreators",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCreatorModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      }
    },
    "/api/mailingSubscriptionTypes": {
      "get": {
        "tags": [
          "MailingSubscriptionType"
        ],
        "summary": "Позвращает типы рассылки.",
        "operationId": "MailingSubscriptionType_GetTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfMailingSubscriptionTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView",
          "EmailMessagesPersonRead"
        ]
      }
    },
    "/api/mailings/{mailingId}/tasks": {
      "get": {
        "tags": [
          "MailingTask"
        ],
        "summary": "Возвращает список задач для рассылки.",
        "operationId": "MailingTask_GetMailingsTasks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какой задачи по порядку.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество задач.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMailingTaskViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      }
    },
    "/api/mailings/{mailingId}/tasks/{mailingTaskId}/cancel": {
      "post": {
        "tags": [
          "MailingTask"
        ],
        "summary": "Отменяет задачу рассылки.",
        "operationId": "MailingTask_Cancel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mailingTaskId",
            "in": "path",
            "description": "Идентификатор задачи.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailingTaskViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingTaskCancel"
        ]
      }
    },
    "/api/campaigns": {
      "get": {
        "tags": [
          "MarketingCampaign"
        ],
        "operationId": "MarketingCampaign_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "partnerIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMarketingCampaignViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsView"
        ]
      },
      "put": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Добавляет новую кампанию.",
        "operationId": "MarketingCampaign_Add",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "View-модель кампании.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketingCampaignViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage"
        ]
      }
    },
    "/api/campaigns/{id}": {
      "get": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Возвращает кампанию по идентификатору.",
        "operationId": "MarketingCampaign_GetOne",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMarketingCampaignViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsView"
        ]
      },
      "post": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Редактирует существующую кампанию.",
        "operationId": "MarketingCampaign_Edit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "View-модель кампании.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketingCampaignViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage"
        ]
      },
      "delete": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Отправляет кампанию в архив.",
        "operationId": "MarketingCampaign_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage"
        ]
      }
    },
    "/api/campaigns/{id}/offers": {
      "get": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Получить список акций для маркетинговой кампании.",
        "operationId": "MarketingCampaign_GetOffers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор маркетинговой кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого элемента брать.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько элементов брать.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOffersBriefModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView",
          "MarketingCampaignsView"
        ]
      },
      "put": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Добавить акцию для маркетинговой кампании.",
        "operationId": "MarketingCampaign_AddOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор маркетинговой кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerId",
            "in": "query",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage",
          "OfferView"
        ]
      }
    },
    "/api/campaigns/{id}/restore": {
      "post": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Восстанавливает кампанию из архива.",
        "operationId": "MarketingCampaign_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage"
        ]
      }
    },
    "/api/campaigns/{id}/metrics": {
      "get": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Возвращает показатели кампании.",
        "operationId": "MarketingCampaign_GetMetrics",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCampaignMetricsViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignPlanView"
        ]
      },
      "put": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Добавляет показатели для кампании.",
        "operationId": "MarketingCampaign_CreateMetrics",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "View-модель показателей кампании.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignMetricsViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignPlanManage"
        ]
      },
      "post": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Редактирует показатели кампании.",
        "operationId": "MarketingCampaign_EditMetrics",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "View-модель показателей кампании.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignMetricsViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignPlanManage"
        ]
      },
      "delete": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Удаляет показатели для кампании.",
        "operationId": "MarketingCampaign_DeleteMetrics",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignPlanManage"
        ]
      }
    },
    "/api/campaigns/{id}/offers/{offerId}": {
      "delete": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Удалить акцию из маркетинговой кампании.",
        "operationId": "MarketingCampaign_DeleteOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор маркетинговой кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage",
          "OfferView"
        ]
      }
    },
    "/api/campaigns/{id}/mailings": {
      "put": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Добавляет рассылку к кампании.",
        "operationId": "MarketingCampaign_AddMailing",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mailingId",
            "in": "body",
            "description": "Идентификатор рассылки.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage",
          "MailingView"
        ]
      }
    },
    "/api/campaigns/{id}/mailings/{mailingId}": {
      "delete": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Удаляет рассылку из кампании.",
        "operationId": "MarketingCampaign_RemoveMailing",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mailingId",
            "in": "path",
            "description": "Идентификатор рассылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage",
          "MailingView"
        ]
      }
    },
    "/api/campaigns/{id}/availableMailings": {
      "get": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Получает доступные для прикрепления рассылки.",
        "operationId": "MarketingCampaign_GetAvailableMailings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Номер первого элемента.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "name",
            "in": "query",
            "description": "Подстрока названия рассылок.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMailingBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsView",
          "MailingView"
        ]
      }
    },
    "/api/campaigns/{id}/availableBatchOperations": {
      "get": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Получает доступные для прикрепления операции начисления/списания.",
        "operationId": "MarketingCampaign_GetAvailableBatchOperations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Номер первого элемента.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "name",
            "in": "query",
            "description": "Подстрока системного описания начисления/списания .",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfBatchOperationsBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsView",
          "CardDepositView"
        ]
      }
    },
    "/api/campaigns/{id}/batchOperations": {
      "put": {
        "tags": [
          "MarketingCampaign"
        ],
        "summary": "Добавляет операцию начисления/списания к кампании.",
        "operationId": "MarketingCampaign_AddBatchOperations",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор кампании.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchOperationId",
            "in": "body",
            "description": "Идентификатор операции начисления/списания.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MarketingCampaignsManage",
          "CardDeposit"
        ]
      }
    },
    "/api/messages/sms": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает список отправленных смс сообщений.",
        "operationId": "Message_GetSmsMessages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.personUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "filter.state",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "ReadyForSend",
                "Sent",
                "CriticalError",
                "DeliveryInProcess",
                "DeliveryOk",
                "DeliveryFailed",
                "DeliveryRead",
                "DeliveryUnknown",
                "Deleted"
              ],
              "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
              "x-loymax-enum-type": "NotificationMessageState"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "NotificationMessageState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfSmsMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SmsMessagesView",
          "SmsMessagesPersonRead"
        ]
      }
    },
    "/api/messages/sms/{smsId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает информацию о sms сообщении.",
        "operationId": "Message_GetSmsMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "smsId",
            "in": "path",
            "description": "Идентификатор sms сообщения.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSmsMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SmsMessagesView",
          "SmsMessagesPersonRead"
        ]
      }
    },
    "/api/messages/mail": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает список отправленных mail сообщений.",
        "operationId": "Message_GetMailMessages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.header",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.state",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "ReadyForSend",
                "Sent",
                "CriticalError",
                "DeliveryInProcess",
                "DeliveryOk",
                "DeliveryFailed",
                "DeliveryRead",
                "DeliveryUnknown",
                "Deleted"
              ],
              "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
              "x-loymax-enum-type": "NotificationMessageState"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "NotificationMessageState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
          },
          {
            "name": "filter.personUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMailMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "EmailMessagesView",
          "EmailMessagesPersonRead"
        ]
      }
    },
    "/api/messages/mail/{mailId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает информацию о mail сообщении.",
        "operationId": "Message_GetMailMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "mailId",
            "in": "path",
            "description": "Идентификатор mail сообщения.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMailMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "EmailMessagesView",
          "EmailMessagesPersonRead"
        ]
      }
    },
    "/api/messages/push": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает список push сообщений.",
        "operationId": "Message_GetPushMessages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.platformType",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Ios",
                "Android",
                "WindowsPhone",
                "Unknown"
              ],
              "x-loymax-type": "Loymax.Common.Portable.Model.PlatformType, Loymax.Common.Portable",
              "x-loymax-enum-type": "PlatformType"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "PlatformType",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<PlatformType>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<PlatformType>"
          },
          {
            "name": "filter.state",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "ReadyForSend",
                "Sent",
                "CriticalError",
                "DeliveryInProcess",
                "DeliveryOk",
                "DeliveryFailed",
                "DeliveryRead",
                "DeliveryUnknown",
                "Deleted"
              ],
              "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
              "x-loymax-enum-type": "NotificationMessageState"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "NotificationMessageState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
          },
          {
            "name": "filter.header",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.personUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPushMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PushMessagesView",
          "PushMessagesPersonRead"
        ]
      }
    },
    "/api/messages/push/{pushId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает push сообщение.",
        "operationId": "Message_GetPushMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pushId",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPushMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PushMessagesView"
        ]
      }
    },
    "/api/messages/viber": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает список viber сообщений.",
        "operationId": "Message_GetViberMessages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.state",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "ReadyForSend",
                "Sent",
                "CriticalError",
                "DeliveryInProcess",
                "DeliveryOk",
                "DeliveryFailed",
                "DeliveryRead",
                "DeliveryUnknown",
                "Deleted"
              ],
              "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
              "x-loymax-enum-type": "NotificationMessageState"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "NotificationMessageState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
          },
          {
            "name": "filter.personUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfViberMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ViberMessagesView",
          "ViberMessagesPersonRead"
        ]
      }
    },
    "/api/messages/viber/{viberId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает viber сообщение.",
        "operationId": "Message_GetViberMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "viberId",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfViberMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ViberMessagesView",
          "ViberMessagesPersonRead"
        ]
      }
    },
    "/api/messages/notifiers": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает нотификаторы из сообщений.",
        "operationId": "Message_GetMessagesNotifiers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "messagesNotifiersFilter.personUid",
            "in": "query",
            "description": "Гуид пользователя.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "messagesNotifiersFilter.notifyType",
            "in": "query",
            "description": "Тип нотификатора.",
            "required": false,
            "type": "string",
            "enum": [
              "Direct",
              "Sms",
              "Email",
              "Push",
              "Viber",
              "SocialNetworks",
              "ChatBot"
            ],
            "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotifyType, Loymax.Business.NotifyService.MessageSender",
            "x-loymax-enum-type": "NotifyType"
          },
          {
            "name": "messagesNotifiersFilter.substring",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ViberMessagesView",
          "ViberMessagesPersonRead",
          "SmsMessagesView",
          "SmsMessagesPersonRead",
          "EmailMessagesView",
          "EmailMessagesPersonRead",
          "SocialNetworksMessagesView",
          "SocialNetworksMessagesPersonRead",
          "PushMessagesView",
          "PushMessagesPersonRead",
          "ChatBotMessagesView",
          "ChatBotMessagesPersonRead"
        ]
      }
    },
    "/api/messages/socialNetworks": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает список socialNetworks сообщений.",
        "operationId": "Message_GetSocialNetworksMessages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.state",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "ReadyForSend",
                "Sent",
                "CriticalError",
                "DeliveryInProcess",
                "DeliveryOk",
                "DeliveryFailed",
                "DeliveryRead",
                "DeliveryUnknown",
                "Deleted"
              ],
              "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
              "x-loymax-enum-type": "NotificationMessageState"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "NotificationMessageState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
          },
          {
            "name": "filter.personUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfSocialNetworksMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworksMessagesView",
          "SocialNetworksMessagesPersonRead"
        ]
      }
    },
    "/api/messages/socialNetworks/{socialNetworksId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает socialNetwork сообщение.",
        "operationId": "Message_GetSocialNetworksMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "socialNetworksId",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSocialNetworksMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworksMessagesView",
          "SocialNetworksMessagesPersonRead"
        ]
      }
    },
    "/api/messages/chatBot": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает список chatbot сообщений.",
        "operationId": "Message_GetChatBotMessages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.state",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "ReadyForSend",
                "Sent",
                "CriticalError",
                "DeliveryInProcess",
                "DeliveryOk",
                "DeliveryFailed",
                "DeliveryRead",
                "DeliveryUnknown",
                "Deleted"
              ],
              "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
              "x-loymax-enum-type": "NotificationMessageState"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "NotificationMessageState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
          },
          {
            "name": "filter.personUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfChatBotMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ChatBotMessagesView",
          "ChatBotMessagesPersonRead"
        ]
      }
    },
    "/api/messages/chatBot/{chatBotId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получает chatBot сообщение.",
        "operationId": "Message_GetChatBotMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "chatBotId",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfChatBotMessageViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ChatBotMessagesView",
          "ChatBotMessagesPersonRead"
        ]
      }
    },
    "/api/notificationGateways": {
      "get": {
        "tags": [
          "NotificationGateway"
        ],
        "summary": "Возвращает список всех шлюзов.",
        "operationId": "NotificationGateway_GetGateways",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Sms",
              "Email",
              "Push",
              "Viber",
              "SocialsNetworks",
              "ChatBot"
            ],
            "x-loymax-type": "Loymax.Common.NotificationGatewayType, Loymax.Common",
            "x-loymax-enum-type": "NotificationGatewayType"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.proxyName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfNotificationGatewayViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GatewaysView"
        ]
      },
      "put": {
        "tags": [
          "NotificationGateway"
        ],
        "summary": "Создание шлюза.",
        "operationId": "NotificationGateway_CreateGateway",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "gatewayModel",
            "in": "body",
            "description": "Модель шлюза.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationGatewayViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GatewaysManage"
        ]
      }
    },
    "/api/notificationGateways/{id}": {
      "get": {
        "tags": [
          "NotificationGateway"
        ],
        "summary": "Возвращает шлюз.",
        "operationId": "NotificationGateway_GetGateway",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID шлюза.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим отображения архивных шлюзов.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfNotificationGatewayViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GatewaysView"
        ]
      },
      "post": {
        "tags": [
          "NotificationGateway"
        ],
        "summary": "Редактирование шлюза.",
        "operationId": "NotificationGateway_UpdateGateway",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор шлюза.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "gatewayModel",
            "in": "body",
            "description": "Модель шлюза.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationGatewayViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GatewaysManage"
        ]
      },
      "delete": {
        "tags": [
          "NotificationGateway"
        ],
        "summary": "Удаление (архивирование) шлюза.",
        "operationId": "NotificationGateway_DeleteGateway",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id шлюза.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GatewaysManage"
        ]
      }
    },
    "/api/notificationGateways/{id}/restore": {
      "post": {
        "tags": [
          "NotificationGateway"
        ],
        "summary": "Восстановление архивного шлюза.",
        "operationId": "NotificationGateway_RestoreGateway",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id шлюза.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GatewaysManage"
        ]
      }
    },
    "/api/notificationGateways/possibleProtocolTypes": {
      "get": {
        "tags": [
          "NotificationGateway"
        ],
        "summary": "Получение списка зарегистрированных типов протоколов.",
        "operationId": "NotificationGateway_GetGatewayPossibleProtocolTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfNotificationGatewayProtocolTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "GatewaysView"
        ]
      }
    },
    "/api/notificationProxy": {
      "get": {
        "tags": [
          "NotificationProxy"
        ],
        "summary": "Возвращает список всех прокси.",
        "operationId": "NotificationProxy_GetProxies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "titleSearchText",
            "in": "query",
            "description": "Подстрока для поиска.",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим отображения архивных прокси.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfNotificationProxyViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ProxiesView"
        ]
      },
      "put": {
        "tags": [
          "NotificationProxy"
        ],
        "summary": "Создание прокси.",
        "operationId": "NotificationProxy_CreateProxy",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "proxyModel",
            "in": "body",
            "description": "Модель прокси.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationProxyViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ProxiesManage"
        ]
      }
    },
    "/api/notificationProxy/{id}": {
      "get": {
        "tags": [
          "NotificationProxy"
        ],
        "summary": "Возвращает прокси.",
        "operationId": "NotificationProxy_GetProxy",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID прокси.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим отображения архивных прокси.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfNotificationProxyViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ProxiesView"
        ]
      },
      "post": {
        "tags": [
          "NotificationProxy"
        ],
        "summary": "Редактирование прокси.",
        "operationId": "NotificationProxy_UpdateProxy",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор прокси.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "proxyModel",
            "in": "body",
            "description": "Модель прокси.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationProxyViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ProxiesManage"
        ]
      },
      "delete": {
        "tags": [
          "NotificationProxy"
        ],
        "summary": "Удаление (архивирование) прокси.",
        "operationId": "NotificationProxy_DeleteProxy",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id прокси.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ProxiesManage"
        ]
      }
    },
    "/api/notificationProxy/{id}/restore": {
      "post": {
        "tags": [
          "NotificationProxy"
        ],
        "summary": "Восстановление архивного прокси.",
        "operationId": "NotificationProxy_RestoreProxy",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id прокси.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ProxiesManage"
        ]
      }
    },
    "/api/notifyTemplates/{id}": {
      "get": {
        "tags": [
          "NotifyTemplate"
        ],
        "summary": "Возвращает шаблон уведомлений по его ID.",
        "operationId": "NotifyTemplate_GetNotifyTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID шаблона уведомлений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfNotifyTemplateViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "NotifyTemplatesView"
        ]
      },
      "post": {
        "tags": [
          "NotifyTemplate"
        ],
        "summary": "Редактирование шаблона уведомлений.",
        "operationId": "NotifyTemplate_UpdateNotifyTemplate",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор шаблона уведомлений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel шаблона уведомлений.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotifyTemplateViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "NotifyTemplatesManage"
        ]
      },
      "delete": {
        "tags": [
          "NotifyTemplate"
        ],
        "summary": "Удаление шаблона уведомлений.",
        "operationId": "NotifyTemplate_DeleteNotifyTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID шаблона уведомлений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "NotifyTemplatesManage"
        ]
      }
    },
    "/api/notifyTemplates": {
      "get": {
        "tags": [
          "NotifyTemplate"
        ],
        "summary": "Возвращает список шаблонов уведомлений.",
        "operationId": "NotifyTemplate_GetNotifyTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "requestModel.from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "requestModel.count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "requestModel.templateType",
            "in": "query",
            "description": "Тип шаблона уведомлений.",
            "required": false,
            "type": "string",
            "enum": [
              "HeaderAndText",
              "Push",
              "Simple",
              "Messenger",
              "SocialNetworks",
              "ChatBot"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplateType, Loymax.SystemApi",
            "x-loymax-enum-type": "TemplateType"
          },
          {
            "name": "requestModel.logicalNameSubStr",
            "in": "query",
            "description": "Подстрока логического имени шаблона.",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestModel.textSubStr",
            "in": "query",
            "description": "Подстрока текстового описания шаблона.",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestModel.subscriptionType",
            "in": "query",
            "description": "Тип подписки.",
            "required": false,
            "type": "string",
            "enum": [
              "Cashback",
              "Payment",
              "Refill",
              "Offer",
              "System",
              "Mailing",
              "Refund",
              "DeviceEmulation"
            ],
            "x-loymax-type": "Loymax.Entities.MailingSubscriptionType, Loymax.Entities",
            "x-loymax-enum-type": "MailingSubscriptionType"
          },
          {
            "name": "requestModel.showMode",
            "in": "query",
            "description": "Режим отображения архивных шаблонов.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfNotifyTemplateViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "NotifyTemplatesView"
        ]
      },
      "put": {
        "tags": [
          "NotifyTemplate"
        ],
        "summary": "Создает новый шаблон уведомлений.",
        "operationId": "NotifyTemplate_CreateNotifyTemplate",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel шаблона уведомлений.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotifyTemplateViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "NotifyTemplatesManage"
        ]
      }
    },
    "/api/notifyTemplates/{id}/restore": {
      "post": {
        "tags": [
          "NotifyTemplate"
        ],
        "summary": "Восстановление удаленного шаблона уведомлений.",
        "operationId": "NotifyTemplate_RestoreNotifyTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID шаблона уведомлений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "NotifyTemplatesManage"
        ]
      }
    },
    "/api/notifyTemplates/availableSubscriptionTypes": {
      "get": {
        "tags": [
          "NotifyTemplate"
        ],
        "summary": "Возвращает список доступных типов подписки.",
        "operationId": "NotifyTemplate_GetAvailableSubscriptionTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfMailingSubscriptionType"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "NotifyTemplatesView"
        ]
      }
    },
    "/api/offers": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получить список акций.",
        "operationId": "Offer_GetOffers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Дата С.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Дата По.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого элемента брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько элементов брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Подстрока для поиска по имени.",
            "required": false,
            "type": "string"
          },
          {
            "name": "merchantIds",
            "in": "query",
            "description": "Список id магазинов для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "creatorIds",
            "in": "query",
            "description": "Список id создателей акций для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "viewStates",
            "in": "query",
            "description": "Список состояний акции для фильтрации.",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Future",
                "Present",
                "Past"
              ],
              "x-loymax-type": "Loymax.Entities.OfferViewState, Loymax.Entities",
              "x-loymax-enum-type": "OfferViewState"
            },
            "type": "array",
            "x-loymax-enum-type": "OfferViewState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OfferViewState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<OfferViewState>",
            "x-loymax-enum": true
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Колонка для сортировки.",
            "required": false,
            "type": "string",
            "enum": [
              "Priority",
              "Name",
              "BeginTime",
              "EndTime",
              "State",
              "AttachDate"
            ],
            "x-loymax-type": "Loymax.Entities.OfferSortColumn, Loymax.Entities",
            "x-loymax-enum-type": "OfferSortColumn"
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Направление сортировки.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "states",
            "in": "query",
            "description": "Список состояний акции для фильтрации.",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Run",
                "Stop",
                "Archived"
              ],
              "x-loymax-type": "Loymax.WebSites.Common.Models.OfferState, Loymax.WebSites.Common",
              "x-loymax-enum-type": "OfferState"
            },
            "type": "array",
            "x-loymax-enum-type": "OfferState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OfferState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<OfferState>",
            "x-loymax-enum": true
          },
          {
            "name": "partnerIds",
            "in": "query",
            "description": "Список Id партнеров для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "categoryIds",
            "in": "query",
            "description": "Список Id категорий акций.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "priority.lowerBound",
            "in": "query",
            "description": "Нижняя граница приоритета.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "priority.upperBound",
            "in": "query",
            "description": "Верхняя граница приоритета.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "marketingCampaignId",
            "in": "query",
            "description": "Идентификатор маркетинговой кампании.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeMarketingCampaignId",
            "in": "query",
            "description": "Значение, указывающее, включать или исключать акции с заданной МК.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "loyaltyProgramIds",
            "in": "query",
            "description": "Список Id программ лояльности для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "excludeMarketingCampaign",
            "in": "query",
            "description": "Исключает все акции для которых установлена компания.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOffersBriefModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Производит создание акции.",
        "operationId": "Offer_CreateOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createOfferModel",
            "in": "body",
            "description": "Модель для создания акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOfferModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/AvailableCreators": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получает список доступных создателей акций.",
        "operationId": "Offer_GetAvailableCreators",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCreatorModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/offers/AvailablePartners": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получает список доступных партнеров.",
        "operationId": "Offer_GetAvailablePartners",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "viewMode",
            "in": "query",
            "description": "Режим акции.",
            "required": true,
            "type": "string",
            "enum": [
              "View",
              "Edit"
            ],
            "x-loymax-type": "Loymax.WebSites.Common.Models.OfferViewMode, Loymax.WebSites.Common",
            "x-loymax-enum-type": "OfferViewMode"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The from.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "The count.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPartnerModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/offers/OfferPartners": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получает список партнеров акции.",
        "operationId": "Offer_GetOfferPartners",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "query",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPartnerModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/offers/{offerId}/categories": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Редактирует категорию акции.",
        "operationId": "Offer_UpdateOfferCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerCategoryId",
            "in": "query",
            "description": "Id новой категории акции.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/{offerId}/marketingCampaign": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Редактирует маркетинговую кампанию.",
        "operationId": "Offer_UpdateMarketingCampaign",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "marketingCampaignId",
            "in": "query",
            "description": "Id маркетинговой кампании.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit",
          "MarketingCampaignsManage"
        ]
      }
    },
    "/api/offers/OfferInfo": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получает модель для акции.",
        "operationId": "Offer_GetOfferInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "query",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferBriefModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/offers/{offerId}": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получить модель акции.",
        "operationId": "Offer_GetOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/offers/OfferRules": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получает набор правил для акции.",
        "operationId": "Offer_GetOfferRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "query",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOfferRuleModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/offers/SaveChanges": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Сохраняет изменения в акции.",
        "operationId": "Offer_SaveChanges",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "modelBase",
            "in": "body",
            "description": "Модель с Id акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferModelBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/EditOffer": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Производит редактирование информации об акции.",
        "operationId": "Offer_EditOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerModel",
            "in": "body",
            "description": "Модель редактирования акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/SendToApproval": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Отправить акцию на согласование.",
        "operationId": "Offer_SendToApproval",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sendOfferToApprovalModel",
            "in": "body",
            "description": "Модель отправки акции на согласование.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOfferToApprovalModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/AcceptChanges": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Применить изменения акции.",
        "operationId": "Offer_AcceptOfferChanges",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "acceptOfferChangesModel",
            "in": "body",
            "description": "Модель применения изменений для акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptOfferChangesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferManage"
        ]
      }
    },
    "/api/offers/{offerId}/period": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получает вермя действия акции.",
        "operationId": "Offer_GetOfferPeriod",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferPeriodModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Устанавливает период действия акции.",
        "operationId": "Offer_EditOfferPeriod",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewModel",
            "in": "body",
            "description": "Модель периода действия акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferPeriodModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/{offerId}/priority": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получить приоритет акции.",
        "operationId": "Offer_GetOfferPriority",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Устанавливает приоритет акции.",
        "operationId": "Offer_EditOfferPriority",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewModel",
            "in": "body",
            "description": "Модель приоритета акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferPriorityModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/RejectChanges": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Отклонение принятых ранее изменений акции.",
        "operationId": "Offer_RejectChanges",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "rejectOfferChangesModel",
            "in": "body",
            "description": "Модель отклонения изменений.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectOfferChangesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferManage"
        ]
      }
    },
    "/api/offers/ResetChanges": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Удаление черновика акции.",
        "operationId": "Offer_ResetChanges",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerModel",
            "in": "body",
            "description": "Модель акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferModelBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/DeleteOffer": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Удаляет акцию.",
        "operationId": "Offer_DeleteOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerModel",
            "in": "body",
            "description": "Модель акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferModelBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/RestoreOffer": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Востановить акцию.",
        "operationId": "Offer_RestoreOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerModel",
            "in": "body",
            "description": "Модель акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferModelBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offers/StopOffer": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Остановливает акцию.",
        "operationId": "Offer_StopOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "editOfferModelBase",
            "in": "body",
            "description": "Модель акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferModelBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferManage"
        ]
      }
    },
    "/api/offers/StartOffer": {
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Запускает акцию.",
        "operationId": "Offer_StartOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "editOfferModelBase",
            "in": "body",
            "description": "Модель акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferModelBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferManage"
        ]
      }
    },
    "/api/offers/GetChanges": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получить список изменений в акции по сравнению с предыдущей версией.",
        "operationId": "Offer_GetChanges",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "getOfferVersionChangesModel.offerVersionId",
            "in": "query",
            "description": "Id версии акции.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "getOfferVersionChangesModel.mode",
            "in": "query",
            "description": "Режим получения изменений.",
            "required": false,
            "type": "string",
            "enum": [
              "View",
              "Edit",
              "Accept"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.ViewMode, Loymax.SystemApi",
            "x-loymax-enum-type": "ViewMode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOfferVersionChangeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/offers/RoundingSteps": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Получить актуальные шаги округления.",
        "operationId": "Offer_GetRoundingSteps",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains/{offerChainId}/filters": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Получает информацию о фильтрах цепочки действий.",
        "operationId": "OfferActionChainFilter_GetFilters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки действий.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          },
          {
            "name": "filterModelType",
            "in": "query",
            "description": "Тип информации о фильтре.",
            "required": false,
            "type": "string",
            "default": "Short",
            "enum": [
              "Full",
              "Short"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.FilterModelType, Loymax.SystemApi",
            "x-loymax-enum-type": "FilterModelType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfFilterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "put": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Создание фильтра.",
        "operationId": "OfferActionChainFilter_CreateFilter",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterViewModel",
            "in": "body",
            "description": "Фильтр на создание.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains/{offerChainId}/filters/{filterId}": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Получает информацию о фильтре.",
        "operationId": "OfferActionChainFilter_GetFilter",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки действий.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Идентификатор фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          },
          {
            "name": "offerVersionId",
            "in": "query",
            "description": "Версия акции.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFilterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Редактирование фильтра.",
        "operationId": "OfferActionChainFilter_EditFilter",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки действий.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Идентификатор фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterViewModel",
            "in": "body",
            "description": "Фильтр на обновление.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      },
      "delete": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Производит удаление фильтра.",
        "operationId": "OfferActionChainFilter_DeleteFilter",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Идентификатор фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Filters/AvailableCardStates": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Возвращает список всех состояний карты.",
        "operationId": "OfferActionChainFilter_GetCardStates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCardState"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView",
          "TargetGroupView"
        ]
      }
    },
    "/api/Filters/AvailablePersonStates": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Возвращает список всех состояний пользователя.",
        "operationId": "OfferActionChainFilter_GetPersonStates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPersonState"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView",
          "TargetGroupView"
        ]
      }
    },
    "/api/Filters/AvailableWeekDays": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Возвращает список всех дней недели.",
        "operationId": "OfferActionChainFilter_GetWeekDays",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfDayOfWeek"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Filters/AvailableCardEmissions": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Получить список всех выпусков карт.",
        "operationId": "OfferActionChainFilter_GetEmissions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCardEmissionModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView",
          "TargetGroupView"
        ]
      }
    },
    "/api/Filters/AvailableOffers": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Получить список доступных в фильтрах акций.",
        "operationId": "OfferActionChainFilter_GetFiltersOffers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "query",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Название акции.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "from",
            "in": "query",
            "description": "С.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Размер страницы.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfOfferInfoShortViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Filters/{id}/questions": {
      "get": {
        "tags": [
          "OfferActionChainFilter"
        ],
        "summary": "Получить вопросы для фильтра.",
        "operationId": "OfferActionChainFilter_GetQuestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfAnketaQuestionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains": {
      "get": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Получает все цепочки событий акции.",
        "operationId": "OfferActionChains_GetOfferActionChains",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Тип события.",
            "required": false,
            "type": "string",
            "enum": [
              "OnPurchaseCalculate",
              "OnAttachPhone",
              "OnPurchaseConfirm",
              "OnPurchasePayment",
              "OnBalanceRequest",
              "OnCardIssue",
              "OnCardActivation",
              "OnSocialActivity",
              "OnSocialGroupJoin",
              "OnFriendInvite",
              "OnSocialGroupLeave",
              "OnQuestionnaireUpdate",
              "OnMobileAppInstall",
              "OnEndPersonRegistration",
              "OnSocialNetworkLink",
              "OnBonusLifetimeExpired",
              "OnBirthday",
              "OnPurchaseRefund",
              "OnReferralPurchase",
              "OnPurchaseCancel",
              "OnRemoveSocialActivity",
              "OnPurchaseDiscount",
              "OnSendPasswordToCheque",
              "OnGoodsSetProcess",
              "OnAttachEmail",
              "OnBonusLifetimeActivation",
              "OnPurchasePaymentCalculate",
              "OnPurchasePaymentCancel",
              "OnCouponPurchased",
              "OnCouponRefunded",
              "OnPurchaseDeposit",
              "OnCardAttach",
              "OnCardReplace",
              "OnExternalCardReplace",
              "OnPurchaseRefundCalculate",
              "OnManualCharge",
              "OnManualWithdraw"
            ],
            "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
            "x-loymax-enum-type": "OfferEventType"
          },
          {
            "name": "parentId",
            "in": "query",
            "description": "Идентификатор родительского действия.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Объем выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfOfferActionChainViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "put": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Создает цепочку событий.",
        "operationId": "OfferActionChains_CreateOfferActionChain",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewModel",
            "in": "body",
            "description": "Данные цепочки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOfferActionChainModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferActionChainViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains/{offerChainId}": {
      "get": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Получает цепочку событий.",
        "operationId": "OfferActionChains_GetOfferActionChain",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки действий.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferActionChainViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Редактирует цепочку событий.",
        "operationId": "OfferActionChains_EditOfferActionChain",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки действий.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewModel",
            "in": "body",
            "description": "Модель редактирования цепочки действий для акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferActionChainViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      },
      "delete": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Удаление цепочки акций.",
        "operationId": "OfferActionChains_DeleteActionChain",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/AvailableEventTypes": {
      "get": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Получает список доступных событий.",
        "operationId": "OfferActionChains_GetAvailableEventTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOfferEventModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Offers/{offerId}/AvailableActionTypes": {
      "get": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Получает список доступных действий.",
        "operationId": "OfferActionChains_GetAvailableActionTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Тип события.",
            "required": true,
            "type": "string",
            "enum": [
              "OnPurchaseCalculate",
              "OnAttachPhone",
              "OnPurchaseConfirm",
              "OnPurchasePayment",
              "OnBalanceRequest",
              "OnCardIssue",
              "OnCardActivation",
              "OnSocialActivity",
              "OnSocialGroupJoin",
              "OnFriendInvite",
              "OnSocialGroupLeave",
              "OnQuestionnaireUpdate",
              "OnMobileAppInstall",
              "OnEndPersonRegistration",
              "OnSocialNetworkLink",
              "OnBonusLifetimeExpired",
              "OnBirthday",
              "OnPurchaseRefund",
              "OnReferralPurchase",
              "OnPurchaseCancel",
              "OnRemoveSocialActivity",
              "OnPurchaseDiscount",
              "OnSendPasswordToCheque",
              "OnGoodsSetProcess",
              "OnAttachEmail",
              "OnBonusLifetimeActivation",
              "OnPurchasePaymentCalculate",
              "OnPurchasePaymentCancel",
              "OnCouponPurchased",
              "OnCouponRefunded",
              "OnPurchaseDeposit",
              "OnCardAttach",
              "OnCardReplace",
              "OnExternalCardReplace",
              "OnPurchaseRefundCalculate",
              "OnManualCharge",
              "OnManualWithdraw"
            ],
            "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
            "x-loymax-enum-type": "OfferEventType"
          },
          {
            "name": "exclusionType",
            "in": "query",
            "description": "Тип события, по которому требуется отфильтровать типы действий.",
            "required": false,
            "type": "string",
            "enum": [
              "OnPurchaseCalculate",
              "OnAttachPhone",
              "OnPurchaseConfirm",
              "OnPurchasePayment",
              "OnBalanceRequest",
              "OnCardIssue",
              "OnCardActivation",
              "OnSocialActivity",
              "OnSocialGroupJoin",
              "OnFriendInvite",
              "OnSocialGroupLeave",
              "OnQuestionnaireUpdate",
              "OnMobileAppInstall",
              "OnEndPersonRegistration",
              "OnSocialNetworkLink",
              "OnBonusLifetimeExpired",
              "OnBirthday",
              "OnPurchaseRefund",
              "OnReferralPurchase",
              "OnPurchaseCancel",
              "OnRemoveSocialActivity",
              "OnPurchaseDiscount",
              "OnSendPasswordToCheque",
              "OnGoodsSetProcess",
              "OnAttachEmail",
              "OnBonusLifetimeActivation",
              "OnPurchasePaymentCalculate",
              "OnPurchasePaymentCancel",
              "OnCouponPurchased",
              "OnCouponRefunded",
              "OnPurchaseDeposit",
              "OnCardAttach",
              "OnCardReplace",
              "OnExternalCardReplace",
              "OnPurchaseRefundCalculate",
              "OnManualCharge",
              "OnManualWithdraw"
            ],
            "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
            "x-loymax-enum-type": "OfferEventType"
          },
          {
            "name": "chainId",
            "in": "query",
            "description": "Идентификатор цепочки действий.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfActionTypeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains/eventTypes": {
      "get": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Получает список имеющихся действий.",
        "operationId": "OfferActionChains_GetEventTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOfferEventInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains/parentActions/{actionId}": {
      "get": {
        "tags": [
          "OfferActionChains"
        ],
        "summary": "Получить информацию о родительском действии по идентификатору.",
        "operationId": "OfferActionChains_GetParentActionIndex",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfActionPlacementInfo"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains/{offerChainId}/actions": {
      "get": {
        "tags": [
          "OfferActions"
        ],
        "summary": "Получает список не удаленных действий в цепочке.",
        "operationId": "OfferActions_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOfferActionViewModelBase"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "put": {
        "tags": [
          "OfferActions"
        ],
        "summary": "Создание действия акции.",
        "operationId": "OfferActions_CreateOfferAction",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки действий.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerActionViewModelBase",
            "in": "body",
            "description": "Модель.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferActionViewModelBase"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/offerChains/{offerChainId}/actions/{actionId}": {
      "get": {
        "tags": [
          "OfferActions"
        ],
        "summary": "Получает модель действия.",
        "operationId": "OfferActions_GetOfferAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          },
          {
            "name": "offerVersionId",
            "in": "query",
            "description": "Версия акции.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferActionViewModelBase"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "OfferActions"
        ],
        "summary": "Редактирование действия акции.",
        "operationId": "OfferActions_EditOfferAction",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки действий.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerActionViewModelBase",
            "in": "body",
            "description": "Модель для редактирования.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferActionViewModelBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      },
      "delete": {
        "tags": [
          "OfferActions"
        ],
        "summary": "Удаление действия акции.",
        "operationId": "OfferActions_DeleteAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Идентификатор действия.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerChainId",
            "in": "path",
            "description": "Идентификатор цепочки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offerCategories": {
      "get": {
        "tags": [
          "OfferCategory"
        ],
        "summary": "Возвращает список категорий акций.",
        "operationId": "OfferCategory_GetOfferCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Id партнера.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfOfferCategoryViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "put": {
        "tags": [
          "OfferCategory"
        ],
        "summary": "Создает новую категорию акций.",
        "operationId": "OfferCategory_CreateOfferCategory",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель категории акций.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferCategoryViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/offerCategories/{id}": {
      "get": {
        "tags": [
          "OfferCategory"
        ],
        "summary": "Возвращает категорию акций по ID.",
        "operationId": "OfferCategory_GetOfferCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id категории акций.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOfferCategoryViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "OfferCategory"
        ],
        "summary": "Редактирует категорию акций.",
        "operationId": "OfferCategory_UpdateOfferCategory",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id редактируемой категории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель категории акций.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferCategoryViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/Export": {
      "get": {
        "tags": [
          "OfferImportExport"
        ],
        "summary": "Экспортировать все акции.",
        "operationId": "OfferImportExport_GetOffers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Дата С.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Дата По.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого элемента брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько элементов брать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Подстрока для поиска по имени.",
            "required": false,
            "type": "string"
          },
          {
            "name": "merchantIds",
            "in": "query",
            "description": "Список id магазинов для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "creatorIds",
            "in": "query",
            "description": "Список id создателей акций для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "viewStates",
            "in": "query",
            "description": "Список состояний акции для фильтрации.",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Future",
                "Present",
                "Past"
              ],
              "x-loymax-type": "Loymax.Entities.OfferViewState, Loymax.Entities",
              "x-loymax-enum-type": "OfferViewState"
            },
            "type": "array",
            "x-loymax-enum-type": "OfferViewState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OfferViewState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<OfferViewState>",
            "x-loymax-enum": true
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Колонка для сортировки.",
            "required": false,
            "type": "string",
            "enum": [
              "Priority",
              "Name",
              "BeginTime",
              "EndTime",
              "State",
              "AttachDate"
            ],
            "x-loymax-type": "Loymax.Entities.OfferSortColumn, Loymax.Entities",
            "x-loymax-enum-type": "OfferSortColumn"
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Направление сортировки.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "states",
            "in": "query",
            "description": "Список состояний акции для фильтрации.",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Run",
                "Stop",
                "Archived"
              ],
              "x-loymax-type": "Loymax.WebSites.Common.Models.OfferState, Loymax.WebSites.Common",
              "x-loymax-enum-type": "OfferState"
            },
            "type": "array",
            "x-loymax-enum-type": "OfferState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OfferState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.List<OfferState>",
            "x-loymax-enum": true
          },
          {
            "name": "partnerIds",
            "in": "query",
            "description": "Список Id партнеров для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "categoryIds",
            "in": "query",
            "description": "Список Id категорий акций.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "priority.lowerBound",
            "in": "query",
            "description": "Нижняя граница приоритета.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "priority.upperBound",
            "in": "query",
            "description": "Верхняя граница приоритета.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "marketingCampaignId",
            "in": "query",
            "description": "Идентификатор маркетинговой кампании.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeMarketingCampaignId",
            "in": "query",
            "description": "Значение, указывающее, включать или исключать акции с заданной МК.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "loyaltyProgramIds",
            "in": "query",
            "description": "Список Id программ лояльности для фильтрации.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "excludeMarketingCampaign",
            "in": "query",
            "description": "Исключает все акции для которых установлена компания.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffersExportResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Offers/{offerId}/Export": {
      "get": {
        "tags": [
          "OfferImportExport"
        ],
        "summary": "Экспортировать акцию по Id.",
        "operationId": "OfferImportExport_ExportOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffersExportResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      }
    },
    "/api/Offers/Import": {
      "post": {
        "tags": [
          "OfferImportExport"
        ],
        "summary": "Импортировать акции.",
        "operationId": "OfferImportExport_PostOffers",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "importModel",
            "in": "body",
            "description": "Модель импортируемых акций.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OffersImportModel"
            }
          },
          {
            "name": "cancelDrafts",
            "in": "query",
            "description": "Отклонять ли черновики при импорте существующих акций.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfOffersImportResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/Copy": {
      "post": {
        "tags": [
          "OfferImportExport"
        ],
        "summary": "Копировать акцию по Id.",
        "operationId": "OfferImportExport_CopyOffer",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "createOfferModel",
            "in": "body",
            "description": "Модель для создания акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOfferModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/merchants": {
      "get": {
        "tags": [
          "OfferMerchant"
        ],
        "summary": "Получает список магазинов, для которых работает акция.",
        "operationId": "OfferMerchant_GetMerchants",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Включая удаленные.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfMerchantViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "OfferMerchant"
        ],
        "summary": "Редактирует список магазинов, в которых будет работать акция.",
        "operationId": "OfferMerchant_EditOfferMerchants",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantIds",
            "in": "body",
            "description": "Список идентификаторов магазинов.",
            "required": true,
            "schema": {
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/Offers/{offerId}/targetGroups": {
      "get": {
        "tags": [
          "OfferTargetGroup"
        ],
        "summary": "Получает список целевых аудиторий для акции.",
        "operationId": "OfferTargetGroup_GetOfferTargetGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Тип версии.",
            "required": false,
            "type": "string",
            "default": "Draft",
            "enum": [
              "Draft",
              "Actual"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferVersionType, Loymax.SystemApi",
            "x-loymax-enum-type": "OfferVersionType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfTargetGroupBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView",
          "OfferView"
        ]
      },
      "post": {
        "tags": [
          "OfferTargetGroup"
        ],
        "summary": "Редактирует список целевых аудиторий для акции.",
        "operationId": "OfferTargetGroup_EditOfferTargetGroups",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "description": "Идентификатор для акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "editOfferTargetGroupsModel",
            "in": "body",
            "description": "Модель для редактирования списка ЦА для акции.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditOfferTargetGroupsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfTargetGroupBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit"
        ]
      }
    },
    "/api/OperationPay": {
      "get": {
        "tags": [
          "OperationPay"
        ],
        "summary": "Информация какими способами оплачена покупка.",
        "operationId": "OperationPay_GetByPurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "purchaseId",
            "in": "query",
            "description": "Id покупки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOperationPayViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PayTypesRead"
        ]
      }
    },
    "/api/partners": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "Возвращает список партнеров.",
        "operationId": "Partner_GetPartnersByName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Подстрока для поиска по имени.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.permission",
            "in": "query",
            "description": "Выбираются партнеры, на которые текущий пользователь имеет указанное право.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.orderByDesc",
            "in": "query",
            "description": "Сортировать в обратном порядке.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.sortingIds",
            "in": "query",
            "description": "Список идентификаторов для первоочередного выбора.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.loyaltyPrograms",
            "in": "query",
            "description": "Список ПЛ для фильтра по ПЛ.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPartnerModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      },
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Добавление партнера.",
        "operationId": "Partner_AddPartner",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerModel",
            "in": "body",
            "description": "ViewModel партнера.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/{id}": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "Получение партнера по идентификатору.",
        "operationId": "Partner_GetPartnerByID",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPartnerModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      },
      "post": {
        "tags": [
          "Partner"
        ],
        "summary": "Редактирование партнера.",
        "operationId": "Partner_UpdatePartner",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerModel",
            "in": "body",
            "description": "Модель для редактирования партнера.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/{id}/Cards/{number}": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "Получить информацию о партнерской карте.",
        "operationId": "Partner_GetExternalCardInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Номер партнерской карты.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfExternalCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ExternalCardReplace"
        ]
      }
    },
    "/api/partners/{id}/Cards/{number}/Replace": {
      "post": {
        "tags": [
          "Partner"
        ],
        "summary": "Заменить карту партнера на карту системы.",
        "operationId": "Partner_ReplaceExternalCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Номер партнерской карты.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loymaxCardId",
            "in": "query",
            "description": "Идентификатор карты системы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "ExternalCardReplace"
        ]
      }
    },
    "/api/partners/{partnerId}/userAttributeValue/{userId}": {
      "get": {
        "tags": [
          "PartnerAttributeValue"
        ],
        "summary": "Получить значение партнерского атрибута для пользователя.",
        "operationId": "PartnerAttributeValue_GetAttributeValue",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "logicalName",
            "in": "query",
            "description": "LogicalName атрибута.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfUserAttributeValueViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UserAttributeView"
        ]
      },
      "post": {
        "tags": [
          "PartnerAttributeValue"
        ],
        "summary": "Задать значение партнерского атрибута.",
        "operationId": "PartnerAttributeValue_SetAttributeValue",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель для задания значения партнерского атрибута.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPartnerUserAttributeValueModel"
            }
          },
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UserAttributeView",
          "UserAttributeManage"
        ]
      }
    },
    "/api/partners/{partnerId}/catalogs": {
      "get": {
        "tags": [
          "PartnerCatalog"
        ],
        "summary": "Возвращает список каталогов партнера.",
        "operationId": "PartnerCatalog_GetPartnerCatalogs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Строка для поиска по названию.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPartnerCatalogViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      },
      "put": {
        "tags": [
          "PartnerCatalog"
        ],
        "summary": "Создает новый каталог партнера.",
        "operationId": "PartnerCatalog_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель представления каталога.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerCatalogViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogManage"
        ]
      }
    },
    "/api/partners/{partnerId}/catalogs/{catalogId}": {
      "get": {
        "tags": [
          "PartnerCatalog"
        ],
        "summary": "Возвращает каталог партнера.",
        "operationId": "PartnerCatalog_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "catalogId",
            "in": "path",
            "description": "Id каталога.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPartnerCatalogViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogRead"
        ]
      },
      "post": {
        "tags": [
          "PartnerCatalog"
        ],
        "summary": "Сохраняет каталог партнера.",
        "operationId": "PartnerCatalog_Save",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "catalogId",
            "in": "path",
            "description": "Id каталога.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель представления каталога.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerCatalogViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerCatalogManage"
        ]
      }
    },
    "/api/partners/{partnerId}/devices": {
      "get": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Получение списка касс партнера.",
        "operationId": "PartnerDevice_GetPartnerDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantIds",
            "in": "query",
            "description": "Список идентификаторов магазинов.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "legalId",
            "in": "query",
            "description": "Идентификатор юр. лица.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "logicalId",
            "in": "query",
            "description": "Логическое имя.",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим вывода по признаку удаления.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "isOrderedByAscending",
            "in": "query",
            "description": "Режим прямой сортировки.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "debetOnly",
            "in": "query",
            "description": "Выбор только дебетовых касс.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfDeviceViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      },
      "put": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Создать кассу.",
        "operationId": "PartnerDevice_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel кассы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/{partnerId}/deviceInfo": {
      "get": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Получение короткой информации о кассах партнера.",
        "operationId": "PartnerDevice_GetPartnerDeviceInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantIds",
            "in": "query",
            "description": "Список идентификаторов магазинов.",
            "required": false,
            "type": "string",
            "x-loymax-array": true
          },
          {
            "name": "legalId",
            "in": "query",
            "description": "Идентификатор юр. лица.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "logicalId",
            "in": "query",
            "description": "Логическое имя.",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Режим вывода по признаку удаления.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "isOrderedByAscending",
            "in": "query",
            "description": "Режим прямой сортировки.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "debetOnly",
            "in": "query",
            "description": "Выбор только дебетовых касс.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfDeviceBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OfferEdit",
          "OfferView"
        ]
      }
    },
    "/api/partners/{partnerId}/oauth/deviceInfo": {
      "post": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Получение короткой информации о кассах партнера.",
        "operationId": "PartnerDevice_GetPartnerDeviceInfoForOAuthApplication",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "body",
            "description": "Фильтр запроса.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesForApplicationFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfDeviceBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OAuthApplicationManage"
        ]
      }
    },
    "/api/partners/{partnerId}/devices/{deviceId}": {
      "get": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Получение кассы.",
        "operationId": "PartnerDevice_GetDevice",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Идентификатор кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDeviceViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      },
      "post": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Редактировать кассу.",
        "operationId": "PartnerDevice_Edit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Идентификатор кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel кассы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      },
      "delete": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Отправить кассу в архив.",
        "operationId": "PartnerDevice_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Идентификатор кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/{partnerId}/devices/{deviceId}/restore": {
      "post": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Восстановить кассу.",
        "operationId": "PartnerDevice_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Идентификатор кассы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/{partnerId}/devices/possibleTypes": {
      "get": {
        "tags": [
          "PartnerDevice"
        ],
        "summary": "Получить список возможных типов кассы.",
        "operationId": "PartnerDevice_GetPossibleTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nameSubstr",
            "in": "query",
            "description": "Подстрока названия.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfDeviceTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      }
    },
    "/api/partners/{partnerId}/legals": {
      "get": {
        "tags": [
          "PartnerLegal"
        ],
        "operationId": "PartnerLegal_GetLegals",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "nameSubstring",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "sortingIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfLegalViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsView"
        ]
      },
      "put": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Добавление юридического лица партнеру.",
        "operationId": "PartnerLegal_CreateLegal",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalModel",
            "in": "body",
            "description": "Модель юридического лица.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsManage"
        ]
      }
    },
    "/api/partners/{partnerId}/legals/{legalId}": {
      "get": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Получение юридического лица партнера по идентификатору.",
        "operationId": "PartnerLegal_GetLegal",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификационный номер партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Идентификационный номер юридического лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfLegalViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsView"
        ]
      },
      "post": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Изменение юридического лица у партнера.",
        "operationId": "PartnerLegal_UpdateLegal",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Идентификатор юридического лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalModel",
            "in": "body",
            "description": "Модель юридического лица.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsManage"
        ]
      },
      "delete": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Удаление юридического лица у партнера.",
        "operationId": "PartnerLegal_DeleteLegal",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Идентификатор юридического лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsManage"
        ]
      }
    },
    "/api/partners/{partnerId}/legals/{legalId}/restore": {
      "post": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Восстановление юридического лица у партнера.",
        "operationId": "PartnerLegal_RestoreLegal",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Идентификатор юридического лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsManage"
        ]
      }
    },
    "/api/partners/{partnerId}/legals/{legalId}/availableDevices": {
      "get": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Получение доступных дебетовых касс для привязки к юр. лицу.",
        "operationId": "PartnerLegal_GetAvailiableDebitDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Id юр. лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfDeviceBriefViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsManage"
        ]
      }
    },
    "/api/partners/{partnerId}/legals/{legalId}/accounts": {
      "get": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Получение дебетовых счетов, принадлежащих юридическому лицу.",
        "operationId": "PartnerLegal_GetAccounts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Идентификатор юридического лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Идентификатор прораммы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Подстрока для поиска по названию валюты.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "from",
            "in": "query",
            "description": "C.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfAccountViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsView"
        ]
      },
      "put": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Cоздание счета, принадлежащего юридическому лицу.",
        "operationId": "PartnerLegal_CreateAccounts",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Идентификатор юридического лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Идентификатор прораммы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountData",
            "in": "body",
            "description": "Информация о создаваемом счете.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsManage"
        ]
      },
      "post": {
        "tags": [
          "PartnerLegal"
        ],
        "summary": "Редактирование счета, принадлежащего юридическому лицу.",
        "operationId": "PartnerLegal_EditAccounts",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "legalId",
            "in": "path",
            "description": "Идентификатор юридического лица.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Идентификатор прораммы лояльности.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountData",
            "in": "body",
            "description": "Информация о редактируемом счете.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "LegalsManage"
        ]
      }
    },
    "/api/partners/{partnerId}/merchants": {
      "get": {
        "tags": [
          "PartnerMerchant"
        ],
        "operationId": "PartnerMerchant_GetMerchants",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "nameSubstring",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "internalNameSubstring",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "brandId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationSubstring",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "isOrderedByAscending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "sortingIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMerchantViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      },
      "put": {
        "tags": [
          "PartnerMerchant"
        ],
        "summary": "Добавление магазина партнеру.",
        "operationId": "PartnerMerchant_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel магазина.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MerchantViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/merchants/availableMerchants": {
      "get": {
        "tags": [
          "PartnerMerchant"
        ],
        "summary": "Возвращает список всех доступных магазинов.",
        "operationId": "PartnerMerchant_GetAvailableMerchants",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Тип разрешения.",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Объем выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfMerchantViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/partners/{partnerId}/merchants/{merchantId}": {
      "get": {
        "tags": [
          "PartnerMerchant"
        ],
        "summary": "Получение магазина партнера по идентификатору.",
        "operationId": "PartnerMerchant_GetMerchant",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификационный номер партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantId",
            "in": "path",
            "description": "Идентификационный номер магазина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMerchantViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      },
      "post": {
        "tags": [
          "PartnerMerchant"
        ],
        "summary": "Редактирование магазина партнера.",
        "operationId": "PartnerMerchant_Edit",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantId",
            "in": "path",
            "description": "Идентификатор магазина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "ViewModel магазина.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MerchantViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      },
      "delete": {
        "tags": [
          "PartnerMerchant"
        ],
        "summary": "Пометить магазин удаленным.",
        "operationId": "PartnerMerchant_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantId",
            "in": "path",
            "description": "Идентификатор магазина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/{partnerId}/merchants/{merchantId}/restore": {
      "post": {
        "tags": [
          "PartnerMerchant"
        ],
        "summary": "Восстановить магазин.",
        "operationId": "PartnerMerchant_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merchantId",
            "in": "path",
            "description": "Идентификатор магазина.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partnerNotifyGateways": {
      "get": {
        "tags": [
          "PartnerNotifyGateway"
        ],
        "summary": "Получение списка шлюзов партнера.",
        "operationId": "PartnerNotifyGateway_GetPartnerGateways",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "query",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "С какого элемента.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество возвращаемых элементов.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPartnerNotifyGatewayViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      },
      "put": {
        "tags": [
          "PartnerNotifyGateway"
        ],
        "summary": "Добавляет шлюз партнеру.",
        "operationId": "PartnerNotifyGateway_AddPartnerGateway",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerNotifyGatewayViewModel",
            "in": "body",
            "description": "Модель шлюза партнера.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerNotifyGatewayViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      },
      "post": {
        "tags": [
          "PartnerNotifyGateway"
        ],
        "summary": "Обновляет шлюз партнера.",
        "operationId": "PartnerNotifyGateway_UpdatePartnerGateway",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerNotifyGatewayViewModel",
            "in": "body",
            "description": "View model шлюза партнера.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerNotifyGatewayViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partnerNotifyGateways/{gatewayId}": {
      "get": {
        "tags": [
          "PartnerNotifyGateway"
        ],
        "summary": "Получение шлюз по ИД.",
        "operationId": "PartnerNotifyGateway_GetPartnerGateway",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Идентификатор шлюза партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPartnerNotifyGatewayViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      }
    },
    "/api/partnerNotifyGateways/partner/{partnerId}": {
      "get": {
        "tags": [
          "PartnerNotifyGateway"
        ],
        "summary": "Получить список доступных для добавления партнеру шлюзов.",
        "operationId": "PartnerNotifyGateway_GetPartnerAvailableGateway",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The from.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "The count.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/NotificationGatewayViewModel"
              },
              "xml": {
                "name": "NotificationGatewayViewModel",
                "wrapped": true
              },
              "type": "array",
              "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.NotificationGateway.NotificationGatewayViewModel, Loymax.SystemApi"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerView",
          "PartnerRead"
        ]
      }
    },
    "/api/partnerNotifyGateways/{id}": {
      "delete": {
        "tags": [
          "PartnerNotifyGateway"
        ],
        "summary": "Удалить шлюз партнера.",
        "operationId": "PartnerNotifyGateway_DeletePartnerGateway",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id шлюза партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerManage"
        ]
      }
    },
    "/api/partners/{partnerId}/userAttributes": {
      "get": {
        "tags": [
          "PartnerUserAttribute"
        ],
        "summary": "Получение набора атрибутов пользователей.",
        "operationId": "PartnerUserAttribute_GetUserAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Идентификатор партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPartnerUserAttributeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/Password/Requirements/Settings": {
      "get": {
        "tags": [
          "PasswordRequirements"
        ],
        "summary": "Получить список правил проверок пароля.",
        "operationId": "PasswordRequirements_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPasswordRuleViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PasswordRequirementsView"
        ]
      },
      "post": {
        "tags": [
          "PasswordRequirements"
        ],
        "summary": "Обновить список правил проверок пароля.",
        "operationId": "PasswordRequirements_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "viewModels",
            "in": "body",
            "description": "Список правил проверок пароля.",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/PasswordRuleViewModel"
              },
              "xml": {
                "name": "PasswordRuleViewModel",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PasswordRequirementsManage"
        ]
      }
    },
    "/api/Password/Requirements": {
      "get": {
        "tags": [
          "PasswordRequirements"
        ],
        "summary": "Получить список активных правил проверок пароля.",
        "operationId": "PasswordRequirements_GetAllActiveRules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPasswordRequirementViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/paymentSystem": {
      "get": {
        "tags": [
          "PaymentSystem"
        ],
        "summary": "Получить список платежных систем.",
        "operationId": "PaymentSystem_GetPaymentSystems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPaymentSystemViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PaymentSystemView"
        ]
      }
    },
    "/api/payType": {
      "get": {
        "tags": [
          "PayType"
        ],
        "summary": "Получить список всех способов оплаты.",
        "operationId": "PayType_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payTypeFilter.name",
            "in": "query",
            "description": "Название типа оплаты.",
            "required": false,
            "type": "string"
          },
          {
            "name": "payTypeFilter.count",
            "in": "query",
            "description": "Количество элементов в выборке.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payTypeFilter.from",
            "in": "query",
            "description": "С какого элемента начать выборку.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPayTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PayTypesView",
          "PayTypesRead"
        ]
      },
      "put": {
        "tags": [
          "PayType"
        ],
        "summary": "Создает способ оплаты.",
        "operationId": "PayType_CreatePayType",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "payTypeViewModel",
            "in": "body",
            "description": "Модель способа оплаты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayTypeViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PayTypesManage"
        ]
      }
    },
    "/api/payType/{id}": {
      "get": {
        "tags": [
          "PayType"
        ],
        "summary": "Получение информации по типу оплаты.",
        "operationId": "PayType_GetPayType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор типа оплаты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPayTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PayTypesView"
        ]
      },
      "post": {
        "tags": [
          "PayType"
        ],
        "summary": "Редактирование типа оплаты.",
        "operationId": "PayType_UpdatePayType",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор способа оплаты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "payTypeViewModel",
            "in": "body",
            "description": "Модель для редактирования способа оплаты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayTypeViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PayTypesManage"
        ]
      },
      "delete": {
        "tags": [
          "PayType"
        ],
        "summary": "Убрать в архив способ оплаты.",
        "operationId": "PayType_DeletePayType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id способа оплаты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PayTypesManage"
        ]
      }
    },
    "/api/payType/{id}/recover": {
      "post": {
        "tags": [
          "PayType"
        ],
        "summary": "Восстановление способа оплаты.",
        "operationId": "PayType_RecoverPayType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id способа оплаты.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PayTypesManage"
        ]
      }
    },
    "/api/user/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Получить разрешения текущего пользователя.",
        "operationId": "Permissions_GetPermissionsForCurrentPerson",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfString"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/user/permission": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Определяет, имеет ли текущий пользователь указанное разрешение для заданного партнера.",
        "operationId": "Permissions_HasPermission",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Разрешение.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "ID партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBoolean"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Получить все разрешения.",
        "operationId": "Permissions_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPermissionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsView"
        ]
      }
    },
    "/api/PhoneSettings": {
      "get": {
        "tags": [
          "PhoneSettings"
        ],
        "summary": "Получить настройки отображения телефона.",
        "operationId": "PhoneSettings_GetSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPhoneSettingsViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/partners/{partnerId}/plans/{year}": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Получить список планов партнера за конкретный год.",
        "operationId": "Plan_GetPlans",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "path",
            "description": "Год.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPlanViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerPlanView"
        ]
      }
    },
    "/api/partners/{partnerId}/plans/{year}/{month}": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Получить план.",
        "operationId": "Plan_GetPlan",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "path",
            "description": "Номер месяца.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "path",
            "description": "Год.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPlanViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerPlanView"
        ]
      },
      "put": {
        "tags": [
          "Plan"
        ],
        "summary": "Создать план.",
        "operationId": "Plan_CreatePlan",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель для создания плана.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanViewModel"
            }
          },
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerPlanManage"
        ]
      },
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "Обновить план.",
        "operationId": "Plan_UpdatePlan",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель для изменения плана.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanViewModel"
            }
          },
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerPlanManage"
        ]
      },
      "delete": {
        "tags": [
          "Plan"
        ],
        "summary": "Удалить план.",
        "operationId": "Plan_DeletePlan",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id партнера.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "path",
            "description": "Номер месяца.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "path",
            "description": "Год.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PartnerPlanManage"
        ]
      }
    },
    "/api/purchases": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Получить указанное количество покупок с указанной позиции.",
        "operationId": "Purchase_Get",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "Фильтр.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasesFilterViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPurchaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PurchaseView",
          "PurchasePersonRead"
        ]
      }
    },
    "/api/purchases/{purchaseId}": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Получить покупку по идентификатору.",
        "operationId": "Purchase_GetPurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Идентификатор покупки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPurchaseViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PurchaseView",
          "PurchasePersonRead"
        ]
      }
    },
    "/api/purchases/{purchaseId}/confirm": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Редактирование состояния покупки.",
        "operationId": "Purchase_ConfirmPurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Идентификатор покупки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OperationConfirmCancel"
        ]
      }
    },
    "/api/purchases/{purchaseId}/cancel": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Редактирование состояния покупки.",
        "operationId": "Purchase_CancelPurchase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Идентификатор покупки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "OperationConfirmCancel"
        ]
      }
    },
    "/api/purchases/{purchaseId}/operations": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Получить список операций по покупке.",
        "operationId": "Purchase_GetOperations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Идентификатор покупки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOperationsViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PurchaseView",
          "PurchasePersonRead"
        ]
      }
    },
    "/api/purchases/{purchaseId}/chequePositions": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Получить чековые позиции по покупке.",
        "operationId": "Purchase_GetChequePositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "showCanceledOperations",
            "in": "query",
            "description": "Отображать отменененные операции.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfChequePositionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PurchaseView",
          "PurchasePersonRead"
        ]
      }
    },
    "/api/users/{personId}/PushableDevices": {
      "get": {
        "tags": [
          "PushableDevice"
        ],
        "summary": "Список всех push-устройств клиента.",
        "operationId": "PushableDevice_GetPushDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "searchOption",
            "in": "query",
            "description": "Параметр поиска пуш-устройств.",
            "required": false,
            "type": "string",
            "default": "Active",
            "enum": [
              "FromHistory",
              "Active",
              "Inactive"
            ],
            "x-loymax-type": "Loymax.Domain.Contract.Model.Notifiers.PushableDeviceSearchOption, Loymax.Domain.Contract",
            "x-loymax-enum-type": "PushableDeviceSearchOption"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPushableDeviceViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PushableDevicesView"
        ]
      }
    },
    "/api/Questions/{id}": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Получить вопрос.",
        "operationId": "Question_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор вопроса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfQuestionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireView",
          "QuestionnaireRead"
        ]
      },
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "Обновить вопрос.",
        "operationId": "Question_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель вопроса.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      },
      "delete": {
        "tags": [
          "Question"
        ],
        "summary": "Архивировать вопрос.",
        "operationId": "Question_Archived",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/Questions": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Получить все вопросы и группы вопросов.",
        "operationId": "Question_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.logicalName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.visibleType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Visible",
              "Invisible"
            ],
            "x-loymax-type": "Loymax.Common.VisibilityType, Loymax.Common",
            "x-loymax-enum-type": "VisibilityType"
          },
          {
            "name": "filter.requiredType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Required",
              "NoRequired"
            ],
            "x-loymax-type": "Loymax.Entities.QuestionRequiredType, Loymax.Entities",
            "x-loymax-enum-type": "QuestionRequiredType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfQuestionnaireItemViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireView",
          "QuestionnaireRead"
        ]
      },
      "put": {
        "tags": [
          "Question"
        ],
        "summary": "Создать вопрос.",
        "operationId": "Question_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель вопроса.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/Questions/{id}/Restore": {
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "Восстановить вопрос.",
        "operationId": "Question_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/Questions/{id}/ChangePosition": {
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "Изменить порядок вопроса.",
        "operationId": "Question_ChangePosition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор изменяемого вопроса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Порядок.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionGroupId",
            "in": "query",
            "description": "Идентификатор группы вопроса.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/QuestionGroups/{id}": {
      "get": {
        "tags": [
          "QuestionGroup"
        ],
        "summary": "Получить группу вопросов.",
        "operationId": "QuestionGroup_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор группы вопросов.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfQuestionGroupViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireView",
          "QuestionnaireRead"
        ]
      },
      "post": {
        "tags": [
          "QuestionGroup"
        ],
        "summary": "Обновить группу вопросов.",
        "operationId": "QuestionGroup_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель группы вопросов.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionGroupViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      },
      "delete": {
        "tags": [
          "QuestionGroup"
        ],
        "summary": "Архивировать группу вопросов.",
        "operationId": "QuestionGroup_Archive",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/QuestionGroups": {
      "put": {
        "tags": [
          "QuestionGroup"
        ],
        "summary": "Создать группу вопросов.",
        "operationId": "QuestionGroup_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель группы вопросов.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionGroupViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/QuestionGroups/{id}/Restore": {
      "post": {
        "tags": [
          "QuestionGroup"
        ],
        "summary": "Восстановить группу вопросов.",
        "operationId": "QuestionGroup_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/QuestionGroups/{id}/ChangePosition": {
      "post": {
        "tags": [
          "QuestionGroup"
        ],
        "summary": "Изменить порядок группы вопросов.",
        "operationId": "QuestionGroup_ChangePosition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Порядок.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireManage"
        ]
      }
    },
    "/api/regexp": {
      "get": {
        "tags": [
          "Regexp"
        ],
        "summary": "Получить коллекцию всех конфигураций регулярных выражений.",
        "operationId": "Regexp_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfRegexpConfigurationViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "RegexConfigurationView"
        ]
      },
      "post": {
        "tags": [
          "Regexp"
        ],
        "summary": "Изменить значения конфигураций на новые.",
        "operationId": "Regexp_EditConfiguration",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "regexpConfigs",
            "in": "body",
            "description": "Новые значения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegexpConfigurationListViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "RegexConfigurationManage"
        ]
      }
    },
    "/api/Registration/BeginRegistration": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Регистрация по номеру карты.",
        "operationId": "Registration_PostBeginRegistration",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Данные для регистрации.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemRegistrationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSystemRegistrationResult"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Registration/TryFinishRegistration": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Попробовать закончить активацию.",
        "operationId": "Registration_TryFinishRegistration",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "finishRegistrationModel",
            "in": "body",
            "description": "Идентификатор клиента.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinishRegistrationViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFinishRegistrationResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/RequestPersonIdentifiers": {
      "get": {
        "tags": [
          "RequestPersonIdentifier"
        ],
        "summary": "Получает список всех идентификаций пользователей в запросах от кассы.",
        "operationId": "RequestPersonIdentifier_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какой позиции.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          },
          {
            "name": "loyaltyProgramId",
            "in": "query",
            "description": "Идентификатор программы лояльности.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "modeView",
            "in": "query",
            "description": "Перечисление режимов отображения.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfRequestPersonIdentifierViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceIdentifierView"
        ]
      },
      "put": {
        "tags": [
          "RequestPersonIdentifier"
        ],
        "summary": "Создание идентификации пользователя в запросах от кассы.",
        "operationId": "RequestPersonIdentifier_Create",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "requestPersonIdentifierViewModel",
            "in": "body",
            "description": "Данные идентификатора пользователя в запросах от кассы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestPersonIdentifierViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceIdentifierManage"
        ]
      }
    },
    "/api/RequestPersonIdentifiers/{id}": {
      "get": {
        "tags": [
          "RequestPersonIdentifier"
        ],
        "summary": "Возвращает идентификацию пользователя в запросах от кассы по id.",
        "operationId": "RequestPersonIdentifier_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id запроса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfRequestPersonIdentifierViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceIdentifierView"
        ]
      },
      "post": {
        "tags": [
          "RequestPersonIdentifier"
        ],
        "summary": "Изменение идентификации пользователя в запросах от кассы.",
        "operationId": "RequestPersonIdentifier_Update",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификации пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "requestPersonIdentifierViewModel",
            "in": "body",
            "description": "Модель идентификации пользователя в запросах от кассы.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestPersonIdentifierViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceIdentifierManage"
        ]
      },
      "delete": {
        "tags": [
          "RequestPersonIdentifier"
        ],
        "summary": "Удаление идентификации пользователя в запросах от кассы.",
        "operationId": "RequestPersonIdentifier_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id запроса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceIdentifierManage"
        ]
      }
    },
    "/api/RequestPersonIdentifiers/{id}/restore": {
      "post": {
        "tags": [
          "RequestPersonIdentifier"
        ],
        "summary": "Восстановление идентификации пользователя в запросах от кассы.",
        "operationId": "RequestPersonIdentifier_Restore",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id запроса.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "DeviceIdentifierManage"
        ]
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Возвращает список всех ролей.",
        "operationId": "Roles_GetRoles",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "С какого.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Сколько.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfRoleModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsView"
        ]
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Создает новую роль.",
        "operationId": "Roles_CreateRole",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "roleModel",
            "in": "body",
            "description": "Модель создаваемой роли.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Возвращает роль по id.",
        "operationId": "Roles_GetRole",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id роли.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfRoleModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsView"
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Редактирует роль по id.",
        "operationId": "Roles_UpdateRole",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id редактируемой роли.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleModel",
            "in": "body",
            "description": "Модель роли.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/SubscriptionTypes/{id}": {
      "get": {
        "tags": [
          "SubscriptionType"
        ],
        "summary": "Возвращает тип подписки.",
        "operationId": "SubscriptionType_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Индификатор типа подписки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSystemApiSubscriptionTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionTypesView"
        ]
      },
      "post": {
        "tags": [
          "SubscriptionType"
        ],
        "summary": "Обновить тип подписки.",
        "operationId": "SubscriptionType_UpdateSubscriptionType",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Индификатор типа подписки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Обновляемая модель типа подписки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemApiSubscriptionTypeViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionTypesManage"
        ]
      }
    },
    "/api/SubscriptionTypes": {
      "get": {
        "tags": [
          "SubscriptionType"
        ],
        "summary": "Возвращает список всех типов подписок.",
        "operationId": "SubscriptionType_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "filter.searchedText",
            "in": "query",
            "description": "Текст поиска.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.subscriptionType",
            "in": "query",
            "description": "Тип подписки.",
            "required": false,
            "type": "string",
            "enum": [
              "Cashback",
              "Payment",
              "Refill",
              "Offer",
              "System",
              "Mailing",
              "Refund",
              "DeviceEmulation"
            ],
            "x-loymax-type": "Loymax.Entities.MailingSubscriptionType, Loymax.Entities",
            "x-loymax-enum-type": "MailingSubscriptionType"
          },
          {
            "name": "filter.notificationGatewayType",
            "in": "query",
            "description": "Тип канала.",
            "required": false,
            "type": "string",
            "enum": [
              "Sms",
              "Email",
              "Push",
              "Viber",
              "SocialsNetworks",
              "ChatBot"
            ],
            "x-loymax-type": "Loymax.Common.NotificationGatewayType, Loymax.Common",
            "x-loymax-enum-type": "NotificationGatewayType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfSystemApiSubscriptionTypeViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionTypesView"
        ]
      },
      "put": {
        "tags": [
          "SubscriptionType"
        ],
        "summary": "Создает тип подписки.",
        "operationId": "SubscriptionType_CreateSubscriptionType",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель типа подписки.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemApiSubscriptionTypeViewModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionTypesManage"
        ]
      }
    },
    "/api/SubscriptionTypes/availableSubscriptionTypes": {
      "get": {
        "tags": [
          "SubscriptionType"
        ],
        "summary": "Возвращает список доступных типов подписки.",
        "operationId": "SubscriptionType_GetAvailableSubscriptionTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfMailingSubscriptionType"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionTypesView"
        ]
      }
    },
    "/api/targetGroups": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Получить все целевые аудитории.",
        "operationId": "TargetGroup_GetTargetGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Объем выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "properties",
            "in": "query",
            "description": "Требуемые свойства view-модели. Если не указано ни одного, то будут заданы все.",
            "required": false,
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id фильтра.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerId",
            "in": "query",
            "description": "Id акции.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chainId",
            "in": "query",
            "description": "Id цепочки.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerVersionId",
            "in": "query",
            "description": "Id версии акции, ЦА которой необходимо получить.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.partnerIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.loyaltyPrograms",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.creatorIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.archivedShowMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.calculatedShowMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotCalculatedOnly",
              "CalculatedOnly"
            ],
            "x-loymax-type": "Loymax.Entities.TargetGroupCalculatedShowMode, Loymax.Entities",
            "x-loymax-enum-type": "TargetGroupCalculatedShowMode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfTargetGroupViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      },
      "put": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Создание целевой аудитории.",
        "operationId": "TargetGroup_CreateTargetGroup",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель целевой аудитории.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{id}": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Получить целевую аудиторию по Id.",
        "operationId": "TargetGroup_GetTargetGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfTargetGroupViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      },
      "post": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Редактирование целевой аудитории.",
        "operationId": "TargetGroup_UpdateTargetGroup",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель целевой аудитории.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      },
      "delete": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Архивировать целевую аудиторию.",
        "operationId": "TargetGroup_ArchiveTargetGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{id}/calculate": {
      "post": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Запуск расчета целевой аудитории.",
        "operationId": "TargetGroup_CalculateTargetGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupCalculate"
        ]
      }
    },
    "/api/targetGroups/{id}/unfix": {
      "post": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Снять фиксацию целевой аудитории.",
        "operationId": "TargetGroup_UnfixTargetGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupCalculate"
        ]
      }
    },
    "/api/targetGroups/{id}/calculationInfo": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Получение информации о последнем расчете целевой аудитории.",
        "operationId": "TargetGroup_GetTargetGroupCalculationInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCalculationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/targetGroups/{id}/restore": {
      "post": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Восстановить из архива целевую аудиторию.",
        "operationId": "TargetGroup_RestoreTargetGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/AvailableCreators": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Получает список доступных создателей целевых аудиторий.",
        "operationId": "TargetGroup_GetAvailableCreators",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfCreatorModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments": {
      "get": {
        "tags": [
          "TargetGroupSegment"
        ],
        "summary": "Получить сегменты целевой аудитории.",
        "operationId": "TargetGroupSegment_GetTargetGroupSegments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Объем выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfTargetGroupSegmentViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      },
      "put": {
        "tags": [
          "TargetGroupSegment"
        ],
        "summary": "Создание сегмента целевой аудитории.",
        "operationId": "TargetGroupSegment_CreateTargetGroupSegment",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель сегмента целевой аудитории.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupSegmentModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{id}": {
      "get": {
        "tags": [
          "TargetGroupSegment"
        ],
        "summary": "Получить сегмент целевой аудитории.",
        "operationId": "TargetGroupSegment_GetTargetGroupSegment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfTargetGroupSegmentViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}": {
      "post": {
        "tags": [
          "TargetGroupSegment"
        ],
        "summary": "Редактировать сегмент целевой аудитории.",
        "operationId": "TargetGroupSegment_UpdateTargetGroupSegment",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель сегмента.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupSegmentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      },
      "delete": {
        "tags": [
          "TargetGroupSegment"
        ],
        "summary": "Удалить сегмент целевой аудитории.",
        "operationId": "TargetGroupSegment_DeleteTargetGroupSegment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/calculate": {
      "post": {
        "tags": [
          "TargetGroupSegment"
        ],
        "summary": "Запуск расчета сегмента целевой аудитории.",
        "operationId": "TargetGroupSegment_CalculateTargetGroupSegment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupCalculate"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/calculationInfo": {
      "get": {
        "tags": [
          "TargetGroupSegment"
        ],
        "summary": "Получение информации о последнем расчете сегмента целевой аудитории.",
        "operationId": "TargetGroupSegment_GetTargetGroupSegmentCalculationInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCalculationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/filters": {
      "get": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Получить фильтры набора фильтров сегмента ЦА.",
        "operationId": "TargetGroupSegmentFilter_GetTargetGroupSegmentFilters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "The filter Set Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfTargetGroupSegmentFilterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      },
      "put": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Создание фильтра целевой аудитории.",
        "operationId": "TargetGroupSegmentFilter_CreateTargetGroupSegmentFilter",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель фильтра целевой аудитории.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupSegmentFilterModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/filters/{filterId}": {
      "get": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Получить фильтр набора фильтров сегмента ЦА.",
        "operationId": "TargetGroupSegmentFilter_GetTargetGroupSegmentFilter",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfTargetGroupSegmentFilterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      },
      "post": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Редактирование информации о фильтре целевой аудитории.",
        "operationId": "TargetGroupSegmentFilter_UpdateTargetGroupSegmentFilter",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель фильтра целевой аудитории.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupSegmentFilterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      },
      "delete": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Удаление фильтра целевой аудитории.",
        "operationId": "TargetGroupSegmentFilter_DeleteTargetGroupSegmentFilter",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/filters/{filterId}/filterInfo": {
      "get": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Получить информацию о фильтре набора фильтров сегмента ЦА.",
        "operationId": "TargetGroupSegmentFilter_GetTargetGroupSegmentFilterInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfFilterViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/filters/{filterId}/name": {
      "post": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Редактирование названия фильтра целевой аудитории.",
        "operationId": "TargetGroupSegmentFilter_UpdateTargetGroupSegmentFilterName",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель названия фильтра.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupSegmentFilterNameModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/filters/{filterId}/type": {
      "post": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Редактирование типа фильтра целевой аудитории.",
        "operationId": "TargetGroupSegmentFilter_UpdateTargetGroupSegmentFilterType",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель типа фильтра.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupSegmentFilterTypeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/filters/{filterId}/calculate": {
      "post": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Запуск расчета фильтра целевой аудитории.",
        "operationId": "TargetGroupSegmentFilter_CalculateTargetGroupSegmentFilter",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupCalculate"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/filters/{filterId}/calculationInfo": {
      "get": {
        "tags": [
          "TargetGroupSegmentFilter"
        ],
        "summary": "Получение информации о последнем расчете фильтра целевой аудитории.",
        "operationId": "TargetGroupSegmentFilter_GetTargetGroupSegmentFilterCalculationInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterId",
            "in": "path",
            "description": "Id фильтра.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCalculationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets": {
      "get": {
        "tags": [
          "TargetGroupSegmentFilterSet"
        ],
        "summary": "Получить наборы фильтров сегмента ЦА.",
        "operationId": "TargetGroupSegmentFilterSet_GetTargetGroupSegmentFilterSets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfTargetGroupSegmentFilterSetViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      },
      "put": {
        "tags": [
          "TargetGroupSegmentFilterSet"
        ],
        "summary": "Создание набора фильтров сегмента ЦА.",
        "operationId": "TargetGroupSegmentFilterSet_CreateTargetGroupSegmentFilterSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{id}": {
      "get": {
        "tags": [
          "TargetGroupSegmentFilterSet"
        ],
        "summary": "Получить набор фильтров сегмента ЦА.",
        "operationId": "TargetGroupSegmentFilterSet_GetTargetGroupSegmentFilterSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfTargetGroupSegmentFilterSetViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}": {
      "delete": {
        "tags": [
          "TargetGroupSegmentFilterSet"
        ],
        "summary": "Удаление набора фильтров сегмента ЦА.",
        "operationId": "TargetGroupSegmentFilterSet_DeleteTargetGroupSegmentFilterSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupManage"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/calculate": {
      "post": {
        "tags": [
          "TargetGroupSegmentFilterSet"
        ],
        "summary": "Запуск расчета набора фильтров целевой аудитории.",
        "operationId": "TargetGroupSegmentFilterSet_CalculateTargetGroupSegmentFilterSet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupCalculate"
        ]
      }
    },
    "/api/targetGroups/{targetGroupId}/segments/{segmentId}/filterSets/{filterSetId}/calculationInfo": {
      "get": {
        "tags": [
          "TargetGroupSegmentFilterSet"
        ],
        "summary": "Получение информации о последнем расчете набора фильтров целевой аудитории.",
        "operationId": "TargetGroupSegmentFilterSet_GetTargetGroupSegmentFilterSetCalculationInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "Id целевой аудитории.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "Id сегмента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterSetId",
            "in": "path",
            "description": "Id набора фильтров.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfCalculationModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "TargetGroupView"
        ]
      }
    },
    "/api/triggeredMailings": {
      "get": {
        "tags": [
          "TriggeredMailing"
        ],
        "summary": "Получить список рассылок.",
        "operationId": "TriggeredMailing_GetMailings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfTriggeredMailingViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MailingView"
        ]
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Информация о клиенте по номеру телефона.",
        "operationId": "User_GetPersonInfoByPhone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "description": "Номер телефона.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPersonInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PersonInfoRead"
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Регистрация нового пользователя.",
        "operationId": "User_CreateUser",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createModel",
            "in": "body",
            "description": "Модель для регистрации в системе нового пользователя.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Список всех клиентов.",
        "operationId": "User_GetPersons",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "Фильтр.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonFilter"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPersonInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PersonInfoRead"
        ]
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Информация о клиенте по идентификатору.",
        "operationId": "User_GetPersonInfoById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPersonInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PersonInfoRead"
        ]
      }
    },
    "/api/Users/{personId}/Subscriptions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Подписки.",
        "operationId": "User_GetSubscriptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfSubscriptionViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionsRead"
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Обновить информацию о подписках пользователя.",
        "operationId": "User_UpdateSubscriptions",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "subscriptions",
            "in": "body",
            "description": "Подписки.",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/SubscriptionViewModel"
              },
              "xml": {
                "name": "SubscriptionViewModel",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SubscriptionsManage"
        ]
      }
    },
    "/api/Users/{personId}/DetailedBalance": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение информации о детализированном балансе пользователя.",
        "operationId": "User_GetDetailedBalance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Дата (если null - то текущая).",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfDetailedBalanceInfoViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BalanceRead"
        ]
      }
    },
    "/api/Users/{personId}/Balance": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение информации о балансе пользователя.",
        "operationId": "User_GetBalances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfAccountBalanceModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "BalanceRead"
        ]
      }
    },
    "/api/user/name": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Имя текущего пользователя.",
        "operationId": "User_GetCurrentUserName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfUserName"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Информация о текущем клиенте.",
        "operationId": "User_GetCurrentPersonInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPersonInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Users/GetPersonAttributesInfo": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить информацию об атрибутах клиента.",
        "operationId": "User_GetPersonAttributesInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfPersonAttributeModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/api/Users/{personId}/EmitVirtual": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить информацию о возможности выпуска виртуальной карты.",
        "operationId": "User_EmitVirtualCardInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfEmitVirtualCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Добавление виртуальной карты.",
        "operationId": "User_EmitVirtualCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/CheckPassword": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Проверка пароля клиента.",
        "operationId": "User_CheckUserPassword",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Пароль.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/RequiredActions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить все обязательные действия необходимые для регистрации.",
        "operationId": "User_GetRequiredUserActions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfUserActionsResult"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/AcceptTenderOffer": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Принятие оферты.",
        "operationId": "User_AcceptTenderOffer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/Phone": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить текущее состояние телефона пользователя.",
        "operationId": "User_GetPhone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfUserPhoneNumberInfo"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/SetPhone": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Прикрепить телефон.",
        "operationId": "User_SetPhone",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "setNewPhoneModel",
            "in": "body",
            "description": "Модель для прикрепления телефона.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetNewPhoneModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfConfirmCodeResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/PostConfirmPhoneCode": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Проверить код подтверждения телефона.",
        "operationId": "User_ConfirmPhoneCode",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "confirmCode",
            "in": "body",
            "description": "Модель кода подтверждения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostConfirmCodeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/SendConfirmPhoneCode": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Отправить повторно код подтверждения.",
        "operationId": "User_SendConfirmCode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/CancelConfirmPhone": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Отменить проверку телефона.",
        "operationId": "User_CancelConfirmPhone",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/SetEmail": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Прикрепить почту.",
        "operationId": "User_SetEmail",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "setNewEmailModel",
            "in": "body",
            "description": "Модель для прикрепления почты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetNewEmailModel"
            }
          },
          {
            "name": "attachType",
            "in": "query",
            "description": "Тип привязки Email.",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "Sms",
              "Operator",
              "MobileClient"
            ],
            "x-loymax-type": "Loymax.Entities.NotifierAttachType, Loymax.Entities",
            "x-loymax-enum-type": "NotifierAttachType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersRegister"
        ]
      }
    },
    "/api/Users/{personId}/SetRandomPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Установить пароль.",
        "operationId": "User_SetRandomPassword",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardPasswordSend"
        ]
      }
    },
    "/api/Users/{personId}/Questions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить информацию о вопросах анкеты.",
        "operationId": "User_GetQuestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.onlyRequired",
            "in": "query",
            "description": "Получает информацию о вопросах анкеты с отмеченным чекбоксом \"Видимый при регистрации\".",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfQuestionnaireItemModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireView",
          "QuestionnaireRead"
        ]
      }
    },
    "/api/Users/QuestionsForPreview": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить вопросы анкеты для предварительного просмотра.",
        "operationId": "User_GetQuestionsForPreview",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter.onlyRequired",
            "in": "query",
            "description": "Получает информацию о вопросах анкеты с отмеченным чекбоксом \"Видимый при регистрации\".",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfQuestionnaireItemModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "QuestionnaireView",
          "QuestionnaireRead"
        ]
      }
    },
    "/api/Users/{personId}/UpdateAnswers": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Ответить на вопросы анкеты.",
        "operationId": "User_UpdateAnswers",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "updateAnswers",
            "in": "body",
            "description": "Ответы.",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/QuestionAnswerModel"
              },
              "xml": {
                "name": "QuestionAnswerModel",
                "wrapped": true
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfQuestionsErrorsModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AnswerManage"
        ]
      }
    },
    "/api/Users/{personId}/Coupons": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение купонов по id пользователя.",
        "operationId": "User_GetPersonCoupons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.emissionIds",
            "in": "query",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.couponStates",
            "in": "query",
            "required": false,
            "items": {
              "type": "string",
              "enum": [
                "Created",
                "Issued",
                "Used",
                "Rejected",
                "QueuedToUse",
                "QueuedToIssue"
              ],
              "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponState, Loymax.Coupon.Contract",
              "x-loymax-enum-type": "CouponState"
            },
            "collectionFormat": "multi",
            "type": "array",
            "x-loymax-enum-type": "CouponState",
            "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CouponState>",
            "x-loymax-property-collection-type": "System.Collections.Generic.IEnumerable<CouponState>"
          },
          {
            "name": "filter.changedStateDateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.changedStateDateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.couponNumber",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCouponViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CouponView"
        ]
      }
    },
    "/api/Users/{personId}/GetPartnerPurchaseAmount/{partnerId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение суммы покупок у партнера.",
        "operationId": "User_GetPartnerPurchaseAmount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Ид пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "path",
            "description": "Ид партнера.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfMoneyViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PersonInfoRead"
        ]
      }
    },
    "/api/Users/{personId}/SetCard": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Прикрепление карты к пользователю.",
        "operationId": "User_SetCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Ид пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "setCardModel",
            "in": "body",
            "description": "Модель карты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PersonInfoRead"
        ]
      }
    },
    "/api/Users/{personId}/Attributes": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Возвращает список партнерских атрибутов пользователя.",
        "operationId": "User_GetAttributes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfAttributePartnerValueModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UserAttributeView"
        ]
      }
    },
    "/api/Users/{personId}/CommunicationOffers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить список акций пользователя.",
        "operationId": "User_GetCommunicationOffers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "ID пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.communicationOfferState",
            "in": "query",
            "description": "Статус акции.",
            "required": false,
            "type": "string",
            "enum": [
              "Active",
              "CommingSoon"
            ],
            "x-loymax-type": "Loymax.Common.Portable.OfferState, Loymax.Common.Portable",
            "x-loymax-enum-type": "OfferState"
          },
          {
            "name": "filter.fromDate",
            "in": "query",
            "description": "Дата С.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.toDate",
            "in": "query",
            "description": "Дата По.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.brandIds",
            "in": "query",
            "description": "Набор идентификаторов брендов.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.categoriesIds",
            "in": "query",
            "description": "Набор идентификаторов категорий рекламных материалов.",
            "required": false,
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "type": "array"
          },
          {
            "name": "filter.name",
            "in": "query",
            "description": "Подстрока для поиска по имени.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.isArchived",
            "in": "query",
            "description": "Признак удаления.",
            "required": false,
            "type": "string",
            "enum": [
              "Archived",
              "NonArchived"
            ],
            "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
            "x-loymax-enum-type": "ArchivedState"
          },
          {
            "name": "filter.priorityMin",
            "in": "query",
            "description": "Минимальный приоритет.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.priorityMax",
            "in": "query",
            "description": "Максимальный приоритет.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfCommunicationOfferModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      }
    },
    "/api/Users/{personId}/CommunicationOffers/{offerId}/Details": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получение деталей персонального предложения клиента.",
        "operationId": "User_GetPersonalOfferDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "Id акции.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начальный элемент.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2147483647
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfDetailItem"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CommunicationOfferView"
        ]
      }
    },
    "/api/Users/{personId}/Deregister": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Исключить пользователя из программы лояльности.",
        "operationId": "User_Deregister",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Модель с параметрами.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeregisterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "UsersDeregister"
        ]
      }
    },
    "/api/users/{personId}/cards": {
      "get": {
        "tags": [
          "UserCards"
        ],
        "summary": "Получить список не удаленных карт пользователя, владельцем которых он является.",
        "operationId": "UserCards_GetCardsInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cardShowMode",
            "in": "query",
            "description": "Режим отображения карт пользователя.",
            "required": false,
            "type": "string",
            "default": "Active",
            "enum": [
              "Active",
              "Deleted",
              "All"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Cards.CardShowMode, Loymax.SystemApi",
            "x-loymax-enum-type": "CardShowMode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfSystemApiCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/users/{personId}/cards/Attach": {
      "get": {
        "tags": [
          "UserCards"
        ],
        "summary": "Возвращает текущее состояние процесса присоединения карты.",
        "operationId": "UserCards_AttachCardState",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfAttachCardState"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AccountAttach",
          "AccountAttachWithoutConfirmCode"
        ]
      },
      "post": {
        "tags": [
          "UserCards"
        ],
        "summary": "Начинает действие по объединению карт.",
        "operationId": "UserCards_AttachCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachCardModel",
            "in": "body",
            "description": "ViewModel входных параметров привязки карты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfBeginAttachCardResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AccountAttach",
          "AccountAttachWithoutConfirmCode"
        ]
      }
    },
    "/api/users/{personId}/cards/Attach/Cancel": {
      "post": {
        "tags": [
          "UserCards"
        ],
        "summary": "Отменяет начатое действие по присоединению карты.",
        "operationId": "UserCards_AttachCardCancel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AccountAttach",
          "AccountAttachWithoutConfirmCode"
        ]
      }
    },
    "/api/users/{personId}/cards/Attach/Confirm": {
      "post": {
        "tags": [
          "UserCards"
        ],
        "summary": "Завершает начатое действие по присоединению карты.",
        "operationId": "UserCards_AttachCardConfirm",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "confirmCodeModel",
            "in": "body",
            "description": "Модель кода подтверждения.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmCodeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AccountAttach",
          "AccountAttachWithoutConfirmCode"
        ]
      }
    },
    "/api/users/{personId}/cards/Attach/SendConfirmCode": {
      "post": {
        "tags": [
          "UserCards"
        ],
        "summary": "Процесс \"объединение карт\": повторная отправка кода подтверждения.",
        "operationId": "UserCards_AttachCardSendConfirmCode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "AccountAttach",
          "AccountAttachWithoutConfirmCode"
        ]
      }
    },
    "/api/users/{personId}/cards/Set": {
      "get": {
        "tags": [
          "UserCards"
        ],
        "summary": "Получить информацию о возможности прикрепления физической карты.",
        "operationId": "UserCards_SetCardInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfSetCardActionInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardSet"
        ]
      },
      "post": {
        "tags": [
          "UserCards"
        ],
        "summary": "Добавление карты.",
        "operationId": "UserCards_SetCard",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "setCardModel",
            "in": "body",
            "description": "Модель добавления карты.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetCardModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardSet"
        ]
      }
    },
    "/api/UserGroups/SearchByAttributes": {
      "post": {
        "tags": [
          "UserGroup"
        ],
        "summary": "Получить информацию о клиентах по их атрибутам.",
        "operationId": "UserGroup_SearchPersonsByAttributes",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "Данные для поиска.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchByAttributesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPersonsGroupInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/UserGroups/{groupId}/Cards": {
      "get": {
        "tags": [
          "UserGroup"
        ],
        "summary": "Получить информацию по картам группы пользователей.",
        "operationId": "UserGroup_GetGroupCardsInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cardShowMode",
            "in": "query",
            "description": "Режим отображения карт.",
            "required": false,
            "type": "string",
            "default": "NotDeleted",
            "enum": [
              "All",
              "NotDeleted"
            ],
            "x-loymax-type": "Loymax.SystemApi.Models.Cards.GroupCardShowMode, Loymax.SystemApi",
            "x-loymax-enum-type": "GroupCardShowMode"
          },
          {
            "name": "personIdToExclude",
            "in": "query",
            "description": "Идентификатор пользователя, карты которого не учитывать.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfSystemApiCardInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "CardRead"
        ]
      }
    },
    "/api/UserGroups/{groupId}": {
      "get": {
        "tags": [
          "UserGroup"
        ],
        "summary": "Получение списка пользователей группы.",
        "operationId": "UserGroup_GetGroupMembers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Идентификатор группы.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPersonsGroupInfoModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PersonInfoRead"
        ]
      }
    },
    "/api/users/{personId}/identifiers": {
      "get": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Получить список идентификаторов пользователя.",
        "operationId": "UserIdentifiers_GetIdentifiers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало выборки.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPagedViewModelOfPersonIdentifierModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      },
      "put": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Создание идентификатора типа Login.",
        "operationId": "UserIdentifiers_CreateLoginIdentifier",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "identifier",
            "in": "body",
            "description": "Модель идентификатора.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonIdentifierModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModelOfInt32"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/users/{personId}/identifiers/{id}": {
      "get": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Получить идентификатор по ID.",
        "operationId": "UserIdentifiers_GetIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатор.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfPersonIdentifierModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      },
      "post": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Редактирование идентификатора.",
        "operationId": "UserIdentifiers_UpdateIdentifier",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "identifier",
            "in": "body",
            "description": "Модель идентификатора.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonIdentifierModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      },
      "delete": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Удаление идентификатора.",
        "operationId": "UserIdentifiers_DeleteIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/users/{personId}/identifiers/{id}/recover": {
      "post": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Восстановление идентификатора.",
        "operationId": "UserIdentifiers_RecoverIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/users/{personId}/identifiers/{id}/block": {
      "post": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Блокирование идентификатора.",
        "operationId": "UserIdentifiers_BlockIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/users/{personId}/identifiers/{id}/unblock": {
      "post": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Разблокирование идентификатора.",
        "operationId": "UserIdentifiers_UnblockIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/users/{personId}/identifiers/{id}/roles/{roleId}": {
      "put": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Добавляет роль идентификатору.",
        "operationId": "UserIdentifiers_AddRoleToIdentifier",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Id роли.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "identifierRole",
            "in": "body",
            "description": "Модель роли идентификатора.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonIdentifierRoleModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      },
      "post": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Редактирует роль идентификатора.",
        "operationId": "UserIdentifiers_UpdateRoleInIdentifier",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Id роли.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "identifierRole",
            "in": "body",
            "description": "Модель роли идентификатора.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonIdentifierRoleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      },
      "delete": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Удаляет роль у идентификатора.",
        "operationId": "UserIdentifiers_DeleteRoleFromIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Id роли.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/users/{personId}/identifiers/{id}/permissions/{permission}": {
      "put": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Добавляет право доступа идентификатору.",
        "operationId": "UserIdentifiers_AddPermissionToIdentifier",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "permission",
            "in": "path",
            "description": "Логическое имя права доступа.",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifierPermission",
            "in": "body",
            "description": "Модель права доступа.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonIdentifierPermissionModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      },
      "post": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Редактирует право доступа у идентификатора.",
        "operationId": "UserIdentifiers_UpdatePermissionFromIdentifier",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "permission",
            "in": "path",
            "description": "Значение права доступа.",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifierPermission",
            "in": "body",
            "description": "Модель права доступа.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PersonIdentifierPermissionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      },
      "delete": {
        "tags": [
          "UserIdentifiers"
        ],
        "summary": "Удаляет право доступа у идентификатора.",
        "operationId": "UserIdentifiers_DeletePermissionFromIdentifier",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id идентификатора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "permission",
            "in": "path",
            "description": "Право доступа.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "PermissionsManage"
        ]
      }
    },
    "/api/users/{personId}/messengers": {
      "get": {
        "tags": [
          "UserMessengers"
        ],
        "summary": "Получает информацию о менеджерах пользователя.",
        "operationId": "UserMessengers_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfUserMessengersViewModel"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "MessengersRead"
        ]
      }
    },
    "/api/users/{personId}/SocialAccounts": {
      "get": {
        "tags": [
          "UserSocial"
        ],
        "summary": "Список всех аккаунтов в соцсетях клиента.",
        "operationId": "UserSocial_GetAccounts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id пользователя.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfListOfOAuthIdentifierInfo"
            }
          }
        },
        "security": [
          {
            "Authorization": [],
            "OAuth2Password": [],
            "OAuth2Code": [],
            "OAuth2ClientCredentials": []
          }
        ],
        "x-permissions": [
          "SocialNetworksAccountsRead"
        ]
      }
    },
    "/api/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Возвращает текущую версию api.",
        "operationId": "Version_GetVersion",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultModelOfVersionModel"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AccountViewModel": {
      "description": "Модель представления для счета.",
      "properties": {
        "amount": {
          "description": "Текущая сумма на счете.",
          "type": "number",
          "format": "double"
        },
        "minAmount": {
          "description": "Минимальная сумма на счете.",
          "type": "number",
          "format": "double"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyInfoModel",
          "description": "Валюта счета."
        },
        "block": {
          "description": "Заблокирован ли счёт.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "AccountViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.Legals.AccountViewModel, Loymax.SystemApi"
    },
    "Result": {
      "description": "Состояние результата.",
      "properties": {
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "Success",
            "Fail",
            "Error",
            "ValidationError"
          ],
          "x-loymax-type": "Loymax.Common.Contract.Model.ResultState, Loymax.Common.Contract",
          "x-loymax-enum-type": "ResultState"
        },
        "message": {
          "description": "Сообщение.",
          "type": "string"
        },
        "messageCode": {
          "description": "Код сообщения.",
          "type": "string"
        },
        "validationErrors": {
          "description": "Ошибки валидации.",
          "items": {
            "$ref": "#/definitions/ValidationError"
          },
          "xml": {
            "name": "ValidationError",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.ValidationError[], Loymax.Common.Contract"
        }
      },
      "xml": {
        "name": "Result"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Result, Loymax.Common.Contract"
    },
    "ResultModel": {
      "description": "Модель результата.",
      "required": [],
      "properties": {
        "result": {
          "$ref": "#/definitions/Result",
          "description": "Состояние результата."
        }
      },
      "xml": {
        "name": "ResultModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel, Loymax.Common.Contract"
    },
    "CurrencyInfoModel": {
      "description": "Модель с информацией о валюте.",
      "properties": {
        "id": {
          "description": "Идентификатор валюты.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "externalId": {
          "description": "Внешний идентификатор.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Является ли валюта архивной.",
          "type": "boolean"
        },
        "nameCases": {
          "$ref": "#/definitions/NameCaseModel",
          "description": "Список вариантов написания названия."
        }
      },
      "xml": {
        "name": "CurrencyInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.CurrencyInfoModel, Loymax.Common.Contract"
    },
    "ValidationError": {
      "description": "Ошибка валидации.",
      "properties": {
        "field": {
          "description": "Поле, с которым связана ошибка.",
          "type": "string"
        },
        "errorMessages": {
          "description": "Ошибки.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ValidationError"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ValidationError, Loymax.Common.Contract"
    },
    "NameCaseModel": {
      "description": "Модель представления для вариантов написания.",
      "properties": {
        "nominative": {
          "description": "В единственном числе и именительном падеже.",
          "type": "string"
        },
        "genitive": {
          "description": "В единственном числе и родительном падеже.",
          "type": "string"
        },
        "plural": {
          "description": "Во множественном числе и именительном падеже.",
          "type": "string"
        },
        "abbreviation": {
          "description": "Сокращенный вариант.",
          "type": "string"
        }
      },
      "xml": {
        "name": "NameCaseModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.NameCaseModel, Loymax.Common.Contract"
    },
    "ResultModelOfListOfAccountViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/AccountViewModel"
          },
          "xml": {
            "name": "AccountViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Partner.Legals.AccountViewModel, Loymax.SystemApi"
    },
    "AnketaQuestionViewModel": {
      "description": "ViewModel вопроса анкеты.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "description": "Отображаемое имя.",
          "type": "string"
        },
        "type": {
          "description": "Тип вопроса.",
          "type": "string",
          "enum": [
            "String",
            "Select",
            "Date",
            "Check",
            "Int",
            "Double"
          ],
          "x-loymax-type": "Loymax.Entities.QuestionType, Loymax.Entities",
          "x-loymax-enum-type": "QuestionType"
        },
        "isArchived": {
          "description": "Архивирован.",
          "type": "boolean"
        },
        "items": {
          "description": "Доступные значения  (для типов с выбором значений).",
          "items": {
            "$ref": "#/definitions/AnketaQuestionViewModelItem"
          },
          "xml": {
            "name": "AnketaQuestionViewModelItem",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "AnketaQuestionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Anketa.AnketaQuestionViewModel, Loymax.Common.WebApi"
    },
    "AnketaQuestionViewModelItem": {
      "description": "Описание доступного значения.",
      "properties": {
        "id": {
          "description": "Идентификатор элемента.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Имя элемента.",
          "type": "string"
        }
      },
      "xml": {
        "name": "AnketaQuestionViewModelItem"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Anketa.AnketaQuestionViewModel+AnketaQuestionViewModelItem, Loymax.Common.WebApi"
    },
    "ResultModelOfListOfAnketaQuestionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/AnketaQuestionViewModel"
          },
          "xml": {
            "name": "AnketaQuestionViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.WebApi.Models.Anketa.AnketaQuestionViewModel, Loymax.Common.WebApi"
    },
    "AnnouncementFilter": {
      "description": "Фильтр для получения рекламы.",
      "properties": {
        "titleSubstr": {
          "description": "Подстрока для поиска по названию рекламы.",
          "type": "string"
        },
        "spaceName": {
          "description": "Подстрока для поиска по названию рекламного места.",
          "type": "string"
        },
        "state": {
          "description": "Gets or sets the state.",
          "type": "string",
          "enum": [
            "Draft",
            "Ready",
            "Published"
          ],
          "x-loymax-type": "Loymax.Business.Announcement.Model.AnnouncementState, Loymax.Business.Announcement.Model",
          "x-loymax-enum-type": "AnnouncementState"
        },
        "dateFrom": {
          "description": "Начальная дата выборки.",
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "description": "Конечная дата выборки.",
          "type": "string",
          "format": "date-time"
        },
        "archivedState": {
          "description": "Сущности из архива.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        }
      },
      "xml": {
        "name": "AnnouncementFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Announcement.AnnouncementFilter, Loymax.SystemApi"
    },
    "SpaceModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "attributes": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "SpaceModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.SpaceModel, Loymax.Business.Announcement"
    },
    "PartnerViewModel": {
      "description": "Модель партнёра в плане.",
      "properties": {
        "id": {
          "description": "Идентификатор партнёра.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Имя партнёра.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PartnerViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.PartnerViewModel, Loymax.SystemApi"
    },
    "UserViewModel": {
      "description": "Информация о пользователе.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "personUid": {
          "description": "Уникальный идентификатор пользователя.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "description": "Имя.",
          "type": "string"
        },
        "lastName": {
          "description": "Фамилия.",
          "type": "string"
        },
        "patronymicName": {
          "description": "Отчество.",
          "type": "string"
        }
      },
      "xml": {
        "name": "UserViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.UserViewModel, Loymax.Common.Contract"
    },
    "AttributeValueModelBase": {
      "description": "Модель значения атрибута рекламного материала.",
      "properties": {
        "attributeId": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeLogicalName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "isRelated": {
          "description": "Значение атрибута получено из связанной сущности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "AttributeValueModelBase"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.AttributeValueModelBase, Loymax.Business.Announcement.Model"
    },
    "BaseAnnouncementModel": {
      "description": "Модель рекламного материала.",
      "required": [],
      "properties": {
        "id": {
          "description": "Id рекламного материала.",
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "description": "Определят находится ли сущность в архиве.",
          "type": "boolean"
        },
        "beginDate": {
          "description": "Дата начала.",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "Дата окончания.",
          "type": "string",
          "format": "date-time"
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "Draft",
            "Ready",
            "Published"
          ],
          "x-loymax-type": "Loymax.Business.Announcement.Model.AnnouncementState, Loymax.Business.Announcement.Model",
          "x-loymax-enum-type": "AnnouncementState"
        },
        "attributes": {
          "description": "Атрибуты.",
          "items": {
            "$ref": "#/definitions/AttributeValueModelBase"
          },
          "xml": {
            "name": "AttributeValueModelBase",
            "wrapped": true
          },
          "type": "array"
        },
        "relatedAnnouncementType": {
          "description": "Тип сущности.",
          "type": "string",
          "enum": [
            "Offer"
          ],
          "x-loymax-type": "Loymax.Business.Announcement.Model.RelatedAnnouncementType, Loymax.Business.Announcement.Model",
          "x-loymax-enum-type": "RelatedAnnouncementType"
        },
        "permissions": {
          "description": "Список прав.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "description": "Название рекламы.",
          "type": "string"
        }
      },
      "xml": {
        "name": "BaseAnnouncementModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.BaseAnnouncementModel, Loymax.Business.Announcement.Model"
    },
    "SystemApiAnnouncementModel": {
      "description": "Модель рекламного материала.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAnnouncementModel"
        }
      ],
      "properties": {
        "space": {
          "$ref": "#/definitions/SpaceModel",
          "description": "Рекламное место."
        },
        "partner": {
          "$ref": "#/definitions/PartnerViewModel",
          "description": "Партнер."
        },
        "author": {
          "$ref": "#/definitions/UserViewModel",
          "description": "Автор."
        },
        "permissionValues": {
          "description": "Список прав.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "SystemApiAnnouncementModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Announcement.SystemApiAnnouncementModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfSystemApiAnnouncementModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SystemApiAnnouncementModel"
          },
          "xml": {
            "name": "SystemApiAnnouncementModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Announcement.SystemApiAnnouncementModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Announcement.SystemApiAnnouncementModel, Loymax.SystemApi"
    },
    "ResultModelOfSystemApiAnnouncementModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SystemApiAnnouncementModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Announcement.SystemApiAnnouncementModel, Loymax.SystemApi"
    },
    "AttributeModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "attributeType": {
          "type": "string",
          "enum": [
            "String",
            "Boolean",
            "Numeric",
            "DateTime",
            "Image",
            "Video",
            "Html",
            "Dictionary",
            "Mechant"
          ],
          "x-loymax-type": "Loymax.Business.Announcement.Model.AttributeType, Loymax.Business.Announcement",
          "x-loymax-enum-type": "AttributeType"
        },
        "restrictions": {
          "items": {
            "$ref": "#/definitions/AttributeRestrictionModel"
          },
          "xml": {
            "name": "AttributeRestrictionModel",
            "wrapped": true
          },
          "type": "array"
        },
        "mappings": {
          "items": {
            "$ref": "#/definitions/AttributeMappingModel"
          },
          "xml": {
            "name": "AttributeMappingModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "AttributeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.AttributeModel, Loymax.Business.Announcement"
    },
    "AttributeRestrictionModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "AttributeRestrictionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.Restriction.AttributeRestrictionModel, Loymax.Business.Announcement"
    },
    "AttributeMappingModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "Offer"
          ],
          "x-loymax-type": "Loymax.Business.Announcement.Model.RelatedAnnouncementType, Loymax.Business.Announcement.Model",
          "x-loymax-enum-type": "RelatedAnnouncementType"
        },
        "property": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AttributeMappingModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.AttributeMappingModel, Loymax.Business.Announcement"
    },
    "ResultModelOfListOfAttributeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/AttributeModel"
          },
          "xml": {
            "name": "AttributeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Business.Announcement.Model.AttributeModel, Loymax.Business.Announcement"
    },
    "ResultModelOfInt32": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Int32, mscorlib"
    },
    "ResultModelOfAttributeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/AttributeModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Announcement.Model.AttributeModel, Loymax.Business.Announcement"
    },
    "RelatedEntityPropertyModel": {
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "RelatedEntityPropertyModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.RelatedEntityPropertyModel, Loymax.Business.Announcement"
    },
    "ResultModelOfRelatedEntityPropertyModel[]": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/RelatedEntityPropertyModel"
          },
          "xml": {
            "name": "RelatedEntityPropertyModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Business.Announcement.Model.RelatedEntityPropertyModel[], Loymax.Business.Announcement"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Announcement.Model.RelatedEntityPropertyModel[], Loymax.Business.Announcement"
    },
    "ResultModelOfListOfSpaceModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SpaceModel"
          },
          "xml": {
            "name": "SpaceModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Business.Announcement.Model.SpaceModel, Loymax.Business.Announcement"
    },
    "ResultModelOfSpaceModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SpaceModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Announcement.Model.SpaceModel, Loymax.Business.Announcement"
    },
    "ApplicationFilter": {
      "description": "Фильтр для приложений.",
      "properties": {
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "mode": {
          "description": "Режим выбора архивных объектов.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "isOrderedByAscending": {
          "description": "Режим прямой сортировки.",
          "type": "boolean"
        },
        "partnerIds": {
          "description": "Id партнеров.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ApplicationFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OAuth.Application.ApplicationFilter, Loymax.SystemApi"
    },
    "PartnerLoyaltyProgramModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PartnerLoyaltyProgramModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.PartnerLoyaltyProgramModel, Loymax.WebSites.Common"
    },
    "DeviceBaseViewModel": {
      "description": "Базовая модель представления для кассы.",
      "required": [],
      "properties": {
        "id": {
          "description": "Id девайса.",
          "type": "integer",
          "format": "int32"
        },
        "logicalId": {
          "description": "Логическое имя устройства.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceBaseViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceBaseViewModel, Loymax.SystemApi"
    },
    "BaseApplicationModel": {
      "description": "Базовый класс View-модели приложения.",
      "required": [],
      "properties": {
        "name": {
          "description": "Название приложения.",
          "type": "string"
        },
        "alias": {
          "description": "Логический идентификатор приложения.",
          "type": "string"
        },
        "description": {
          "description": "Описание приложения.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Удалено приложение или нет.",
          "type": "boolean"
        },
        "redirects": {
          "description": "Перечень разрешенных редиректов.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "partnerId": {
          "description": "Идентификатор партнера.",
          "type": "integer",
          "format": "int32"
        },
        "device": {
          "$ref": "#/definitions/DeviceBaseViewModel",
          "description": "Идентификатор кассы."
        },
        "cssUri": {
          "description": "Кастомизированные настройки CSS.",
          "type": "string"
        }
      },
      "xml": {
        "name": "BaseApplicationModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OAuth.Application.BaseApplicationModel, Loymax.SystemApi"
    },
    "ApplicationModel": {
      "description": "Модель OAuth приложения.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseApplicationModel"
        }
      ],
      "properties": {
        "id": {
          "description": "Идентификатор приложения.",
          "type": "integer",
          "format": "int32"
        },
        "partnerName": {
          "description": "Имя партнера.",
          "type": "string"
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/PartnerLoyaltyProgramModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "ApplicationModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OAuth.Application.ApplicationModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfApplicationModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ApplicationModel"
          },
          "xml": {
            "name": "ApplicationModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.OAuth.Application.ApplicationModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.OAuth.Application.ApplicationModel, Loymax.SystemApi"
    },
    "CreateApplicationModel": {
      "description": "Модель создания OAuth-приложения.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseApplicationModel"
        }
      ],
      "properties": {
        "loyaltyProgramId": {
          "description": "Идентификатор программы лояльности.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CreateApplicationModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OAuth.Application.CreateApplicationModel, Loymax.SystemApi"
    },
    "ResultModelOfApplicationModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ApplicationModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.OAuth.Application.ApplicationModel, Loymax.SystemApi"
    },
    "ResultModelOfString": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.String, mscorlib"
    },
    "ResultModelOfListOfString": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[System.String, mscorlib"
    },
    "BaseUserAttributeViewModel": {
      "description": "Базовый класс для атрибутов.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Имя.",
          "type": "string"
        },
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        }
      },
      "xml": {
        "name": "BaseUserAttributeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Attributes.BaseUserAttributeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfBaseUserAttributeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/BaseUserAttributeViewModel"
          },
          "xml": {
            "name": "BaseUserAttributeViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Attributes.BaseUserAttributeViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Attributes.BaseUserAttributeViewModel, Loymax.SystemApi"
    },
    "PartnerModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "externalId": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "canEdit": {
          "type": "boolean"
        },
        "loyaltyPrograms": {
          "items": {
            "$ref": "#/definitions/PartnerLoyaltyProgramModel"
          },
          "xml": {
            "name": "PartnerLoyaltyProgramModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PartnerModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.PartnerModel, Loymax.WebSites.Common"
    },
    "CreatorModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreatorModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.CreatorModel, Loymax.WebSites.Common"
    },
    "PartialRequiredViewModel": {
      "description": "Базовый класс для view-модели, для которой можно указать какие свойства задавать.",
      "required": [],
      "properties": {},
      "xml": {
        "name": "PartialRequiredViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.PartialRequiredViewModel, Loymax.Common.WebApi"
    },
    "GoodsGroupViewModel": {
      "description": "ViewModel с информацией о группе товаров.",
      "allOf": [
        {
          "$ref": "#/definitions/PartialRequiredViewModel"
        }
      ],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "changeDate": {
          "description": "Дата изменения.",
          "type": "string",
          "format": "date-time"
        },
        "partner": {
          "$ref": "#/definitions/PartnerModel",
          "description": "Партнер."
        },
        "ownerDescription": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Описание владельца."
        },
        "goodsCount": {
          "description": "Количество товаров.",
          "type": "integer",
          "format": "int32"
        },
        "lastChangeUserDescription": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Описание пользователя, проводившего последние изменения."
        },
        "isFixed": {
          "description": "Зафиксирована или нет.",
          "type": "boolean"
        },
        "fixDate": {
          "description": "Дата фиксации.",
          "type": "string",
          "format": "date-time"
        },
        "fixUserDescription": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Описание пользователя, осуществившего последнюю фиксацию."
        },
        "fixedGoodsCount": {
          "description": "Количество зафиксированных товаров.",
          "type": "integer",
          "format": "int32"
        },
        "isAccepted": {
          "description": "Принята или нет.",
          "type": "boolean"
        },
        "acceptor": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Описание приемщика."
        },
        "isArchived": {
          "description": "Признак архивной группы товаров.",
          "type": "boolean"
        },
        "externalId": {
          "description": "Внешний идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "GoodsGroupViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Goods.GoodsGroupViewModel, Loymax.SystemApi"
    },
    "PersonalOfferAttributeViewModel": {
      "description": "Модель представления для пользовательского атрибута типа \"Персональные товары\".",
      "allOf": [
        {
          "$ref": "#/definitions/BaseUserAttributeViewModel"
        }
      ],
      "properties": {
        "startFillDate": {
          "description": "Дата начала формирования пользовательского списка товаров.",
          "type": "string",
          "format": "date-time"
        },
        "endFillDate": {
          "description": "Дата окончания формирования пользовательского списка товаров.",
          "type": "string",
          "format": "date-time"
        },
        "maxGoodsCount": {
          "description": "Максимальное количество товаров, которые может выбрать пользователь.",
          "type": "integer",
          "format": "int32"
        },
        "goodsGroup": {
          "$ref": "#/definitions/GoodsGroupViewModel",
          "description": "Идентификатор группы товаров."
        }
      },
      "xml": {
        "name": "PersonalOfferAttributeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Attributes.PersonalOfferAttributeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfBaseUserAttributeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/BaseUserAttributeViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Attributes.BaseUserAttributeViewModel, Loymax.SystemApi"
    },
    "BatchOperationsFilter": {
      "description": "Модель для фильтра групповых операций.",
      "properties": {
        "fromDate": {
          "description": "Начало периода.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "Конец периода.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Тип операций.",
          "type": "string",
          "enum": [
            "Withdraw",
            "Deposit"
          ],
          "x-loymax-type": "Loymax.Entities.BatchType, Loymax.Entities",
          "x-loymax-enum-type": "BatchType"
        },
        "state": {
          "description": "Состояние операции.",
          "type": "string",
          "enum": [
            "NotProcessed",
            "Processed"
          ],
          "x-loymax-type": "Loymax.Entities.BatchState, Loymax.Entities",
          "x-loymax-enum-type": "BatchState"
        },
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        },
        "loyaltyPrograms": {
          "description": "Список программ лояльности.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "marketingCampaigns": {
          "description": "Список маркетинговых компаний.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "BatchOperationsFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BatchOperations.BatchOperationsFilter, Loymax.SystemApi"
    },
    "BatchOperationsBriefViewModel": {
      "description": "Облегченная модель пакета операций.",
      "required": [],
      "properties": {
        "id": {
          "description": "ID групповой операции.",
          "type": "integer",
          "format": "int32"
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Описание для пользователя.",
          "type": "string"
        },
        "internalDescription": {
          "description": "Внутреннее описание.",
          "type": "string"
        },
        "type": {
          "description": "Тип операции.",
          "type": "string",
          "enum": [
            "Withdraw",
            "Deposit"
          ],
          "x-loymax-type": "Loymax.Entities.BatchType, Loymax.Entities",
          "x-loymax-enum-type": "BatchType"
        },
        "state": {
          "description": "Состояние обработки операций.",
          "type": "string",
          "enum": [
            "NotProcessed",
            "Processed"
          ],
          "x-loymax-type": "Loymax.Entities.BatchState, Loymax.Entities",
          "x-loymax-enum-type": "BatchState"
        },
        "deviceInfo": {
          "$ref": "#/definitions/DeviceBriefViewModel",
          "description": "Информация о кассе."
        },
        "deferredOperationsAmmountSum": {
          "description": "Сумма операций.",
          "type": "number",
          "format": "double"
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/PartnerLoyaltyProgramModel",
          "description": "Программа лояльности."
        },
        "marketingCampaign": {
          "$ref": "#/definitions/MarketingCampaignSimpleViewModel",
          "description": "Маркетинговая компания."
        }
      },
      "xml": {
        "name": "BatchOperationsBriefViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BatchOperations.BatchOperationsBriefViewModel, Loymax.SystemApi"
    },
    "MarketingCampaignSimpleViewModel": {
      "description": "View-модель маркетинговой кампании.",
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "partnerId": {
          "description": "ID партнера.",
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "description": "Значение, определяющее, находится ли кампания в архиве.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "MarketingCampaignSimpleViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Marketing.MarketingCampaignSimpleViewModel, Loymax.SystemApi"
    },
    "DeviceBriefViewModel": {
      "description": "Краткая модель представления кассы.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/DeviceBaseViewModel"
        }
      ],
      "properties": {
        "name": {
          "description": "Имя устройства.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Удален.",
          "type": "boolean"
        },
        "partnerId": {
          "description": "Идентификатор партнера.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DeviceBriefViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceBriefViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfBatchOperationsBriefViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/BatchOperationsBriefViewModel"
          },
          "xml": {
            "name": "BatchOperationsBriefViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BatchOperations.BatchOperationsBriefViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BatchOperations.BatchOperationsBriefViewModel, Loymax.SystemApi"
    },
    "OperationDataModel": {
      "description": "Модель представления для операции. (Дублирует класс).",
      "properties": {
        "description": {
          "description": "Описание операции.",
          "type": "string"
        },
        "amount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        },
        "externalInfo": {
          "description": "Внешняя информация об операции.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OperationDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BatchOperations.OperationDataModel, Loymax.SystemApi"
    },
    "CurrencyBaseModel": {
      "description": "Информация о валюте.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор валюты.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "type": {
          "description": "Тип валюты.",
          "type": "string",
          "enum": [
            "Virtual",
            "Cash"
          ],
          "x-loymax-type": "Loymax.Entities.CurrencyTypeEnum, Loymax.Entities",
          "x-loymax-enum-type": "CurrencyTypeEnum"
        }
      },
      "xml": {
        "name": "CurrencyBaseModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Currency.CurrencyBaseModel, Loymax.SystemApi"
    },
    "QueueInfo": {
      "required": [],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "hasElements": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "QueueInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Background.Model.QueueInfo, Loymax.Business.Background"
    },
    "LifeTimeDefinitionBaseViewModel": {
      "description": "Базовая View модель определения времени жизни бонусов.",
      "required": [],
      "properties": {
        "id": {
          "description": "Id определения.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        }
      },
      "xml": {
        "name": "LifeTimeDefinitionBaseViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Payments.LifeTimeDefinitionBaseViewModel, Loymax.SystemApi"
    },
    "LifeTimeDefinitionViewModel": {
      "description": "View модель определения времени жизни бонусов.",
      "allOf": [
        {
          "$ref": "#/definitions/LifeTimeDefinitionBaseViewModel"
        }
      ],
      "properties": {
        "activationDelay": {
          "description": "Активация через (в минутах).",
          "type": "integer",
          "format": "int32"
        },
        "expirationDelay": {
          "description": "Отмена через (в минутах).",
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "description": "Определяет актуально ли определение.",
          "type": "boolean"
        },
        "activationPeriodType": {
          "description": "Тип округления периода активации.",
          "type": "string",
          "enum": [
            "Default",
            "DayBeginning",
            "CertainDate"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Payments.PeriodType, Loymax.SystemApi",
          "x-loymax-enum-type": "PeriodType"
        },
        "expirationPeriodType": {
          "description": "Тип округления периода сгорания.",
          "type": "string",
          "enum": [
            "Default",
            "DayBeginning",
            "CertainDate"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Payments.PeriodType, Loymax.SystemApi",
          "x-loymax-enum-type": "PeriodType"
        },
        "offset": {
          "description": "Смещение часового пояса относительно UTC.",
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "certainActivationDate": {
          "description": "Точное время активации.",
          "type": "string",
          "format": "date-time"
        },
        "certainExpirationDate": {
          "description": "Точное время сгорания.",
          "type": "string",
          "format": "date-time"
        },
        "partnerID": {
          "description": "Ид партнера.",
          "type": "integer",
          "format": "int32"
        },
        "partnerName": {
          "description": "Название партнера.",
          "type": "string"
        }
      },
      "xml": {
        "name": "LifeTimeDefinitionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Payments.LifeTimeDefinitionViewModel, Loymax.SystemApi"
    },
    "BatchOperationsQueueInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/QueueInfo"
        }
      ],
      "properties": {
        "allOperationCount": {
          "type": "integer",
          "format": "int32"
        },
        "completedOperationCount": {
          "type": "integer",
          "format": "int32"
        },
        "errorOperationCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BatchOperationsQueueInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Background.Model.BatchOperationsQueueInfo, Loymax.Business.Background"
    },
    "BatchOperationsViewModel": {
      "description": "Модель отправляемых данных для пакетных операций.",
      "allOf": [
        {
          "$ref": "#/definitions/BatchOperationsBriefViewModel"
        }
      ],
      "properties": {
        "creator": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Создатель."
        },
        "errorHandlingType": {
          "description": "Тип обработчика ошибок при выполнении операции.",
          "type": "string",
          "enum": [
            "Error",
            "NegativeBalance",
            "ZeroBalance"
          ],
          "x-loymax-type": "Loymax.Entities.OpErrorHandlingType, Loymax.Entities",
          "x-loymax-enum-type": "OpErrorHandlingType"
        },
        "operations": {
          "description": "Коллекция операций.",
          "items": {
            "$ref": "#/definitions/OperationDataModel"
          },
          "xml": {
            "name": "OperationDataModel",
            "wrapped": true
          },
          "type": "array"
        },
        "queueInfo": {
          "$ref": "#/definitions/BatchOperationsQueueInfo",
          "description": "Информация о состоянии фоновой обработки операций."
        },
        "lifeTimeDefinition": {
          "$ref": "#/definitions/LifeTimeDefinitionViewModel",
          "description": "Определение времени жизни бонусов (при операциях зачисления)."
        },
        "currency": {
          "$ref": "#/definitions/CurrencyBaseModel",
          "description": "Валюта."
        }
      },
      "xml": {
        "name": "BatchOperationsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BatchOperations.BatchOperationsViewModel, Loymax.SystemApi"
    },
    "ResultModelOfBatchOperationsViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/BatchOperationsViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.BatchOperations.BatchOperationsViewModel, Loymax.SystemApi"
    },
    "OperationViewModel": {
      "description": "Модель операции для CSV-файла.",
      "properties": {
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "externalInfo": {
          "description": "Внешняя информация.",
          "type": "string"
        },
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Количество средств."
        },
        "state": {
          "description": "Состояние операции.",
          "type": "string",
          "enum": [
            "Reserved",
            "Initialized",
            "Confirmed",
            "Canceled"
          ],
          "x-loymax-type": "Loymax.Entities.TransactionState, Loymax.Entities",
          "x-loymax-enum-type": "TransactionState"
        }
      },
      "xml": {
        "name": "OperationViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BatchOperations.OperationViewModel, Loymax.SystemApi"
    },
    "MoneyViewModel": {
      "description": "ViewModel представления денег.",
      "properties": {
        "amount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Валюта.",
          "type": "string"
        },
        "currencyInfo": {
          "$ref": "#/definitions/CurrencyInfoModel",
          "description": "Информация о валюте."
        }
      },
      "xml": {
        "name": "MoneyViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.MoneyViewModel, Loymax.Common.Contract"
    },
    "ResultModelOfPagedViewModelOfOperationViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OperationViewModel"
          },
          "xml": {
            "name": "OperationViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BatchOperations.OperationViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BatchOperations.OperationViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfDeviceBriefViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DeviceBriefViewModel"
          },
          "xml": {
            "name": "DeviceBriefViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Devices.DeviceBriefViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Devices.DeviceBriefViewModel, Loymax.SystemApi"
    },
    "ParsedBatchOperationsModel": {
      "description": "Модель представления для CSV-файла о списке операций.",
      "properties": {
        "operations": {
          "description": "Список операций.",
          "items": {
            "$ref": "#/definitions/OperationDataModel"
          },
          "xml": {
            "name": "OperationDataModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ParsedBatchOperationsModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BatchOperations.ParsedBatchOperationsModel, Loymax.SystemApi"
    },
    "ResultModelOfParsedBatchOperationsModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ParsedBatchOperationsModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.BatchOperations.ParsedBatchOperationsModel, Loymax.SystemApi"
    },
    "ResultModelOfBatchOperationsQueueInfo": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/BatchOperationsQueueInfo",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Background.Model.BatchOperationsQueueInfo, Loymax.Business.Background"
    },
    "BatchOperationsTransactionQueueInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/QueueInfo"
        }
      ],
      "properties": {
        "confirmedOperationCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BatchOperationsTransactionQueueInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Background.Model.BatchOperationsTransactionQueueInfo, Loymax.Business.Background"
    },
    "ResultModelOfBatchOperationsTransactionQueueInfo": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/BatchOperationsTransactionQueueInfo",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Background.Model.BatchOperationsTransactionQueueInfo, Loymax.Business.Background"
    },
    "BookletEmissionViewModel": {
      "description": "View модель выпуска буклетов.",
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "Номер.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "prefix": {
          "description": "Префикс.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Состояние.",
          "type": "string",
          "enum": [
            "Normal"
          ],
          "x-loymax-type": "Loymax.Entities.BookletEmissionState, Loymax.Entities",
          "x-loymax-enum-type": "BookletEmissionState"
        },
        "templateId": {
          "description": "Id шаблона.",
          "type": "integer",
          "format": "int32"
        },
        "templateText": {
          "description": "Текст шаблона.",
          "type": "string"
        },
        "loyaltyProgramId": {
          "description": "Идентификатор программы лояльности.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BookletEmissionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.Booklet.BookletEmissionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfBookletEmissionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/BookletEmissionViewModel"
          },
          "xml": {
            "name": "BookletEmissionViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.Booklet.BookletEmissionViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.Booklet.BookletEmissionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfBookletEmissionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/BookletEmissionViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Emissions.Booklet.BookletEmissionViewModel, Loymax.SystemApi"
    },
    "BrandFilter": {
      "description": "Фильтр для брендов.",
      "properties": {
        "state": {
          "description": "Определяет, возвращать ли объекты с состоянием hidden.",
          "type": "string",
          "enum": [
            "Normal",
            "Hidden"
          ],
          "x-loymax-type": "Loymax.Entities.BrandInfoState, Loymax.Entities",
          "x-loymax-enum-type": "BrandInfoState"
        },
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "substring": {
          "description": "Подстрока для поиска.",
          "type": "string"
        },
        "sortingIds": {
          "description": "Идентификаторы брендов, которые будут выбираться первыми.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "BrandFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BrandInfo.BrandFilter, Loymax.SystemApi"
    },
    "BrandViewModel": {
      "description": "Информация о бренде.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "guid": {
          "description": "Внешний идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "order": {
          "description": "Порядковый номер.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Состояние.",
          "type": "string",
          "enum": [
            "Hidden",
            "Normal"
          ],
          "x-loymax-type": "Loymax.Mobile.Contract.Models.Brands.BrandModelState, Loymax.Mobile.Contract",
          "x-loymax-enum-type": "BrandModelState"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "url": {
          "description": "Url.",
          "type": "string"
        },
        "images": {
          "description": "Изображения.",
          "items": {
            "$ref": "#/definitions/ImageViewModel"
          },
          "xml": {
            "name": "ImageViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "BrandViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BrandInfo.BrandViewModel, Loymax.SystemApi"
    },
    "ImageViewModel": {
      "description": "Изображение.",
      "properties": {
        "fileId": {
          "description": "Идентификатор файла в файловом хранилище.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ImageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ImageViewModel, Loymax.Common.Contract"
    },
    "ResultModelOfPagedViewModelOfBrandViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/BrandViewModel"
          },
          "xml": {
            "name": "BrandViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BrandInfo.BrandViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BrandInfo.BrandViewModel, Loymax.SystemApi"
    },
    "ResultModelOfBrandViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/BrandViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.BrandInfo.BrandViewModel, Loymax.SystemApi"
    },
    "ImageFileViewModel": {
      "description": "Модель изображения с файлом.",
      "properties": {
        "id": {
          "description": "Идентификатор изображения.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileViewModel",
          "description": "Файл."
        }
      },
      "xml": {
        "name": "ImageFileViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Images.ImageFileViewModel, Loymax.SystemApi"
    },
    "FileViewModel": {
      "description": "Файл.",
      "properties": {
        "fileName": {
          "description": "Имя файла.",
          "type": "string"
        },
        "fileSize": {
          "description": "Размер файла в байтах.",
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "description": "Содержимое файла в base64.",
          "type": "string"
        },
        "mimeType": {
          "description": "MIME-тип.",
          "type": "string"
        }
      },
      "xml": {
        "name": "FileViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Files.FileViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfImageFileViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ImageFileViewModel"
          },
          "xml": {
            "name": "ImageFileViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Images.ImageFileViewModel, Loymax.SystemApi"
    },
    "NewImageFileModel": {
      "description": "Модель нового изображения с файлом.",
      "properties": {
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/NewFileModel",
          "description": "Новый файл."
        }
      },
      "xml": {
        "name": "NewImageFileModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Images.NewImageFileModel, Loymax.SystemApi"
    },
    "NewFileModel": {
      "description": "Модель нового файла.",
      "properties": {
        "fileName": {
          "description": "Имя файла.",
          "type": "string"
        },
        "content": {
          "description": "Содержимое файла в base64.",
          "type": "string"
        }
      },
      "xml": {
        "name": "NewFileModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Files.NewFileModel, Loymax.SystemApi"
    },
    "UpdatedImageFileModel": {
      "description": "Модель обновляемого изображения с файлом.",
      "properties": {
        "id": {
          "description": "Идентификатор изображения.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/NewFileModel",
          "description": "Новый файл."
        }
      },
      "xml": {
        "name": "UpdatedImageFileModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Images.UpdatedImageFileModel, Loymax.SystemApi"
    },
    "ResultModelOfImageFileViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ImageFileViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Images.ImageFileViewModel, Loymax.SystemApi"
    },
    "BusinessEventListFilter": {
      "description": "Модель фильтра для получения расчёта событий.",
      "properties": {
        "from": {
          "description": "С какого элемента брать.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько элементов брать.",
          "type": "integer",
          "format": "int32"
        },
        "activityDateFrom": {
          "description": "Дата создания с.",
          "type": "string",
          "format": "date-time"
        },
        "activityDateTo": {
          "description": "Дата создания по.",
          "type": "string",
          "format": "date-time"
        },
        "personId": {
          "description": "Идентификатор пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "purchaseId": {
          "description": "Идентификатор покупки.",
          "type": "integer",
          "format": "int32"
        },
        "contextType": {
          "description": "Тип контекста.",
          "type": "string",
          "enum": [
            "Unknown",
            "DeviceRequest",
            "ShowcasePurchase",
            "UserDateTimeEvent",
            "BonusLifeTimeEvent",
            "ChangeNotifier",
            "RegistrationEnd",
            "LinkCard",
            "ChangeCardState",
            "SmsRegistration",
            "QuestionnaireUpdate",
            "ExternalCardReplace",
            "PushDeviceRegistration",
            "SendPasswordToCheque",
            "PurchaseOperation",
            "SocialNetworkAction",
            "ManualPayOperation",
            "ReferralActivity",
            "UserDeregistration"
          ],
          "x-loymax-type": "Loymax.Entities.BusinessActivityContextType, Loymax.Entities",
          "x-loymax-enum-type": "BusinessActivityContextType"
        }
      },
      "xml": {
        "name": "BusinessEventListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BusinessEvent.BusinessEventListFilter, Loymax.SystemApi"
    },
    "BusinessActivityViewModel": {
      "description": "View-модель для счётчика.",
      "properties": {
        "id": {
          "description": "Идентификатор счётчика.",
          "type": "integer",
          "format": "int64"
        },
        "activityDate": {
          "description": "Дата активности (локальное время + временная зона запроса или пользователя).",
          "type": "string",
          "format": "date-time"
        },
        "creationDate": {
          "description": "Время создания записи в UTC.",
          "type": "string",
          "format": "date-time"
        },
        "contextType": {
          "description": "Тип контекста.",
          "type": "string",
          "enum": [
            "Unknown",
            "DeviceRequest",
            "ShowcasePurchase",
            "UserDateTimeEvent",
            "BonusLifeTimeEvent",
            "ChangeNotifier",
            "RegistrationEnd",
            "LinkCard",
            "ChangeCardState",
            "SmsRegistration",
            "QuestionnaireUpdate",
            "ExternalCardReplace",
            "PushDeviceRegistration",
            "SendPasswordToCheque",
            "PurchaseOperation",
            "SocialNetworkAction",
            "ManualPayOperation",
            "ReferralActivity",
            "UserDeregistration"
          ],
          "x-loymax-type": "Loymax.Entities.BusinessActivityContextType, Loymax.Entities",
          "x-loymax-enum-type": "BusinessActivityContextType"
        },
        "personId": {
          "description": "Идентификатор пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "calculationIds": {
          "description": "Идентификаторы связанных расчётов.",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "type": "array"
        },
        "purchaseId": {
          "description": "Идентификатор покупки.",
          "type": "integer",
          "format": "int32"
        },
        "purchaseOperationType": {
          "description": "Тип операции покупки.",
          "type": "string",
          "enum": [
            "Unknown",
            "Payment",
            "Deposit",
            "Cashback",
            "Refund",
            "DirectDiscount",
            "ConfirmPurchase",
            "GiftCardPayment",
            "CancelPurchase"
          ],
          "x-loymax-type": "Loymax.Entities.Aggregates.PurchaseOperationType, Loymax.Entities",
          "x-loymax-enum-type": "PurchaseOperationType"
        }
      },
      "xml": {
        "name": "BusinessActivityViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BusinessEvent.BusinessActivityViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfBusinessActivityViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/BusinessActivityViewModel"
          },
          "xml": {
            "name": "BusinessActivityViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BusinessEvent.BusinessActivityViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.BusinessEvent.BusinessActivityViewModel, Loymax.SystemApi"
    },
    "CalculatorViewModel": {
      "description": "Вью модель для Калкулятора.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование.",
          "type": "string"
        },
        "calculatorType": {
          "description": "Тип калькулятора.",
          "type": "string",
          "enum": [
            "FilterPurchases",
            "PartnerPurchaseAmount",
            "DecimalQuestion",
            "CountGoodsByOfferChain"
          ],
          "x-loymax-type": "Loymax.Entities.RepositoryCalculatorType, Loymax.Entities",
          "x-loymax-enum-type": "RepositoryCalculatorType"
        }
      },
      "xml": {
        "name": "CalculatorViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CalculatorViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfCalculatorViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CalculatorViewModel"
          },
          "xml": {
            "name": "CalculatorViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.CalculatorViewModel, Loymax.SystemApi"
    },
    "CallCenterOperationBaseModel": {
      "description": "Базовая модель для операций в колл центре.",
      "required": [],
      "properties": {
        "ticketId": {
          "description": "Идентификатор заявки в OTRS.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CallCenterOperationBaseModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.CallCenterOperationBaseModel, Loymax.SystemApi"
    },
    "BlockCardModel": {
      "description": "Модель для блокировки карт.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "cardID": {
          "description": "Идентификатор карты.",
          "type": "integer",
          "format": "int32"
        },
        "callerPhone": {
          "description": "Номер телефона звонящего.",
          "type": "string"
        },
        "comment": {
          "description": "Комментарий.",
          "type": "string"
        }
      },
      "xml": {
        "name": "BlockCardModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.BlockCardModel, Loymax.SystemApi"
    },
    "UnBlockCardModel": {
      "description": "Модель для разблокировки карт.",
      "allOf": [
        {
          "$ref": "#/definitions/BlockCardModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "UnBlockCardModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.UnBlockCardModel, Loymax.SystemApi"
    },
    "ChangePhoneModel": {
      "description": "Модель для смены телефона.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "personId": {
          "description": "Идентификатор клиента.",
          "type": "integer",
          "format": "int32"
        },
        "newPhone": {
          "description": "Новый номер телефона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ChangePhoneModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.ChangePhoneModel, Loymax.SystemApi"
    },
    "ChangeEmailModel": {
      "description": "Модель для смены почты.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "personId": {
          "description": "Идентификатор клиента.",
          "type": "integer",
          "format": "int32"
        },
        "newEmail": {
          "description": "Новый адресс почты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ChangeEmailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.ChangeEmailModel, Loymax.SystemApi"
    },
    "ReplacePersonCardModel": {
      "description": "Модель для замены карты клиента.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "oldCardId": {
          "description": "ID карты, которую необходимо заменить.",
          "type": "integer",
          "format": "int32"
        },
        "newCardId": {
          "description": "ID карты, которую необходимо заменить.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ReplacePersonCardModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.ReplacePersonCardModel, Loymax.SystemApi"
    },
    "SubscriptionViewModel": {
      "description": "Вью-модель подписки.",
      "properties": {
        "typeId": {
          "description": "Тип подписки.",
          "type": "integer",
          "format": "int32"
        },
        "typeName": {
          "description": "Название типа подписки.",
          "type": "string"
        },
        "externalId": {
          "description": "Логическое имя типа подписки.",
          "type": "string"
        },
        "smsNotification": {
          "$ref": "#/definitions/SubscriptionNotificationStateModel",
          "description": "Оповещение по Sms."
        },
        "emailNotification": {
          "$ref": "#/definitions/SubscriptionNotificationStateModel",
          "description": "Оповещение по Email."
        },
        "pushNotification": {
          "$ref": "#/definitions/SubscriptionNotificationStateModel",
          "description": "Push оповещение."
        },
        "viberNotification": {
          "$ref": "#/definitions/SubscriptionNotificationStateModel",
          "description": "Viber оповещение."
        },
        "socialNetworksNotification": {
          "$ref": "#/definitions/SubscriptionNotificationStateModel",
          "description": "SocialNetwork оповещение."
        },
        "chatBotNotification": {
          "$ref": "#/definitions/SubscriptionNotificationStateModel",
          "description": "ChatBot оповещение."
        }
      },
      "xml": {
        "name": "SubscriptionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.Subscriptions.SubscriptionViewModel, Loymax.Common.Contract"
    },
    "SubscriptionNotificationStateModel": {
      "description": "Состояния метода оповещения.",
      "properties": {
        "readOnly": {
          "description": "Недоступен для изменения.",
          "type": "boolean"
        },
        "selected": {
          "description": "Клиент подписан.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SubscriptionNotificationStateModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.Subscriptions.SubscriptionNotificationStateModel, Loymax.Common.Contract"
    },
    "UpdateSubscriptionsModel": {
      "description": "Модель для обновления подписок.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "personId": {
          "description": "Идентификатор клиента.",
          "type": "integer",
          "format": "int32"
        },
        "values": {
          "description": "Подписки.",
          "items": {
            "$ref": "#/definitions/SubscriptionViewModel"
          },
          "xml": {
            "name": "SubscriptionViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "UpdateSubscriptionsModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.UpdateSubscriptionsModel, Loymax.SystemApi"
    },
    "SendNewPasswordModel": {
      "description": "Модель для отправки нового пароля.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "personID": {
          "description": "Идентификатор клиента.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "SendNewPasswordModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.SendNewPasswordModel, Loymax.SystemApi"
    },
    "DeleteCardModel": {
      "description": "Модель для операции удаления карты.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "cardId": {
          "description": "Идентификатор удаляемой карты.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DeleteCardModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.DeleteCardModel, Loymax.SystemApi"
    },
    "BlockAccountModel": {
      "description": "Модель для операции блокировки счета.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "personId": {
          "description": "Идентификатор пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "description": "Комментарий.",
          "type": "string"
        }
      },
      "xml": {
        "name": "BlockAccountModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.BlockAccountModel, Loymax.SystemApi"
    },
    "ActivatedCardModel": {
      "description": "Модель для завершения активации через колл-центр.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "ActivatedCardModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.ActivatedCardModel, Loymax.SystemApi"
    },
    "ChangeCardCategoryModel": {
      "description": "Модель для операции смена категории карты.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "cardId": {
          "description": "Идентификатор карты.",
          "type": "integer",
          "format": "int32"
        },
        "cardCategoryId": {
          "description": "Идентификатор новой категории карт.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ChangeCardCategoryModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.ChangeCardCategoryModel, Loymax.SystemApi"
    },
    "CompleteCallModel": {
      "description": "Модель для закрытия заявки.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "reason": {
          "description": "Причина обращения.",
          "type": "string"
        },
        "description": {
          "description": "Описание проблемы.",
          "type": "string"
        },
        "needToClose": {
          "description": "Нужно ли закрывать заявку.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CompleteCallModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.CompleteCallModel, Loymax.SystemApi"
    },
    "DeregisterPersonModel": {
      "description": "Модель выхода из ПЛ.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "personId": {
          "description": "Идентификатор дерегистрируемого пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "reason": {
          "description": "Причина выхода.",
          "type": "string"
        },
        "callerPhone": {
          "description": "Номер телефона звонящего (При исключении из КЦ).",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeregisterPersonModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.DeregisterPersonModel, Loymax.SystemApi"
    },
    "UpdateTicketModel": {
      "description": "Модель обновления заявки.",
      "allOf": [
        {
          "$ref": "#/definitions/CallCenterOperationBaseModel"
        }
      ],
      "properties": {
        "ticketType": {
          "description": "Идентификатор дерегистрируемого пользователя.",
          "type": "string",
          "enum": [
            "Default",
            "CardBlock",
            "CardUnBlock",
            "CardActivate",
            "CardChange",
            "ChangePhone",
            "SendPassword",
            "UpdateSubscriptions",
            "BlockAccount",
            "UnBlockAccount",
            "DeleteCard",
            "RecoveryCard",
            "ChangeEmail",
            "ChangeCardCategory",
            "Deregister",
            "CompleteCall",
            "SetCard"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Extensibility.Support.TicketType, Loymax.Domain.Contract",
          "x-loymax-enum-type": "TicketType"
        }
      },
      "xml": {
        "name": "UpdateTicketModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.CallCenter.UpdateTicketModel, Loymax.SystemApi"
    },
    "ResultModelOfBoolean": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Boolean, mscorlib"
    },
    "StripNumbers": {
      "description": "Модель номеров магнитных полос.",
      "properties": {
        "strip1": {
          "description": "Магнитная полоса №1.",
          "type": "string"
        },
        "strip2": {
          "description": "Магнитная полоса №2.",
          "type": "string"
        },
        "strip3": {
          "description": "Магнитная полоса №3.",
          "type": "string"
        }
      },
      "xml": {
        "name": "StripNumbers"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.StripNumbers, Loymax.SystemApi"
    },
    "CardCategoryInfo": {
      "description": "Информация о категории карты.",
      "properties": {
        "id": {
          "description": "Ифентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Название.",
          "type": "string"
        },
        "logicalName": {
          "description": "Логическое имя (для отображения изобрабражения типа карты в ЛК).",
          "type": "string"
        },
        "images": {
          "description": "Изображения.",
          "items": {
            "$ref": "#/definitions/ImageViewModel"
          },
          "xml": {
            "name": "ImageViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "cardCount": {
          "description": "Количество карт в категории.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CardCategoryInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Cards.CardCategoryInfo, Loymax.Common.Contract"
    },
    "CardCompactInfoModel": {
      "description": "ViewModel базовой информации о карте.",
      "required": [],
      "properties": {
        "id": {
          "description": "Ифентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "Emitted",
            "Packed",
            "Activated",
            "Replaced",
            "Creating",
            "Created",
            "Prepared",
            "Issued"
          ],
          "x-loymax-type": "Loymax.Common.Contract.Model.Cards.CardState, Loymax.Common.Contract",
          "x-loymax-enum-type": "CardState"
        },
        "number": {
          "description": "Номер карты.",
          "type": "string"
        },
        "barCode": {
          "description": "Баркод.",
          "type": "string"
        },
        "block": {
          "description": "Заблокирована или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CardCompactInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Cards.CardCompactInfoModel, Loymax.Common.Contract"
    },
    "AbstractCardInfoModel": {
      "description": "ViewModel информации о карте.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/CardCompactInfoModel"
        }
      ],
      "properties": {
        "cardCategory": {
          "$ref": "#/definitions/CardCategoryInfo",
          "description": "Информация о категории карты."
        },
        "cardOwnerInfo": {
          "$ref": "#/definitions/UserInfoBase",
          "description": "Информация о владельце карты."
        }
      },
      "xml": {
        "name": "AbstractCardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Cards.AbstractCardInfoModel, Loymax.Common.Contract"
    },
    "CardInfoModel": {
      "description": "Информация о карте.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/AbstractCardInfoModel"
        }
      ],
      "properties": {
        "passwordRequired": {
          "description": "Нужна ли проверка пароля.",
          "type": "boolean"
        },
        "isDeleted": {
          "description": "Удалена или нет.",
          "type": "boolean"
        },
        "replacementDate": {
          "description": "Дата замены.",
          "type": "string",
          "format": "date-time"
        },
        "replacementSource": {
          "description": "Источник замены.",
          "type": "string",
          "enum": [
            "UserPortal",
            "CallCenter",
            "Device"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.ReplaceCardSource, Loymax.Domain.Contract",
          "x-loymax-enum-type": "ReplaceCardSource"
        }
      },
      "xml": {
        "name": "CardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.CardInfoModel, Loymax.SystemApi"
    },
    "UserInfoBase": {
      "description": "Информация о пользователе.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/UserViewModel"
        }
      ],
      "properties": {
        "phoneNumber": {
          "description": "Номер телефона.",
          "type": "string"
        },
        "email": {
          "description": "Email.",
          "type": "string"
        }
      },
      "xml": {
        "name": "UserInfoBase"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.UserInfoBase, Loymax.Common.Contract"
    },
    "SystemApiCardInfoModel": {
      "description": "Инофрмация о карте для system api.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/CardInfoModel"
        }
      ],
      "properties": {
        "pinCode": {
          "description": "Пинкод.",
          "type": "string"
        },
        "strips": {
          "$ref": "#/definitions/StripNumbers",
          "description": "Номера магнитной полосы."
        },
        "canUnBlocking": {
          "description": "Возможна ли разблокировка карты.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SystemApiCardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.SystemApiCardInfoModel, Loymax.SystemApi"
    },
    "ResultModelOfSystemApiCardInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SystemApiCardInfoModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Cards.SystemApiCardInfoModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfSystemApiCardInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SystemApiCardInfoModel"
          },
          "xml": {
            "name": "SystemApiCardInfoModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Cards.SystemApiCardInfoModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Cards.SystemApiCardInfoModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfCardCompactInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CardCompactInfoModel"
          },
          "xml": {
            "name": "CardCompactInfoModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.Contract.Model.Cards.CardCompactInfoModel, Loymax.Common.Contract"
    },
    "EmitCardInfoModel": {
      "description": "Модель для получения данных конфигурации о возможности выпуска карт.",
      "properties": {
        "mainCardAssigningRequiredStatus": {
          "description": "Статус возможности привязки основной карты.",
          "type": "string",
          "enum": [
            "NotAssign",
            "Assign",
            "AssignOptional"
          ],
          "x-loymax-type": "Loymax.Business.Configuration.Models.MainCardAssigningRequired, Loymax.Business.Configuration",
          "x-loymax-enum-type": "MainCardAssigningRequired"
        },
        "emitVirtualCardStatus": {
          "description": "Статус привязки виртуальной карты.",
          "type": "string",
          "enum": [
            "NotEmit",
            "EmitForAll",
            "EmitOnDemand"
          ],
          "x-loymax-type": "Loymax.Business.Configuration.Models.EmitVirtualCard, Loymax.Business.Configuration",
          "x-loymax-enum-type": "EmitVirtualCard"
        }
      },
      "xml": {
        "name": "EmitCardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.EmitCardInfoModel, Loymax.Mobile.Contract"
    },
    "ResultModelOfEmitCardInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/EmitCardInfoModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.Cards.EmitCardInfoModel, Loymax.Mobile.Contract"
    },
    "CardCategoryModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Regular",
            "Gift"
          ],
          "x-loymax-type": "Loymax.WebSites.Common.CardCategoryType, Loymax.WebSites.Common",
          "x-loymax-enum-type": "CardCategoryType"
        },
        "cardCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CardCategoryModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.CardCategoryModel, Loymax.WebSites.Common"
    },
    "ResultModelOfPagedViewModelOfCardCategoryModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CardCategoryModel"
          },
          "xml": {
            "name": "CardCategoryModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.CardCategoryModel, Loymax.WebSites.Common"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.CardCategoryModel, Loymax.WebSites.Common"
    },
    "ResultModelOfCardCategoryModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CardCategoryModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.WebSites.Common.CardCategoryModel, Loymax.WebSites.Common"
    },
    "CardsFilter": {
      "description": "Фильтр для выпуска карт.",
      "properties": {
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "loyaltyPrograms": {
          "description": "Список ПЛ для фильтра по ПЛ.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CardsFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.CardsFilter, Loymax.SystemApi"
    },
    "CardEmissionViewModel": {
      "description": "View модель выпуска карт.",
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "Номер.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "prefix": {
          "description": "Префикс.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Состояние.",
          "type": "string",
          "enum": [
            "Normal"
          ],
          "x-loymax-type": "Loymax.Entities.CardEmissionState, Loymax.Entities",
          "x-loymax-enum-type": "CardEmissionState"
        },
        "templateId": {
          "description": "Id шаблона.",
          "type": "integer",
          "format": "int32"
        },
        "templateText": {
          "description": "Текст шаблона.",
          "type": "string"
        },
        "cardType": {
          "description": "Тип карты.",
          "type": "string",
          "enum": [
            "General",
            "Secondary",
            "Virtual"
          ],
          "x-loymax-type": "Loymax.Entities.CardType, Loymax.Entities",
          "x-loymax-enum-type": "CardType"
        },
        "cardCategoryId": {
          "description": "Id категории карт.",
          "type": "integer",
          "format": "int32"
        },
        "packingAllowed": {
          "description": "Упаковка.",
          "type": "boolean"
        },
        "packingState": {
          "description": "Состояние упаковки.",
          "type": "string",
          "enum": [
            "NotPacked",
            "NotRequired",
            "Packed"
          ],
          "x-loymax-type": "Loymax.Entities.CardEmissionPackingState, Loymax.Entities",
          "x-loymax-enum-type": "CardEmissionPackingState"
        },
        "passwordRequired": {
          "description": "Активация без пароля.",
          "type": "boolean"
        },
        "queueInfo": {
          "$ref": "#/definitions/CardsPackingQueueInfo",
          "description": "Очередь фасовки карт."
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/PartnerLoyaltyProgramModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "CardEmissionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.Card.CardEmissionViewModel, Loymax.SystemApi"
    },
    "CardsPackingQueueInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/QueueInfo"
        }
      ],
      "properties": {
        "allCardsCount": {
          "type": "integer",
          "format": "int32"
        },
        "packedCardsCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CardsPackingQueueInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Background.Model.CardsPackingQueueInfo, Loymax.Business.Background"
    },
    "ResultModelOfPagedViewModelOfCardEmissionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CardEmissionViewModel"
          },
          "xml": {
            "name": "CardEmissionViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.Card.CardEmissionViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.Card.CardEmissionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfCardEmissionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CardEmissionViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Emissions.Card.CardEmissionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfCardsPackingQueueInfo": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CardsPackingQueueInfo",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Background.Model.CardsPackingQueueInfo, Loymax.Business.Background"
    },
    "CardPackingModel": {
      "description": "Дополнительная информация для фасовки карты.",
      "properties": {
        "secondaryCardsIds": {
          "description": "Идентификаторы фасуемых дополнительных карт.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CardPackingModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Cards.CardPackingModel, Loymax.Common.Contract"
    },
    "CatalogAttributeViewModel": {
      "description": "Атрибут в каталоге товаров.",
      "properties": {
        "id": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Имя.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CatalogAttributeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Catalog.CatalogAttributeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfCatalogAttributeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CatalogAttributeViewModel"
          },
          "xml": {
            "name": "CatalogAttributeViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Catalog.CatalogAttributeViewModel, Loymax.SystemApi"
    },
    "GoodsAttributeValueViewModel": {
      "description": "View-модель значения атрибута товара.",
      "properties": {
        "attributeID": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "id": {
          "description": "Id значения атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Значение атрибута.",
          "type": "string"
        }
      },
      "xml": {
        "name": "GoodsAttributeValueViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.GoodsCatalog.GoodsAttributeValueViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfGoodsAttributeValueViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/GoodsAttributeValueViewModel"
          },
          "xml": {
            "name": "GoodsAttributeValueViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.GoodsCatalog.GoodsAttributeValueViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.GoodsCatalog.GoodsAttributeValueViewModel, Loymax.Common.WebApi"
    },
    "OfferFilter": {
      "description": "Фильтр акций.",
      "required": [],
      "properties": {
        "merchantId": {
          "description": "Id магазина.",
          "type": "integer",
          "format": "int32"
        },
        "offerState": {
          "description": "Статус акции.",
          "type": "string",
          "enum": [
            "Active",
            "CommingSoon"
          ],
          "x-loymax-type": "Loymax.Common.Portable.OfferState, Loymax.Common.Portable",
          "x-loymax-enum-type": "OfferState"
        },
        "from": {
          "description": "Со скольки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Тип акции.",
          "type": "string",
          "enum": [
            "Original",
            "PersonalGoods",
            "PersonalOffer",
            "All"
          ],
          "x-loymax-type": "Loymax.Common.Portable.CommunicationOfferType, Loymax.Common.Portable",
          "x-loymax-enum-type": "CommunicationOfferType"
        },
        "categoryFilterType": {
          "description": "Фильтр по категории.",
          "type": "string",
          "enum": [
            "SelectByLogicalName",
            "IgnoreByLogicalName",
            "SelectUncategorized"
          ],
          "x-loymax-type": "Loymax.Common.Portable.OfferCategoryFilterType, Loymax.Common.Portable",
          "x-loymax-enum-type": "OfferCategoryFilterType"
        },
        "categoryLogicalNames": {
          "description": "Логические имена категорий.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.OfferFilter, Loymax.Mobile.Contract"
    },
    "CommunicationOfferFilter": {
      "description": "Фильтр для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferFilter"
        }
      ],
      "properties": {
        "communicationOfferState": {
          "description": "Статус акции.",
          "type": "string",
          "enum": [
            "Active",
            "CommingSoon"
          ],
          "x-loymax-type": "Loymax.Common.Portable.OfferState, Loymax.Common.Portable",
          "x-loymax-enum-type": "OfferState"
        },
        "fromDate": {
          "description": "Дата С.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "Дата По.",
          "type": "string",
          "format": "date-time"
        },
        "brandIds": {
          "description": "Набор идентификаторов брендов.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "categoriesIds": {
          "description": "Набор идентификаторов категорий рекламных материалов.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "name": {
          "description": "Подстрока для поиска по имени.",
          "type": "string"
        },
        "isArchived": {
          "description": "Признак удаления.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "priorityMin": {
          "description": "Минимальный приоритет.",
          "type": "integer",
          "format": "int32"
        },
        "priorityMax": {
          "description": "Максимальный приоритет.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CommunicationOfferFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.CommunicationOfferFilter, Loymax.SystemApi"
    },
    "RewardThumbnailModel": {
      "description": "Модель описания акции.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "RewardThumbnailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.RewardThumbnail.RewardThumbnailModel, Loymax.SystemApi"
    },
    "SimpleCategoryViewModel": {
      "description": "Простая модель категории рекламных материалов.",
      "properties": {
        "id": {
          "description": "Идентификатор категории.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Имя категории.",
          "type": "string"
        },
        "isArchived": {
          "description": "Находится ли в архиве.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SimpleCategoryViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.SimpleCategoryViewModel, Loymax.SystemApi"
    },
    "BaseCommunicationOfferModel": {
      "description": "Модель акции, отображаемой клиентам.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентефикатор.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Заголовок.",
          "type": "string"
        },
        "description": {
          "description": "Детальное описание.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Краткое описание.",
          "type": "string"
        },
        "begin": {
          "description": "Дата начала.",
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "Дата окончания.",
          "type": "string",
          "format": "date-time"
        },
        "rewardThumbnail": {
          "$ref": "#/definitions/RewardThumbnailModel",
          "description": "Описание вознаграждения."
        },
        "images": {
          "description": "Изображения акции.",
          "items": {
            "$ref": "#/definitions/ImageViewModel"
          },
          "xml": {
            "name": "ImageViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "rewardImage": {
          "$ref": "#/definitions/FileViewModel",
          "description": "Изображение вознаграждения."
        },
        "merchantIds": {
          "description": "Список магазинов.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "targetGroupIds": {
          "description": "Список ЦА.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "isArchived": {
          "description": "Признак удаления.",
          "type": "boolean"
        },
        "priority": {
          "description": "Приоритет акции.",
          "type": "integer",
          "format": "int32"
        },
        "categories": {
          "description": "Список идентификаторов категорий рекламных материалов.",
          "items": {
            "$ref": "#/definitions/SimpleCategoryViewModel"
          },
          "xml": {
            "name": "SimpleCategoryViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "BaseCommunicationOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.BaseCommunicationOfferModel, Loymax.SystemApi"
    },
    "CommunicationOfferModel": {
      "description": "Модель акции, отображаемой клиентам.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCommunicationOfferModel"
        }
      ],
      "properties": {
        "brandIds": {
          "description": "Бренды.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CommunicationOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.CommunicationOfferModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfCommunicationOfferModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CommunicationOfferModel"
          },
          "xml": {
            "name": "CommunicationOfferModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Communication.Offer.CommunicationOfferModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Communication.Offer.CommunicationOfferModel, Loymax.SystemApi"
    },
    "ResultModelOfCommunicationOfferModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CommunicationOfferModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Communication.Offer.CommunicationOfferModel, Loymax.SystemApi"
    },
    "UpdateCommunicationOfferModel": {
      "description": "Модель акции, отображаемой клиентам.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCommunicationOfferModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "UpdateCommunicationOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.UpdateCommunicationOfferModel, Loymax.SystemApi"
    },
    "MerchantInfoSearchFilter": {
      "properties": {
        "cityId": {
          "type": "integer",
          "format": "int32"
        },
        "сategoryID": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "archivedShowMode": {
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        }
      },
      "xml": {
        "name": "MerchantInfoSearchFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Entities.MerchantInfoSearchFilter, Loymax.Entities"
    },
    "MerchantInfoModel": {
      "description": "Информация о магазине.",
      "properties": {
        "id": {
          "description": "Идентификатор магазина.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Название.",
          "type": "string"
        },
        "internalTitle": {
          "description": "Внутреннее название.",
          "type": "string"
        },
        "brandId": {
          "description": "Бренд.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "location": {
          "$ref": "#/definitions/LocationDataModel",
          "description": "Местоположение."
        },
        "scheduleModel": {
          "$ref": "#/definitions/ScheduleModel",
          "description": "Расписание."
        },
        "isArchived": {
          "description": "Признак архивности.",
          "type": "boolean"
        },
        "contacts": {
          "description": "Контакты.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MerchantInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Merchants.MerchantInfoModel, Loymax.Mobile.Contract"
    },
    "LocationDataModel": {
      "description": "ViewModel описания места.",
      "properties": {
        "id": {
          "description": "ID.",
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "description": "Идентификатор места.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "latitude": {
          "description": "Широта.",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "Долгота.",
          "type": "number",
          "format": "double"
        },
        "region": {
          "$ref": "#/definitions/RegionDataModel",
          "description": "Регион."
        },
        "city": {
          "$ref": "#/definitions/CityDataModel",
          "description": "Город."
        },
        "street": {
          "description": "Улица.",
          "type": "string"
        },
        "house": {
          "description": "Дом.",
          "type": "string"
        },
        "building": {
          "description": "Здание.",
          "type": "string"
        },
        "office": {
          "description": "Офис.",
          "type": "string"
        }
      },
      "xml": {
        "name": "LocationDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Location.LocationDataModel, Loymax.Common.Contract"
    },
    "ScheduleModel": {
      "description": "Модель расписания работы магазина.",
      "properties": {
        "mon": {
          "description": "Понедельник.",
          "items": {
            "$ref": "#/definitions/OpeningHours"
          },
          "xml": {
            "name": "OpeningHours",
            "wrapped": true
          },
          "type": "array"
        },
        "tue": {
          "description": "Вторник.",
          "items": {
            "$ref": "#/definitions/OpeningHours"
          },
          "xml": {
            "name": "OpeningHours",
            "wrapped": true
          },
          "type": "array"
        },
        "wed": {
          "description": "Среда.",
          "items": {
            "$ref": "#/definitions/OpeningHours"
          },
          "xml": {
            "name": "OpeningHours",
            "wrapped": true
          },
          "type": "array"
        },
        "thu": {
          "description": "Четверг.",
          "items": {
            "$ref": "#/definitions/OpeningHours"
          },
          "xml": {
            "name": "OpeningHours",
            "wrapped": true
          },
          "type": "array"
        },
        "fri": {
          "description": "Пятница.",
          "items": {
            "$ref": "#/definitions/OpeningHours"
          },
          "xml": {
            "name": "OpeningHours",
            "wrapped": true
          },
          "type": "array"
        },
        "sat": {
          "description": "Суббота.",
          "items": {
            "$ref": "#/definitions/OpeningHours"
          },
          "xml": {
            "name": "OpeningHours",
            "wrapped": true
          },
          "type": "array"
        },
        "sun": {
          "description": "Воскресенье.",
          "items": {
            "$ref": "#/definitions/OpeningHours"
          },
          "xml": {
            "name": "OpeningHours",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ScheduleModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Merchants.ScheduleModel, Loymax.Mobile.Contract"
    },
    "RegionDataModel": {
      "description": "Регион.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "prefix": {
          "description": "Префикс.",
          "type": "string"
        }
      },
      "xml": {
        "name": "RegionDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Location.RegionDataModel, Loymax.Common.Contract"
    },
    "CityDataModel": {
      "description": "Населенный пункт.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "regionId": {
          "description": "Идентификатор региона.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "prefix": {
          "description": "Префикс.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CityDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Location.CityDataModel, Loymax.Common.Contract"
    },
    "OpeningHours": {
      "description": "Часы работы.",
      "properties": {
        "to": {
          "description": "С.",
          "type": "string"
        },
        "from": {
          "description": "До.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OpeningHours"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Merchants.ScheduleModel+OpeningHours, Loymax.Mobile.Contract"
    },
    "ResultModelOfListOfMerchantInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MerchantInfoModel"
          },
          "xml": {
            "name": "MerchantInfoModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Mobile.Contract.Models.Merchants.MerchantInfoModel, Loymax.Mobile.Contract"
    },
    "TargetGroupSearchFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "partnerIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "loyaltyPrograms": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "creatorIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "archivedShowMode": {
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "calculatedShowMode": {
          "type": "string",
          "enum": [
            "NotCalculatedOnly",
            "CalculatedOnly"
          ],
          "x-loymax-type": "Loymax.Entities.TargetGroupCalculatedShowMode, Loymax.Entities",
          "x-loymax-enum-type": "TargetGroupCalculatedShowMode"
        }
      },
      "xml": {
        "name": "TargetGroupSearchFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Entities.TargetGroupSearchFilter, Loymax.Entities"
    },
    "CalculationModel": {
      "properties": {
        "calculationState": {
          "type": "string",
          "enum": [
            "ToCalculate",
            "InProcess",
            "Calculated",
            "Error"
          ],
          "x-loymax-type": "Loymax.Business.Calculations.CalculationState, Loymax.Business.Calculations",
          "x-loymax-enum-type": "CalculationState"
        },
        "isAbleToCalculate": {
          "type": "boolean"
        },
        "calculationDate": {
          "type": "string",
          "format": "date-time"
        },
        "personsCount": {
          "type": "integer",
          "format": "int32"
        },
        "errorReason": {
          "type": "string"
        },
        "isCalculated": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CalculationModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Calculations.CalculationModel, Loymax.Business.Calculations"
    },
    "TargetGroupViewModel": {
      "description": "View модель целевой аудитории.",
      "allOf": [
        {
          "$ref": "#/definitions/PartialRequiredViewModel"
        }
      ],
      "properties": {
        "id": {
          "description": "Id целевой аудитории.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "isArchived": {
          "description": "Признак архивной целевой аудитории.",
          "type": "boolean"
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "changeDate": {
          "description": "Дата изменения.",
          "type": "string",
          "format": "date-time"
        },
        "creatorDescription": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Описание автора."
        },
        "lastChangeUserDescription": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Описание пользователя, внесшего последние изменения."
        },
        "fixUserDescription": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Описание пользователя, осуществившего последнюю фиксацию."
        },
        "isFixed": {
          "description": "Зафиксирована или нет.",
          "type": "boolean"
        },
        "fixDate": {
          "description": "Дата фиксации.",
          "type": "string",
          "format": "date-time"
        },
        "partner": {
          "$ref": "#/definitions/PartnerModel",
          "description": "Партнер."
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/PartnerLoyaltyProgramModel",
          "description": "Программа лояльности."
        },
        "calculationInfo": {
          "$ref": "#/definitions/CalculationModel",
          "description": "Информация о расчете."
        },
        "lastCalculationInfo": {
          "$ref": "#/definitions/CalculationModel",
          "description": "Информация о последнем расчете."
        },
        "hasFilters": {
          "description": "Признак наличия фильтров.",
          "type": "boolean"
        },
        "operations": {
          "description": "Доступные операции над ЦА.",
          "type": "string",
          "enum": [
            "None",
            "View",
            "Edit",
            "Calculate"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.TargetGroups.TargetGroupManageOperation, Loymax.Domain.Contract",
          "x-loymax-enum-type": "TargetGroupManageOperation"
        }
      },
      "xml": {
        "name": "TargetGroupViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfTargetGroupViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/TargetGroupViewModel"
          },
          "xml": {
            "name": "TargetGroupViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupViewModel, Loymax.SystemApi"
    },
    "OfferInfoShortViewModel": {
      "description": "Модель представления для акции с минимальным количеством свойств.",
      "properties": {
        "id": {
          "description": "Идентификатор акции.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название акции.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OfferInfoShortViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferInfoShortViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfOfferInfoShortViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferInfoShortViewModel"
          },
          "xml": {
            "name": "OfferInfoShortViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Offers.OfferInfoShortViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Offers.OfferInfoShortViewModel, Loymax.SystemApi"
    },
    "CommunicationOfferCategoryFilter": {
      "description": "Фильтр для поиска категорий рекламных материалов.",
      "properties": {
        "name": {
          "description": "Название категории.",
          "type": "string"
        },
        "state": {
          "description": "Признак архивирования категории.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "partnersIds": {
          "description": "Список идентификаторов партнеров.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "sortingIds": {
          "description": "Идентификаторы, которые будут выбираться первыми.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CommunicationOfferCategoryFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Category.CommunicationOfferCategoryFilter, Loymax.SystemApi"
    },
    "CommunicationOfferCategoryViewModel": {
      "description": "Модель представления категории рекламных материалов.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "logicalName": {
          "description": "Логическое название.",
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/PartnerModel",
          "description": "Партнер."
        },
        "isArchived": {
          "description": "Признак архивирования категории.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CommunicationOfferCategoryViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Category.CommunicationOfferCategoryViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfCommunicationOfferCategoryViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CommunicationOfferCategoryViewModel"
          },
          "xml": {
            "name": "CommunicationOfferCategoryViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Communication.Category.CommunicationOfferCategoryViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Communication.Category.CommunicationOfferCategoryViewModel, Loymax.SystemApi"
    },
    "ResultModelOfCommunicationOfferCategoryViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CommunicationOfferCategoryViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Communication.Category.CommunicationOfferCategoryViewModel, Loymax.SystemApi"
    },
    "OfferDetailModel": {
      "description": "Модель деталей акции.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "string"
        },
        "rewardThumbnail": {
          "$ref": "#/definitions/RewardThumbnailModel",
          "description": "Описание вознаграждения."
        },
        "title": {
          "description": "Заголовок.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/FileViewModel",
          "description": "Изображение."
        }
      },
      "xml": {
        "name": "OfferDetailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Detail.OfferDetailModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfOfferDetailModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferDetailModel"
          },
          "xml": {
            "name": "OfferDetailModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Communication.Detail.OfferDetailModel, Loymax.SystemApi"
    },
    "CreateAndEditDetailModel": {
      "description": "Модель для обновления деталей акции.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "string"
        },
        "rewardThumbnail": {
          "$ref": "#/definitions/RewardThumbnailModel",
          "description": "Описание вознаграждения."
        },
        "title": {
          "description": "Заголовок.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/NewFileModel",
          "description": "Изображение."
        }
      },
      "xml": {
        "name": "CreateAndEditDetailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Detail.CreateAndEditDetailModel, Loymax.SystemApi"
    },
    "ResultModelOfOfferDetailModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferDetailModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Communication.Detail.OfferDetailModel, Loymax.SystemApi"
    },
    "OfferInstructionsModel": {
      "description": "Модель для создания инструкций акции.",
      "properties": {
        "instructions": {
          "description": "Инструкция.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OfferInstructionsModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Instuction.OfferInstructionsModel, Loymax.SystemApi"
    },
    "ResultModelOfOfferInstructionsModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferInstructionsModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Communication.Instuction.OfferInstructionsModel, Loymax.SystemApi"
    },
    "ConfigurationViewModel": {
      "description": "Модель представления для конфигураций.",
      "properties": {
        "id": {
          "description": "ID.",
          "type": "integer",
          "format": "int32"
        },
        "key": {
          "description": "Ключ.",
          "type": "string"
        },
        "value": {
          "description": "Значение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ConfigurationViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Controllers.Configuration.ConfigurationViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfConfigurationViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ConfigurationViewModel"
          },
          "xml": {
            "name": "ConfigurationViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Controllers.Configuration.ConfigurationViewModel, Loymax.SystemApi"
    },
    "ConfigurationListViewModel": {
      "description": "Для редактирования.",
      "properties": {
        "values": {
          "description": "Коллекция новых значений.",
          "items": {
            "$ref": "#/definitions/ConfigurationViewModel"
          },
          "xml": {
            "name": "ConfigurationViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ConfigurationListViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Controllers.Configuration.ConfigurationListViewModel, Loymax.SystemApi"
    },
    "ConfigurationDeployFilter": {
      "description": "Фильтр для деплоя.",
      "properties": {
        "fromDate": {
          "description": "Дата С.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "Дата По.",
          "type": "string",
          "format": "date-time"
        },
        "packageVersionSubstring": {
          "description": "Подстрока для поиска по версионности.",
          "type": "string"
        },
        "isSuccess": {
          "description": "Успешность выполнения.",
          "type": "boolean"
        },
        "authorSubstring": {
          "description": "Подстрока для поиска по автору.",
          "type": "string"
        },
        "externalId": {
          "description": "Внешний идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "ConfigurationDeployFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.ConfigurationDeploy.ConfigurationDeployFilter, Loymax.SystemApi"
    },
    "ConfigurationDeployViewModel": {
      "description": "Информация о деплое.",
      "properties": {
        "id": {
          "description": "Идентификатор деплоя.",
          "type": "integer",
          "format": "int32"
        },
        "packageVersion": {
          "description": "Версия пакета.",
          "type": "string"
        },
        "date": {
          "description": "Дата.",
          "type": "string",
          "format": "date-time"
        },
        "finishDate": {
          "description": "Дата завершения обновления.",
          "type": "string",
          "format": "date-time"
        },
        "author": {
          "description": "Автор.",
          "type": "string"
        },
        "isSuccess": {
          "description": "Успешность.",
          "type": "boolean"
        },
        "externalId": {
          "description": "Внешний идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "ConfigurationDeployViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.ConfigurationDeploy.ConfigurationDeployViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfConfigurationDeployViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ConfigurationDeployViewModel"
          },
          "xml": {
            "name": "ConfigurationDeployViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.ConfigurationDeploy.ConfigurationDeployViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.ConfigurationDeploy.ConfigurationDeployViewModel, Loymax.SystemApi"
    },
    "ResultModelOfConfigurationDeployViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ConfigurationDeployViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.ConfigurationDeploy.ConfigurationDeployViewModel, Loymax.SystemApi"
    },
    "ConfigurationPluginFilter": {
      "description": "Фильтр для плагинов.",
      "properties": {
        "pluginSubstring": {
          "description": "Подстрока для поиска по названию плагина.",
          "type": "string"
        },
        "deployIdSubstring": {
          "description": "Подстрока для поиска по ID деплоя.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ConfigurationPluginFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.ConfigurationPlugin.ConfigurationPluginFilter, Loymax.SystemApi"
    },
    "ConfigurationPluginViewModel": {
      "description": "Информация о плагине.",
      "properties": {
        "id": {
          "description": "Идентификатор плагина.",
          "type": "integer",
          "format": "int32"
        },
        "plugin": {
          "description": "Название плагина.",
          "type": "string"
        },
        "version": {
          "description": "Версия плагина.",
          "type": "string"
        },
        "deployId": {
          "description": "Идентификатор деплоя, в котором используется плагин.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "ConfigurationPluginViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.ConfigurationPlugin.ConfigurationPluginViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfConfigurationPluginViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ConfigurationPluginViewModel"
          },
          "xml": {
            "name": "ConfigurationPluginViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.ConfigurationPlugin.ConfigurationPluginViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.ConfigurationPlugin.ConfigurationPluginViewModel, Loymax.SystemApi"
    },
    "ConfigurationScriptFilter": {
      "description": "Фильтр для скриптов.",
      "properties": {
        "fromDate": {
          "description": "Дата С.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "Дата По.",
          "type": "string",
          "format": "date-time"
        },
        "idSubstring": {
          "description": "Подстрока для поиска по идентификатору.",
          "type": "string"
        },
        "descriptionSubstring": {
          "description": "Подстрока для поиска по описание.",
          "type": "string"
        },
        "configDeployId": {
          "description": "Идентификатор деплоя.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Наименование БД.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ConfigurationScriptFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.ConfigurationScript.ConfigurationScriptFilter, Loymax.SystemApi"
    },
    "ConfigurationScriptViewModel": {
      "description": "Информация о скрипте.",
      "properties": {
        "id": {
          "description": "Идентификатор скрипта.",
          "type": "string"
        },
        "description": {
          "description": "Описание скрипта.",
          "type": "string"
        },
        "executionDate": {
          "description": "Дата исполнения скрипта.",
          "type": "string",
          "format": "date-time"
        },
        "configDeployId": {
          "description": "Идентификатор деплоя, в котором выполнился скрипт.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "duration": {
          "description": "Время выполнения в мс.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ConfigurationScriptViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.ConfigurationScript.ConfigurationScriptViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfConfigurationScriptViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ConfigurationScriptViewModel"
          },
          "xml": {
            "name": "ConfigurationScriptViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.ConfigurationScript.ConfigurationScriptViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.ConfigurationScript.ConfigurationScriptViewModel, Loymax.SystemApi"
    },
    "CounterFilter": {
      "description": "Фильтр для счетчиков.",
      "properties": {
        "eventType": {
          "description": "Тип события.",
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "nameText": {
          "description": "Текст, содержащийся в названии счетчика.",
          "type": "string"
        },
        "counterType": {
          "description": "Тип счетчика.",
          "type": "string",
          "enum": [
            "Original",
            "PurchaseCounter",
            "MultiplicityCounter"
          ],
          "x-loymax-type": "Loymax.Common.Portable.CounterType, Loymax.Common.Portable",
          "x-loymax-enum-type": "CounterType"
        },
        "dateFrom": {
          "description": "С какой даты искать.",
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "description": "По какую дату искать.",
          "type": "string",
          "format": "date-time"
        },
        "partners": {
          "description": "Список партнеров, по которым будут отфильтрованы счетчики.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "loyaltyProgramIds": {
          "description": "Список id программ лояльности, для фильтрации счетчиков.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CounterFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Counter.CounterFilter, Loymax.SystemApi"
    },
    "CounterViewModel": {
      "description": "View-модель для счётчика.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор счётчика.",
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "Уникальный внешний идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Наименование счётчика.",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Автор счетчика."
        },
        "creationDate": {
          "description": "Дата создания счетчика.",
          "type": "string",
          "format": "date-time"
        },
        "partner": {
          "$ref": "#/definitions/PartnerViewModel",
          "description": "Партнер."
        },
        "targets": {
          "description": "Список моделей для счётчика.",
          "items": {
            "type": "string",
            "enum": [
              "EventDateTime",
              "SourceDateTime",
              "Person",
              "Card",
              "Partner",
              "Device",
              "Merchant",
              "OAuthIdentifierInfo",
              "OAuthActivityType",
              "OAuthObjectId",
              "OAuthGroupId",
              "AccountGroup",
              "RefundedPurchase",
              "Referral",
              "Purchase",
              "Legal",
              "EventDay",
              "EventMonth",
              "EventYear"
            ],
            "x-loymax-type": "Loymax.Entities.CounterTarget, Loymax.Entities",
            "x-loymax-enum-type": "CounterTarget"
          },
          "xml": {
            "name": "CounterTarget",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CounterTarget",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CounterTarget>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<CounterTarget>"
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgramModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "CounterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Counter.CounterViewModel, Loymax.SystemApi"
    },
    "LoyaltyProgramInfoViewModel": {
      "description": "View-модель программы лояльности.",
      "required": [],
      "properties": {
        "id": {
          "description": "Системный идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Логическое имя.",
          "type": "string"
        }
      },
      "xml": {
        "name": "LoyaltyProgramInfoViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.LoyaltyProgramInfoViewModel, Loymax.SystemApi"
    },
    "LoyaltyProgramModel": {
      "description": "View-модель создания программы лояльности.",
      "allOf": [
        {
          "$ref": "#/definitions/LoyaltyProgramInfoViewModel"
        }
      ],
      "properties": {
        "externalId": {
          "description": "Уникальный идентификатор.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "images": {
          "description": "Изображения.",
          "items": {
            "$ref": "#/definitions/ImageViewModel"
          },
          "xml": {
            "name": "ImageViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "LoyaltyProgramModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.LoyaltyProgramModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfCounterViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CounterViewModel"
          },
          "xml": {
            "name": "CounterViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Counter.CounterViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Counter.CounterViewModel, Loymax.SystemApi"
    },
    "ResultModelOfCounterViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CounterViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Counter.CounterViewModel, Loymax.SystemApi"
    },
    "CounterTargetViewModel": {
      "description": "View-модель для параметра счётчика.",
      "properties": {
        "target": {
          "description": "Наименование параметра счётчика в контексте акции.",
          "type": "string",
          "enum": [
            "EventDateTime",
            "SourceDateTime",
            "Person",
            "Card",
            "Partner",
            "Device",
            "Merchant",
            "OAuthIdentifierInfo",
            "OAuthActivityType",
            "OAuthObjectId",
            "OAuthGroupId",
            "AccountGroup",
            "RefundedPurchase",
            "Referral",
            "Purchase",
            "Legal",
            "EventDay",
            "EventMonth",
            "EventYear"
          ],
          "x-loymax-type": "Loymax.Entities.CounterTarget, Loymax.Entities",
          "x-loymax-enum-type": "CounterTarget"
        }
      },
      "xml": {
        "name": "CounterTargetViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Counter.CounterTargetViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfCounterTargetViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CounterTargetViewModel"
          },
          "xml": {
            "name": "CounterTargetViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Counter.CounterTargetViewModel, Loymax.SystemApi"
    },
    "CouponEmissionFilter": {
      "properties": {
        "changeDateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "changeDateTo": {
          "type": "string",
          "format": "date-time"
        },
        "types": {
          "items": {
            "type": "string",
            "enum": [
              "Public",
              "Person",
              "Distributed"
            ],
            "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponEmissionFilter+CouponEmissionType, Loymax.Coupon.Contract",
            "x-loymax-enum-type": "CouponEmissionType"
          },
          "xml": {
            "name": "CouponEmissionType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CouponEmissionType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CouponEmissionType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.IEnumerable<CouponEmissionType>"
        },
        "partnerIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "loyaltyProgramIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "status": {
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "title": {
          "type": "string"
        },
        "personId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CouponEmissionFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponEmissionFilter, Loymax.Coupon.Contract"
    },
    "KeyValuePairOfCouponStateAndInt32": {
      "properties": {
        "key": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Created",
            "Issued",
            "Used",
            "Rejected",
            "QueuedToUse",
            "QueuedToIssue"
          ],
          "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponState, Loymax.Coupon.Contract",
          "x-loymax-enum-type": "CouponState"
        },
        "value": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "KeyValuePair`2"
      },
      "type": "object",
      "x-loymax-enum-type": "CouponState",
      "x-loymax-collection-type": "System.Collections.Generic.KeyValuePair`2",
      "x-loymax-property-collection-type": "System.Collections.Generic.KeyValuePair`2"
    },
    "CouponEmissionViewModel": {
      "description": "ViewModel выпуска купонов.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/PartialRequiredViewModel"
        }
      ],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Название.",
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/PartnerViewModel",
          "description": "Партнер."
        },
        "isArchived": {
          "description": "Заархивирован ли выпуск.",
          "type": "boolean"
        },
        "creationDate": {
          "description": "Время создания.",
          "type": "string",
          "format": "date-time"
        },
        "changeDate": {
          "description": "Время изменения.",
          "type": "string",
          "format": "date-time"
        },
        "createdByPerson": {
          "$ref": "#/definitions/UserViewModel",
          "description": "Автор."
        },
        "lastEditByPerson": {
          "$ref": "#/definitions/UserViewModel",
          "description": "Последний редактор."
        },
        "counts": {
          "description": "Количество купонов в эмиссии в разрезе состояний.",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfCouponStateAndInt32"
          },
          "xml": {
            "name": "KeyValuePair`2",
            "wrapped": true
          },
          "type": "array"
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgramInfoViewModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "CouponEmissionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.Coupon.CouponEmissionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfCouponEmissionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CouponEmissionViewModel"
          },
          "xml": {
            "name": "CouponEmissionViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.Coupon.CouponEmissionViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.Coupon.CouponEmissionViewModel, Loymax.SystemApi"
    },
    "CouponViewModel": {
      "description": "ViewModel для купона.",
      "properties": {
        "id": {
          "description": "Идентификатор купона.",
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "description": "Код.",
          "type": "string"
        },
        "qrContent": {
          "description": "Qr код.",
          "type": "string"
        },
        "createDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "updateDate": {
          "description": "Дата обновления.",
          "type": "string",
          "format": "date-time"
        },
        "couponState": {
          "description": "Статус купона.",
          "type": "string",
          "enum": [
            "Created",
            "Issued",
            "Used",
            "Rejected",
            "QueuedToUse",
            "QueuedToIssue"
          ],
          "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponState, Loymax.Coupon.Contract",
          "x-loymax-enum-type": "CouponState"
        },
        "emissionTitle": {
          "description": "Название эмиссии.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CouponViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.CouponViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfCouponViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CouponViewModel"
          },
          "xml": {
            "name": "CouponViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.CouponViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.CouponViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfCouponEmissionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CouponEmissionViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Emissions.Coupon.CouponEmissionViewModel, Loymax.SystemApi"
    },
    "CurrencyFilter": {
      "description": "Фильтр для валют.",
      "properties": {
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Подстрока для поиска по имени.",
          "type": "string"
        },
        "type": {
          "description": "Тип валюты.",
          "type": "string",
          "enum": [
            "Virtual",
            "Cash"
          ],
          "x-loymax-type": "Loymax.Entities.CurrencyTypeEnum, Loymax.Entities",
          "x-loymax-enum-type": "CurrencyTypeEnum"
        },
        "mode": {
          "description": "Режим выбора архивных объектов.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "partnerIds": {
          "description": "Список партнеров, по которым будут отфильтрованны валюты.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "defaultFirst": {
          "description": "Признак, что первой в списке будет возвращаться валюта по умолчанию.",
          "type": "boolean"
        },
        "sortingIds": {
          "description": "Список идентификаторов для первоочередного выбора.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "externalId": {
          "description": "Внешний идентификатор валюты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CurrencyFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Currency.CurrencyFilter, Loymax.SystemApi"
    },
    "CurrencyViewModel": {
      "description": "Модель представления для валюты.",
      "allOf": [
        {
          "$ref": "#/definitions/CurrencyBaseModel"
        }
      ],
      "properties": {
        "externalId": {
          "description": "Внешний идентификатор.",
          "type": "string"
        },
        "divisibility": {
          "description": "Значение делимости валюты.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "nameCases": {
          "$ref": "#/definitions/NameCaseModel",
          "description": "Список вариантов написания названия."
        },
        "isDeleted": {
          "description": "Удалена валюта или нет.",
          "type": "boolean"
        },
        "partners": {
          "description": "Список партнеров.",
          "items": {
            "$ref": "#/definitions/PartnerViewModel"
          },
          "xml": {
            "name": "PartnerViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "accessMode": {
          "description": "Режим доступа к валюте.",
          "type": "string",
          "enum": [
            "View",
            "Edit"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Currency.CurrencyAccessMode, Loymax.SystemApi",
          "x-loymax-enum-type": "CurrencyAccessMode"
        }
      },
      "xml": {
        "name": "CurrencyViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Currency.CurrencyViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfCurrencyViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CurrencyViewModel"
          },
          "xml": {
            "name": "CurrencyViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Currency.CurrencyViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Currency.CurrencyViewModel, Loymax.SystemApi"
    },
    "ResultModelOfCurrencyViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CurrencyViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Currency.CurrencyViewModel, Loymax.SystemApi"
    },
    "DeviceAccountFilter": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Подстрока для поиска по названию валюты.",
          "type": "string"
        },
        "sortingIds": {
          "description": "Список идентификаторов для первоочередного выбора..",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DeviceAccountFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceAccountFilter, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfMoneyViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MoneyViewModel"
          },
          "xml": {
            "name": "MoneyViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.Contract.Model.MoneyViewModel, Loymax.Common.Contract"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.Contract.Model.MoneyViewModel, Loymax.Common.Contract"
    },
    "DeviceCapabilityViewModel": {
      "description": "Представление для {Loymax.Entities.DeviceCapability}.",
      "properties": {
        "id": {
          "description": "Индификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "isSelected": {
          "description": "Выбран.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "DeviceCapabilityViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceCapabilityViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfDeviceCapabilityViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DeviceCapabilityViewModel"
          },
          "xml": {
            "name": "DeviceCapabilityViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Devices.DeviceCapabilityViewModel, Loymax.SystemApi"
    },
    "DeviceCapabilityListViewModel": {
      "description": "Список возможностей кассы для обновления.",
      "properties": {
        "capabilities": {
          "description": "Коллекция новых значений.",
          "items": {
            "$ref": "#/definitions/DeviceCapabilityViewModel"
          },
          "xml": {
            "name": "DeviceCapabilityViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DeviceCapabilityListViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceCapabilityListViewModel, Loymax.SystemApi"
    },
    "MerchantViewModel": {
      "description": "ViewModel с информацией о магазине.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "internalName": {
          "description": "Внутреннее название.",
          "type": "string"
        },
        "guid": {
          "description": "Уникальный идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "brandId": {
          "description": "Идентификатор бренда.",
          "type": "integer",
          "format": "int32"
        },
        "brandName": {
          "description": "Название бренда.",
          "type": "string"
        },
        "partnerCatalogId": {
          "description": "Идентификатор каталога партнера.",
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "$ref": "#/definitions/LocationDataModel",
          "description": "Местоположение магазина."
        },
        "isDeleted": {
          "description": "Признак архивности.",
          "type": "boolean"
        },
        "url": {
          "description": "Url адрес.",
          "type": "string"
        },
        "order": {
          "description": "Order.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "schedule": {
          "description": "Расписание.",
          "type": "string"
        },
        "contacts": {
          "description": "Контакты.",
          "type": "string"
        },
        "image": {
          "description": "Изображение.",
          "type": "string"
        },
        "isConfirmCodeDeviceVerificationEnabled": {
          "description": "Подтверждение списания бонусов кодом включено.",
          "type": "boolean"
        },
        "confirmPaymentAmount": {
          "description": "Сумма для которой нужно отправлять подтверждение.",
          "type": "integer",
          "format": "int32"
        },
        "refundNegativeType": {
          "description": "Возможность отрицательного баланса при проведении операции .",
          "type": "string",
          "enum": [
            "SuppressNegative",
            "AllowNegative"
          ],
          "x-loymax-type": "Loymax.Entities.RefundNegativeType, Loymax.Entities",
          "x-loymax-enum-type": "RefundNegativeType"
        }
      },
      "xml": {
        "name": "MerchantViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.Merchant.MerchantViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfMerchantViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MerchantViewModel"
          },
          "xml": {
            "name": "MerchantViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.Merchant.MerchantViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.Merchant.MerchantViewModel, Loymax.SystemApi"
    },
    "TestDeviceViewModel": {
      "description": "Информация о тестовой кассе.",
      "allOf": [
        {
          "$ref": "#/definitions/DeviceBaseViewModel"
        }
      ],
      "properties": {
        "merchantInfo": {
          "description": "Магазин.",
          "type": "string"
        },
        "currency": {
          "description": "Валюты кассы.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TestDeviceViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.TestDeviceViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfTestDeviceViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/TestDeviceViewModel"
          },
          "xml": {
            "name": "TestDeviceViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.DeviceEmulation.TestDeviceViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.DeviceEmulation.TestDeviceViewModel, Loymax.SystemApi"
    },
    "ResultModelOfTestDeviceViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TestDeviceViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.DeviceEmulation.TestDeviceViewModel, Loymax.SystemApi"
    },
    "BasePurchasesFilterViewModel": {
      "description": "Модель фильтра для получения коллекции покупок.",
      "required": [],
      "properties": {
        "startChequeTime": {
          "description": "Нижняя граница времени покупки.",
          "type": "string",
          "format": "date-time"
        },
        "lastChequeTime": {
          "description": "Верхняя граница времени покупки.",
          "type": "string",
          "format": "date-time"
        },
        "merchantIds": {
          "description": "Идентификатор магазина.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "loyaltyPrograms": {
          "description": "Идентификатор программ лояльности.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "chequeNumber": {
          "description": "Номер чека.",
          "type": "string"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "from": {
          "description": "Начальная позиция в списке.",
          "type": "integer",
          "format": "int32"
        },
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        },
        "personId": {
          "description": "Идентификатор пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "personIdentifier": {
          "description": "Идентификатор пользователя связанный с покупкой.",
          "type": "string"
        }
      },
      "xml": {
        "name": "BasePurchasesFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.BasePurchasesFilterViewModel, Loymax.SystemApi"
    },
    "PurchaseViewModel": {
      "description": "View model покупки.",
      "properties": {
        "purchaseId": {
          "description": "Идентификатор покупки.",
          "type": "integer",
          "format": "int32"
        },
        "purchaseTime": {
          "description": "Время покупки.",
          "type": "string",
          "format": "date-time"
        },
        "completeTime": {
          "description": "Время завершения или отмены покупки.",
          "type": "string",
          "format": "date-time"
        },
        "devicelID": {
          "description": "Kассир.",
          "type": "string"
        },
        "chequeNumber": {
          "description": "Номер чека.",
          "type": "string"
        },
        "merchant": {
          "$ref": "#/definitions/MerchantViewModel",
          "description": "Информация о магазине."
        },
        "state": {
          "description": "Состояние покупки.",
          "type": "string",
          "enum": [
            "Created",
            "Confirmed",
            "Canceled"
          ],
          "x-loymax-type": "Loymax.Business.Purchase.Model.PurchaseState, Loymax.Business.Purchase.Model",
          "x-loymax-enum-type": "PurchaseState"
        },
        "isFinalState": {
          "description": "Является ли состояние покупки конечным.",
          "type": "boolean"
        },
        "loyaltyProgramId": {
          "description": "Идентификатор программы лояльности.",
          "type": "integer",
          "format": "int32"
        },
        "personIdentifier": {
          "description": "Ид покупателя (номер карты или телефон или...",
          "type": "string"
        }
      },
      "xml": {
        "name": "PurchaseViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Controllers.Purchase.PurchaseViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfPurchaseViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PurchaseViewModel"
          },
          "xml": {
            "name": "PurchaseViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Controllers.Purchase.PurchaseViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Controllers.Purchase.PurchaseViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationPurchaseViewModel": {
      "description": "Модель покупки.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "purchaseDate": {
          "description": "Дата покупки.",
          "type": "string",
          "format": "date-time"
        },
        "deviceId": {
          "description": "Идентификатор кассы.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Состояние покупки.",
          "type": "string",
          "enum": [
            "Created",
            "Closed",
            "Cancelled",
            "Confirmed",
            "Paid",
            "Calculated"
          ],
          "x-loymax-type": "Loymax.Entities.DeviceEmulationPurchaseState, Loymax.Entities",
          "x-loymax-enum-type": "DeviceEmulationPurchaseState"
        },
        "identifier": {
          "$ref": "#/definitions/DeviceEmulationIdentifierViewModel",
          "description": "Идентификатор пользователя."
        },
        "isAbleToConfirm": {
          "description": "Возможно ли подтвердить?.",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "Общая сумма.",
          "type": "number",
          "format": "double"
        },
        "totalPayed": {
          "description": "Суммарно оплачено.",
          "type": "number",
          "format": "double"
        },
        "amountWithoutDiscount": {
          "description": "Сумма без скидки.",
          "type": "number",
          "format": "double"
        },
        "partnerId": {
          "description": "Идентификатор партнера.",
          "type": "integer",
          "format": "int32"
        },
        "positions": {
          "description": "Позиции.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationPositionViewModel"
          },
          "xml": {
            "name": "DeviceEmulationPositionViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "payments": {
          "description": "Оплаты.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationPaymentViewModel"
          },
          "xml": {
            "name": "DeviceEmulationPaymentViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "coupons": {
          "description": "Купоны.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationCouponModel"
          },
          "xml": {
            "name": "DeviceEmulationCouponModel",
            "wrapped": true
          },
          "type": "array"
        },
        "resultStateModel": {
          "$ref": "#/definitions/DeviceEmulationResultStateViewModel",
          "description": "Модель итогового состояния."
        }
      },
      "xml": {
        "name": "DeviceEmulationPurchaseViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationPurchaseViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationIdentifierViewModel": {
      "description": "Модель идентификатора пользователя в покупке.",
      "properties": {
        "value": {
          "description": "Значение.",
          "type": "string"
        },
        "loyaltyProgram": {
          "description": "Программа лояльности.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationIdentifierViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationIdentifierViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationPositionViewModel": {
      "description": "Модель позиции.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "catalogGoodName": {
          "description": "Название каталога товаров.",
          "type": "string"
        },
        "catalogGoodsId": {
          "description": "Идентификатор каталога товаров.",
          "type": "integer",
          "format": "int32"
        },
        "itemId": {
          "description": "ItemID товаров.",
          "type": "string"
        },
        "price": {
          "description": "Цена.",
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "description": "Количество.",
          "type": "number",
          "format": "double"
        },
        "amount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "directDiscount": {
          "description": "Прямая скидка.",
          "type": "number",
          "format": "double"
        },
        "partnerDiscount": {
          "description": "Партнерская скидка.",
          "type": "number",
          "format": "double"
        },
        "partnerCashback": {
          "description": "Партнерский кешбек.",
          "type": "number",
          "format": "double"
        },
        "positionId": {
          "description": "Идентификатор позиции.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DeviceEmulationPositionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationPositionViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationPaymentViewModel": {
      "description": "Модель оплаты для тестовой кассы.",
      "properties": {
        "paymentType": {
          "description": "Логическое имя типа оплаты.",
          "type": "string"
        },
        "paymentName": {
          "description": "Название типа оплаты.",
          "type": "string"
        },
        "amount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "info": {
          "description": "Информация.",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/DeviceEmulationIdentifierViewModel",
          "description": "Идентификатор пользователя."
        }
      },
      "xml": {
        "name": "DeviceEmulationPaymentViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationPaymentViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationCouponModel": {
      "description": "Модель для создания купона.",
      "properties": {
        "couponNumber": {
          "description": "Номер купона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationCouponModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationCouponModel, Loymax.SystemApi"
    },
    "DeviceEmulationResultStateViewModel": {
      "description": "Модель итогового состояния.",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "Код ошибки.",
          "type": "string",
          "enum": [
            "Ok",
            "SystemError",
            "VersionError",
            "ParseError",
            "FormatException",
            "RequereFieldException",
            "SignatureError",
            "SignatureNotFound",
            "CertificateError",
            "CardNotFound",
            "DeviceNotFound",
            "LargePaymentAmount",
            "NotEnoughMoney",
            "CardBlocked",
            "DeviceBlocked",
            "NotUniqueOperationID",
            "OperationNotFound",
            "OperationIsConfirmed",
            "OperationIsCanceled",
            "WrongPin",
            "CashierNotFound",
            "CardHolderNotFound",
            "CardNotActivated",
            "DiscountException",
            "PurchaseNotFound",
            "DifferentCheque",
            "IncorrectOperationOrder",
            "CardExtraPayment",
            "ConfirmedPurchaseOperation",
            "PurchaseExtraPayment",
            "LimitGained",
            "PaymentException",
            "DifferentPurchase",
            "CouponsException",
            "BusinessError",
            "ApplicationDeviceGrant",
            "NotUniquePurchaseID",
            "DivisibilityError",
            "DifferentLegals",
            "UnspecifiedLoyaltyProgram",
            "Created",
            "PayTypeIsNotExist",
            "PayTypeIsArchived"
          ],
          "x-loymax-type": "Loymax.Business.ExternalSystem.XmlMessages.ErrorCode, Loymax.Business.ExternalSystem.XmlMessages",
          "x-loymax-enum-type": "ErrorCode"
        },
        "message": {
          "description": "Сообщение.",
          "type": "string"
        },
        "cashierMessage": {
          "description": "Сообщение для кассира.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationResultStateViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationResultStateViewModel, Loymax.SystemApi"
    },
    "ResultModelOfDeviceEmulationPurchaseViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceEmulationPurchaseViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationPurchaseViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationBalanceViewModel": {
      "description": "Модель баланса.",
      "properties": {
        "amount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Валюта.",
          "type": "string"
        },
        "resultStateModel": {
          "$ref": "#/definitions/DeviceEmulationResultStateViewModel",
          "description": "Модель итогового состояния."
        }
      },
      "xml": {
        "name": "DeviceEmulationBalanceViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationBalanceViewModel, Loymax.SystemApi"
    },
    "ResultModelOfDeviceEmulationBalanceViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceEmulationBalanceViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationBalanceViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationCreateCouponsFromListModel": {
      "description": "Модкль для создания купонов из списка.",
      "properties": {
        "coupons": {
          "description": "Список купонов.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationCouponModel"
          },
          "xml": {
            "name": "DeviceEmulationCouponModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DeviceEmulationCreateCouponsFromListModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationCreateCouponsFromListModel, Loymax.SystemApi"
    },
    "DeviceEmulationUpdateChequePositionModel": {
      "description": "Модель для обновления чековой позиции.",
      "required": [],
      "properties": {
        "price": {
          "description": "Цена.",
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "description": "Количество.",
          "type": "number",
          "format": "double"
        },
        "partnerDiscount": {
          "description": "Партнерская скидка.",
          "type": "number",
          "format": "double"
        },
        "partnerCashback": {
          "description": "Партнерский кешбек.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "DeviceEmulationUpdateChequePositionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationUpdateChequePositionModel, Loymax.SystemApi"
    },
    "DeviceEmulationCreateChequePositionModel": {
      "description": "Модель для создания чековой позиции.",
      "allOf": [
        {
          "$ref": "#/definitions/DeviceEmulationUpdateChequePositionModel"
        }
      ],
      "properties": {
        "goodID": {
          "description": "Идентификатор товара.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DeviceEmulationCreateChequePositionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationCreateChequePositionModel, Loymax.SystemApi"
    },
    "DeviceEmulationPositionParamViewModel": {
      "description": "Модель параметра чековой позиции.",
      "properties": {
        "parameterType": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "Decimal",
            "String"
          ],
          "x-loymax-type": "Loymax.Entities.DeviceEmulationChequePositionParamType, Loymax.Entities",
          "x-loymax-enum-type": "DeviceEmulationChequePositionParamType"
        },
        "parameterName": {
          "description": "Название.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Значение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationPositionParamViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationPositionParamViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfDeviceEmulationPositionParamViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationPositionParamViewModel"
          },
          "xml": {
            "name": "DeviceEmulationPositionParamViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationPositionParamViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationPositionParamCollectionViewModel": {
      "description": "Модель списка параметров чековой позиции.",
      "properties": {
        "params": {
          "description": "Список.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationPositionParamViewModel"
          },
          "xml": {
            "name": "DeviceEmulationPositionParamViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DeviceEmulationPositionParamCollectionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationPositionParamCollectionViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationAddBonusPaymentModel": {
      "description": "Модель добавления оплаты.",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/DeviceEmulationIdentifierViewModel",
          "description": "Идентификатор пользователя."
        },
        "amount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "pin": {
          "description": "Код подтверждения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationAddBonusPaymentModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationAddBonusPaymentModel, Loymax.SystemApi"
    },
    "ResultModelOfDeviceEmulationResultStateViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceEmulationResultStateViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationResultStateViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationCashPaymentModel": {
      "description": "Модель добавления оплаты.",
      "properties": {
        "cashAmount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "DeviceEmulationCashPaymentModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationCashPaymentModel, Loymax.SystemApi"
    },
    "DeviceEmulationThirdPartyBonusPaymentModel": {
      "description": "Модель добавления оплаты бонусами.",
      "properties": {
        "amount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "info": {
          "description": "Информация о бонусах.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationThirdPartyBonusPaymentModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationThirdPartyBonusPaymentModel, Loymax.SystemApi"
    },
    "DeviceEmulationAddOtherPaymentModel": {
      "description": "Модель для внешних способов оплатов.",
      "properties": {
        "cashAmount": {
          "description": "Сумма.",
          "type": "number",
          "format": "double"
        },
        "otherPaymentType": {
          "description": "Способ оплаты отличный от дефолтного.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationAddOtherPaymentModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.FilterModels.DeviceEmulationAddOtherPaymentModel, Loymax.SystemApi"
    },
    "DeviceEmulationCalculateResultStateViewModel": {
      "description": "Модель итогового состояния.",
      "allOf": [
        {
          "$ref": "#/definitions/DeviceEmulationResultStateViewModel"
        }
      ],
      "properties": {
        "availableAmount": {
          "description": "Сумма доступных для оплаты средств.",
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Валюта.",
          "type": "string"
        },
        "chequeMessage": {
          "description": "Сообщение на чек.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationCalculateResultStateViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationCalculateResultStateViewModel, Loymax.SystemApi"
    },
    "ResultModelOfDeviceEmulationCalculateResultStateViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceEmulationCalculateResultStateViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationCalculateResultStateViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationCashierViewModel": {
      "description": "Модель информации о кассире.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationCashierViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationCashierViewModel, Loymax.SystemApi"
    },
    "ResultModelOfDeviceEmulationCashierViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceEmulationCashierViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationCashierViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationChequeViewModel": {
      "description": "Модель итогового состояния.",
      "properties": {
        "purchaseId": {
          "description": "Идентификатор покупки.",
          "type": "integer",
          "format": "int32"
        },
        "identifier": {
          "$ref": "#/definitions/DeviceEmulationIdentifierViewModel",
          "description": "Идентификатор пользователя."
        },
        "date": {
          "description": "Дата.",
          "type": "string",
          "format": "date-time"
        },
        "merchant": {
          "description": "Магазин.",
          "type": "string"
        },
        "number": {
          "description": "Номер.",
          "type": "string"
        },
        "message": {
          "description": "Сообщение.",
          "type": "string"
        },
        "totalDiscount": {
          "description": "Итоговая скидка.",
          "type": "number",
          "format": "double"
        },
        "totalCashback": {
          "description": "Итоговый бонус.",
          "type": "number",
          "format": "double"
        },
        "totalAmount": {
          "description": "Итоговая сумма.",
          "type": "number",
          "format": "double"
        },
        "totalPayed": {
          "description": "Суммарно оплачено.",
          "type": "number",
          "format": "double"
        },
        "resultStateModel": {
          "$ref": "#/definitions/DeviceEmulationResultStateViewModel",
          "description": "Модель итогового состояния."
        },
        "positions": {
          "description": "Чековые позиции.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationChequeLine"
          },
          "xml": {
            "name": "DeviceEmulationChequeLine",
            "wrapped": true
          },
          "type": "array"
        },
        "payments": {
          "description": "Оплаты.",
          "items": {
            "$ref": "#/definitions/DeviceEmulationPaymentViewModel"
          },
          "xml": {
            "name": "DeviceEmulationPaymentViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DeviceEmulationChequeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationChequeViewModel, Loymax.SystemApi"
    },
    "DeviceEmulationChequeLine": {
      "properties": {
        "goodsName": {
          "type": "string"
        },
        "goodsItemId": {
          "type": "string"
        },
        "posId": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "cashback": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "message": {
          "type": "string"
        }
      },
      "xml": {
        "name": "DeviceEmulationChequeLine"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.DeviceEmulation.DeviceEmulationChequeLine, Loymax.Business.DeviceEmulation"
    },
    "ResultModelOfDeviceEmulationChequeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceEmulationChequeViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.DeviceEmulation.ViewModels.DeviceEmulationChequeViewModel, Loymax.SystemApi"
    },
    "DeviceTypeViewModel": {
      "description": "Представление для {Loymax.Entities.DeviceType}.",
      "properties": {
        "id": {
          "description": "Индификатор сущности.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "protocolVersion": {
          "description": "Версия протокола.",
          "type": "string",
          "enum": [
            "Version20",
            "Version22",
            "Version30",
            "Version32"
          ],
          "x-loymax-type": "Loymax.Common.XmlVersion, Loymax.Common",
          "x-loymax-enum-type": "XmlVersion"
        },
        "isArchived": {
          "description": "Архивирован.",
          "type": "boolean"
        },
        "encodingType": {
          "description": "Тип кодировки.",
          "type": "string",
          "enum": [
            "ASCII",
            "Cp866",
            "Koi8r",
            "Windows1251",
            "Unicode",
            "UTF7",
            "UTF8",
            "UTF32"
          ],
          "x-loymax-type": "Loymax.Entities.DeviceTypeValidEncodingType, Loymax.Entities",
          "x-loymax-enum-type": "DeviceTypeValidEncodingType"
        }
      },
      "xml": {
        "name": "DeviceTypeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceTypeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfDeviceTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceTypeViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Devices.DeviceTypeViewModel, Loymax.SystemApi"
    },
    "DeviceTypeFilter": {
      "description": "Фильтр типов касс.",
      "properties": {
        "searchedText": {
          "description": "Текст поиска.",
          "type": "string"
        },
        "version": {
          "description": "Версия поиска.",
          "type": "string",
          "enum": [
            "Version20",
            "Version22",
            "Version30",
            "Version32"
          ],
          "x-loymax-type": "Loymax.Common.XmlVersion, Loymax.Common",
          "x-loymax-enum-type": "XmlVersion"
        },
        "condition": {
          "description": "Состояние.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "encodingType": {
          "description": "Тип кодировки.",
          "type": "string",
          "enum": [
            "ASCII",
            "Cp866",
            "Koi8r",
            "Windows1251",
            "Unicode",
            "UTF7",
            "UTF8",
            "UTF32"
          ],
          "x-loymax-type": "Loymax.Entities.DeviceTypeValidEncodingType, Loymax.Entities",
          "x-loymax-enum-type": "DeviceTypeValidEncodingType"
        },
        "sortingIds": {
          "description": "Идентификаторы типов касс, выводимых в начале списка.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DeviceTypeFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceTypeFilter, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfDeviceTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DeviceTypeViewModel"
          },
          "xml": {
            "name": "DeviceTypeViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Devices.DeviceTypeViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Devices.DeviceTypeViewModel, Loymax.SystemApi"
    },
    "NumberTemplateViewModel": {
      "description": "ViewModel шаблона для номера.",
      "properties": {
        "id": {
          "description": "Идентификатор шаблона для генерации номеров выпусков.",
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "description": "Текст шаблона для генерации номеров выпусков .",
          "type": "string"
        },
        "emissionType": {
          "description": "Тип эмиссии.",
          "type": "string",
          "enum": [
            "CardEmission",
            "BookletEmission",
            "CouponEmission"
          ],
          "x-loymax-type": "Loymax.Entities.EmissionTypeEnum, Loymax.Entities",
          "x-loymax-enum-type": "EmissionTypeEnum"
        },
        "numberType": {
          "description": "Тип номера эмиссии (Название алгоритма вычисления контрольной цифры номера).",
          "type": "string",
          "enum": [
            "EAN13",
            "Luhn16",
            "Luhn"
          ],
          "x-loymax-type": "Loymax.Entities.EmissionNumberTypeEnum, Loymax.Entities",
          "x-loymax-enum-type": "EmissionNumberTypeEnum"
        },
        "state": {
          "description": "Состояние  шаблона для генерации номеров выпусков.",
          "type": "string",
          "enum": [
            "Normal",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Entities.EmissionTemplateState, Loymax.Entities",
          "x-loymax-enum-type": "EmissionTemplateState"
        }
      },
      "xml": {
        "name": "NumberTemplateViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.NumberTemplateViewModel, Loymax.SystemApi"
    },
    "ResultModelOfNumberTemplateViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/NumberTemplateViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Emissions.NumberTemplateViewModel, Loymax.SystemApi"
    },
    "EmissionNumberTemplateFilter": {
      "description": "Фильтр для шаблонов для генерации номеров выпусков.",
      "properties": {
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "emissionType": {
          "description": "Тип шаблона уведомлений.",
          "type": "string",
          "enum": [
            "CardEmission",
            "BookletEmission",
            "CouponEmission"
          ],
          "x-loymax-type": "Loymax.Entities.EmissionTypeEnum, Loymax.Entities",
          "x-loymax-enum-type": "EmissionTypeEnum"
        },
        "textSubStr": {
          "description": "Подстрока текстового описания шаблона.",
          "type": "string"
        },
        "showMode": {
          "description": "Режим отображения архивных шаблонов.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        }
      },
      "xml": {
        "name": "EmissionNumberTemplateFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.EmissionNumberTemplateFilter, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfNumberTemplateViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/NumberTemplateViewModel"
          },
          "xml": {
            "name": "NumberTemplateViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.NumberTemplateViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Emissions.NumberTemplateViewModel, Loymax.SystemApi"
    },
    "EventListFilter": {
      "description": "Модель фильтра для получения расчёта событий.",
      "properties": {
        "from": {
          "description": "С какого элемента брать.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько элементов брать.",
          "type": "integer",
          "format": "int32"
        },
        "calculationKey": {
          "description": "Ключ расчёта.",
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "EventListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.EventListFilter, Loymax.SystemApi"
    },
    "EventCalculationModel": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int64"
        },
        "calculationType": {
          "description": "Тип расчёта.",
          "type": "string",
          "enum": [
            "DirectDiscount",
            "CashbackDiscount",
            "LimitPayment",
            "ConfirmPurchase",
            "CancelPurchase",
            "Payment",
            "PurchaseRefund",
            "Balance",
            "IssueCard",
            "PersonActivity",
            "SendPasswordToCheque",
            "PreCalculateCashback"
          ],
          "x-loymax-type": "Loymax.Entities.OfferCalculationType, Loymax.Entities",
          "x-loymax-enum-type": "OfferCalculationType"
        },
        "offerEventType": {
          "description": "Тип события.",
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "offers": {
          "description": "Акции на расчёт.",
          "items": {
            "$ref": "#/definitions/CalculationOfferModel"
          },
          "xml": {
            "name": "CalculationOfferModel",
            "wrapped": true
          },
          "type": "array"
        },
        "positionsModel": {
          "description": "Позиции чека.",
          "items": {
            "$ref": "#/definitions/ChequePositionViewModel"
          },
          "xml": {
            "name": "ChequePositionViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "relatedEventCalculations": {
          "description": "Расчёты событий в рамках одной активности.",
          "items": {
            "$ref": "#/definitions/EventCalculationModel"
          },
          "xml": {
            "name": "EventCalculationModel",
            "wrapped": true
          },
          "type": "array"
        },
        "businessEvent": {
          "$ref": "#/definitions/BusinessActivityViewModel",
          "description": "Событие, с которым связан расчёт."
        }
      },
      "xml": {
        "name": "EventCalculationModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.EventCalculationModel, Loymax.SystemApi"
    },
    "CalculationOfferModel": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "id": {
          "description": "Идентификатор версии.",
          "type": "integer",
          "format": "int32"
        },
        "offerId": {
          "description": "Идентификатор акции.",
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "description": "Приоритет.",
          "type": "integer",
          "format": "int32"
        },
        "isSum": {
          "description": "Суммируемость.",
          "type": "boolean"
        },
        "name": {
          "description": "Наименование.",
          "type": "string"
        },
        "break": {
          "description": "Не выполнено, так как контекст пуст, или ещё чего.",
          "type": "boolean"
        },
        "loyaltyProgramId": {
          "description": "Идентификатор программы лояльности.",
          "type": "integer",
          "format": "int32"
        },
        "filters": {
          "description": "Фильтры.",
          "items": {
            "$ref": "#/definitions/FilterModel"
          },
          "xml": {
            "name": "FilterModel",
            "wrapped": true
          },
          "type": "array"
        },
        "chainGroups": {
          "description": "Группы цепочек действий.",
          "items": {
            "$ref": "#/definitions/ChainGroupModel"
          },
          "xml": {
            "name": "ChainGroupModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CalculationOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.CalculationOfferModel, Loymax.SystemApi"
    },
    "ChequePositionViewModel": {
      "description": "Модель чековой позиции по покупке.",
      "properties": {
        "gooodName": {
          "description": "Имя.",
          "type": "string"
        },
        "posId": {
          "description": "Номер позиции.",
          "type": "integer",
          "format": "int32"
        },
        "barcode": {
          "description": "Код.",
          "type": "string"
        },
        "quantity": {
          "description": "Количество.",
          "type": "number",
          "format": "double"
        },
        "amount": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Сумма."
        },
        "correction": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Коррекция."
        },
        "discounts": {
          "description": "Начисления/скидки.",
          "items": {
            "$ref": "#/definitions/PositionDiscountViewModel"
          },
          "xml": {
            "name": "PositionDiscountViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "refunds": {
          "description": "Возвраты.",
          "items": {
            "$ref": "#/definitions/PositionRefundsViewModel"
          },
          "xml": {
            "name": "PositionRefundsViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "attributes": {
          "description": "Атрибуты.",
          "items": {
            "$ref": "#/definitions/ChequePositionAttributeViewModel"
          },
          "xml": {
            "name": "ChequePositionAttributeViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ChequePositionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Purchases.ChequePositionViewModel, Loymax.SystemApi"
    },
    "FilterModel": {
      "description": "Результат фильтрации.",
      "properties": {
        "id": {
          "description": "Идентификатор фильтра.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование фильтра.",
          "type": "string"
        },
        "checkValue": {
          "description": "Значение фильтрации.",
          "type": "boolean"
        },
        "checkDetails": {
          "description": "Детали фильтрации.",
          "type": "string"
        }
      },
      "xml": {
        "name": "FilterModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.FilterModel, Loymax.SystemApi"
    },
    "ChainGroupModel": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "actionId": {
          "description": "Действие, на которое завязана цепочка.",
          "type": "integer",
          "format": "int32"
        },
        "eventId": {
          "description": "Идентификатор типа события.",
          "type": "integer",
          "format": "int32"
        },
        "eventName": {
          "description": "Наименование типа события.",
          "type": "string"
        },
        "eventType": {
          "description": "Тип события.",
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "chains": {
          "description": "Цепочки действий.",
          "items": {
            "$ref": "#/definitions/ChainModel"
          },
          "xml": {
            "name": "ChainModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ChainGroupModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.ChainGroupModel, Loymax.SystemApi"
    },
    "PositionDiscountViewModel": {
      "description": "Модель начислений/скидок по покупке.",
      "properties": {
        "type": {
          "description": "Тип скидки.",
          "type": "string",
          "enum": [
            "CalculatedCashback",
            "CalculatedDiscount",
            "PartnerDiscount",
            "PartnerCashback",
            "PositionCharge",
            "CalculatedPayment",
            "CalculatedGiftCardPayment"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Purchases.PositionDiscountType, Loymax.SystemApi",
          "x-loymax-enum-type": "PositionDiscountType"
        },
        "amount": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Сумма."
        },
        "cashAmount": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Сумма в исходной валюте (для оплат)."
        },
        "offer": {
          "$ref": "#/definitions/OfferInfoShortViewModel",
          "description": "Акция."
        }
      },
      "xml": {
        "name": "PositionDiscountViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Purchases.PositionDiscountViewModel, Loymax.SystemApi"
    },
    "PositionRefundsViewModel": {
      "description": "Модель возвратов в покупке.",
      "properties": {
        "amount": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Сумма."
        }
      },
      "xml": {
        "name": "PositionRefundsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Purchases.PositionRefundsViewModel, Loymax.SystemApi"
    },
    "ChequePositionAttributeViewModel": {
      "description": "Модель представления атрибута позиции чека.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "value": {
          "description": "Значение.",
          "type": "string"
        },
        "type": {
          "description": "Тип.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ChequePositionAttributeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Purchases.ChequePositionAttributeViewModel, Loymax.SystemApi"
    },
    "ChainModel": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование.",
          "type": "string"
        },
        "break": {
          "description": "Не выполнено, так как контекст пуст, или ещё чего.",
          "type": "boolean"
        },
        "positions": {
          "description": "Пришедшие позиции.",
          "items": {
            "$ref": "#/definitions/PositionModel"
          },
          "xml": {
            "name": "PositionModel",
            "wrapped": true
          },
          "type": "array"
        },
        "filters": {
          "description": "Фильтры.",
          "items": {
            "$ref": "#/definitions/FilterModel"
          },
          "xml": {
            "name": "FilterModel",
            "wrapped": true
          },
          "type": "array"
        },
        "actions": {
          "description": "Список действий.",
          "items": {
            "$ref": "#/definitions/ActionModel"
          },
          "xml": {
            "name": "ActionModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ChainModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.ChainModel, Loymax.SystemApi"
    },
    "PositionModel": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "id": {
          "description": "Идентификатор позиции.",
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "description": "Размер позиции.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "PositionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.PositionModel, Loymax.SystemApi"
    },
    "ActionModel": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "actionId": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "actionType": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "DirectDiscount",
            "Cashback",
            "SendMessage",
            "Charging",
            "PartnerDirectDiscount",
            "PartnerCashbackDiscount",
            "ChequeMessage",
            "CashierMessage",
            "MinPrice",
            "CorrectionDirectDiscount",
            "CouponIssue",
            "SetCouponUsed",
            "Counter",
            "EnableTriggeredMailing",
            "DisableTriggeredMailing",
            "Withdraw",
            "PersonalOfferUpdate",
            "GoodsSetDivide",
            "Payment",
            "FavoriteGoods",
            "CorrectionPayment",
            "CashbackNn",
            "PartnerCouponDiscount",
            "CashbackForWeight",
            "InitialPrice"
          ],
          "x-loymax-type": "Loymax.Entities.ActionType, Loymax.Entities",
          "x-loymax-enum-type": "ActionType"
        },
        "results": {
          "description": "Результаты.",
          "items": {
            "$ref": "#/definitions/ActionResultModel"
          },
          "xml": {
            "name": "ActionResultModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ActionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.ActionModel, Loymax.SystemApi"
    },
    "ActionResultModel": {
      "description": "Фильтр для списка счетов кассы.",
      "properties": {
        "position": {
          "$ref": "#/definitions/PositionModel",
          "description": "Позиция или её часть, если это чек."
        },
        "value": {
          "description": "Результат действия.",
          "type": "string"
        },
        "resultUid": {
          "description": "Идентификатор результат.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "metavariables": {
          "description": "Метапеременные результата.",
          "items": {
            "$ref": "#/definitions/MetavariableModel"
          },
          "xml": {
            "name": "MetavariableModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ActionResultModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.ActionResultModel, Loymax.SystemApi"
    },
    "MetavariableModel": {
      "description": "Метапеременная.",
      "properties": {
        "type": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "Currency",
            "Text",
            "ActionResultType",
            "Coupons",
            "Math",
            "LimitDetails"
          ],
          "x-loymax-type": "Loymax.Business.Offers.Interfaces.Log.MetavariableTypes, Loymax.Business.Offers.Interfaces",
          "x-loymax-enum-type": "MetavariableTypes"
        },
        "key": {
          "description": "Ключ.",
          "type": "string"
        },
        "value": {
          "description": "Значение.",
          "type": "string"
        },
        "showValue": {
          "description": "Отображаемое значение.",
          "type": "string"
        },
        "title": {
          "description": "Заголовок.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MetavariableModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.EventCalculation.MetavariableModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfEventCalculationModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/EventCalculationModel"
          },
          "xml": {
            "name": "EventCalculationModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.EventCalculation.EventCalculationModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.EventCalculation.EventCalculationModel, Loymax.SystemApi"
    },
    "ResultModelOfEventCalculationModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/EventCalculationModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.EventCalculation.EventCalculationModel, Loymax.SystemApi"
    },
    "ExtensionFilter": {
      "description": "Фильтр плагинов.",
      "properties": {
        "nameSearchedText": {
          "description": "Текст поиска в имени.",
          "type": "string"
        },
        "classNameSearchedText": {
          "description": "Текст поиска в имени класса.",
          "type": "string"
        },
        "isDisabled": {
          "description": "Состояние.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ExtensionFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Extensions.ExtensionFilter, Loymax.SystemApi"
    },
    "ExtensionViewModel": {
      "description": "Модель представления для плагина.",
      "properties": {
        "id": {
          "description": "Идентификатор плагина.",
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "description": "Имя плагина.",
          "type": "string"
        },
        "name": {
          "description": "Имя класса плагина.",
          "type": "string"
        },
        "version": {
          "description": "Версия плагина.",
          "type": "string"
        },
        "isDisabled": {
          "description": "Включен плагин или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ExtensionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Extensions.ExtensionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfExtensionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ExtensionViewModel"
          },
          "xml": {
            "name": "ExtensionViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Extensions.ExtensionViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Extensions.ExtensionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfExtensionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ExtensionViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Extensions.ExtensionViewModel, Loymax.SystemApi"
    },
    "ExtensionConfigurationFilter": {
      "description": "Фильтр конфигураций плагинов.",
      "properties": {
        "searchedKey": {
          "description": "Ключ.",
          "type": "string"
        },
        "searchedValue": {
          "description": "Значение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ExtensionConfigurationFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Extensions.ExtensionConfigurationFilter, Loymax.SystemApi"
    },
    "ExtensionConfigurationViewModel": {
      "description": "Модель представления конфигурации плагина.",
      "properties": {
        "id": {
          "description": "ID.",
          "type": "integer",
          "format": "int32"
        },
        "extensionId": {
          "description": "Идентификатор плагина.",
          "type": "integer",
          "format": "int32"
        },
        "key": {
          "description": "Название параметра.",
          "type": "string"
        },
        "value": {
          "description": "Значение параметра.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ExtensionConfigurationViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Extensions.ExtensionConfigurationViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfExtensionConfigurationViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ExtensionConfigurationViewModel"
          },
          "xml": {
            "name": "ExtensionConfigurationViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Extensions.ExtensionConfigurationViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Extensions.ExtensionConfigurationViewModel, Loymax.SystemApi"
    },
    "ResultModelOfExtensionConfigurationViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ExtensionConfigurationViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Extensions.ExtensionConfigurationViewModel, Loymax.SystemApi"
    },
    "FavoriteGoodsSetShortViewModel": {
      "description": "ViewModel для любимых товаров.",
      "required": [],
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "fromDate": {
          "description": "FromDate.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "ToDate.",
          "type": "string",
          "format": "date-time"
        },
        "goodsGroupId": {
          "description": "GoodsGroupId.",
          "type": "integer",
          "format": "int32"
        },
        "goodsGroupName": {
          "description": "GoodsGroupName.",
          "type": "string"
        },
        "maxGoodsCount": {
          "description": "MaxGoodsCount.",
          "type": "integer",
          "format": "int32"
        },
        "personalOfferName": {
          "description": "Имя персонального предложения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "FavoriteGoodsSetShortViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsSetShortViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfFavoriteGoodsSetShortViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/FavoriteGoodsSetShortViewModel"
          },
          "xml": {
            "name": "FavoriteGoodsSetShortViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsSetShortViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsSetShortViewModel, Loymax.Common.WebApi"
    },
    "FavoriteGoodsPositionViewModel": {
      "description": "FavoriteGoodsPositionViewModel.",
      "properties": {
        "position": {
          "description": "Position.",
          "type": "integer",
          "format": "int32"
        },
        "allowChange": {
          "description": "AllowChange.",
          "type": "boolean"
        },
        "good": {
          "$ref": "#/definitions/FavoriteGoodsViewModel",
          "description": "Good."
        },
        "lastChanged": {
          "description": "Дата последнего изменения.",
          "type": "string",
          "format": "date-time"
        },
        "positionType": {
          "description": "Тип позиции.",
          "type": "string",
          "enum": [
            "Normal",
            "Birthday",
            "Action"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.Goods.Goods.PositionType, Loymax.Domain.Contract",
          "x-loymax-enum-type": "PositionType"
        }
      },
      "xml": {
        "name": "FavoriteGoodsPositionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsPositionViewModel, Loymax.Common.WebApi"
    },
    "FavoriteGoodsViewModel": {
      "description": "GoodViewModel.",
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "codeGood": {
          "description": "CodeGood.",
          "type": "string"
        },
        "barCode": {
          "description": "BarCode.",
          "type": "string"
        }
      },
      "xml": {
        "name": "FavoriteGoodsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsViewModel, Loymax.Common.WebApi"
    },
    "FavoriteGoodsSetViewModel": {
      "description": "ViewModel для любимых товаров.",
      "allOf": [
        {
          "$ref": "#/definitions/FavoriteGoodsSetShortViewModel"
        }
      ],
      "properties": {
        "goods": {
          "description": "Goods.",
          "items": {
            "$ref": "#/definitions/FavoriteGoodsPositionViewModel"
          },
          "xml": {
            "name": "FavoriteGoodsPositionViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsPositionViewModel[], Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "FavoriteGoodsSetViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsSetViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfFavoriteGoodsSetViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/FavoriteGoodsSetViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.WebApi.Models.FavoriteGoods.FavoriteGoodsSetViewModel, Loymax.Common.WebApi"
    },
    "FileEdit": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "guid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "fileUri": {
          "type": "string"
        }
      },
      "xml": {
        "name": "FileEdit"
      },
      "type": "object",
      "x-loymax-type": "Loymax.FileStorage.Contract.Model.FileEdit, Loymax.FileStorage.Contract"
    },
    "ResultModelOfPagedViewModelOfFileEdit": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/FileEdit"
          },
          "xml": {
            "name": "FileEdit",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.FileStorage.Contract.Model.FileEdit, Loymax.FileStorage.Contract"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.FileStorage.Contract.Model.FileEdit, Loymax.FileStorage.Contract"
    },
    "ResultModelOfFileEdit": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/FileEdit",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.FileStorage.Contract.Model.FileEdit, Loymax.FileStorage.Contract"
    },
    "GetFiltersTreeModel": {
      "description": "Модель для получения дерева доступных фильтров.",
      "properties": {
        "offerId": {
          "description": "Id акции.",
          "type": "integer",
          "format": "int32"
        },
        "chainId": {
          "description": "Id цепочки.",
          "type": "integer",
          "format": "int32"
        },
        "filterDestinationType": {
          "description": "Для чего нужно получить дерево фильтров.",
          "type": "string",
          "enum": [
            "TargetGroup",
            "Offer",
            "OfferAction",
            "FilterPurchase",
            "FilterPosition"
          ],
          "x-loymax-type": "Loymax.Business.Filters.FilterDestinationType, Loymax.Business.Filters",
          "x-loymax-enum-type": "FilterDestinationType"
        },
        "eventType": {
          "description": "Тип события.",
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "exclusionType": {
          "description": "Тип события, исходя из которого нужно отфильтровать результат.",
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        }
      },
      "xml": {
        "name": "GetFiltersTreeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Controllers.GetFiltersTreeModel, Loymax.SystemApi"
    },
    "FilterTreeModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "filterType": {
          "type": "string"
        },
        "filterTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "children": {
          "items": {
            "$ref": "#/definitions/FilterTreeModel"
          },
          "xml": {
            "name": "FilterTreeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "FilterTreeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.FilterTreeModel, Loymax.WebSites.Common"
    },
    "ResultModelOfListOfFilterTreeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/FilterTreeModel"
          },
          "xml": {
            "name": "FilterTreeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.FilterTreeModel, Loymax.WebSites.Common"
    },
    "FilterTypeFilter": {
      "description": "Фильтр для поиска типов фильтров.",
      "properties": {
        "substring": {
          "description": "Подстрока для поиска.",
          "type": "string"
        },
        "showMode": {
          "description": "Режим отображения архивных типов фильтров.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        }
      },
      "xml": {
        "name": "FilterTypeFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.FilterTypeFilter, Loymax.SystemApi"
    },
    "FilterTypeModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "FilterTypeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.FilterTypeModel, Loymax.WebSites.Common"
    },
    "ResultModelOfPagedViewModelOfFilterTypeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/FilterTypeModel"
          },
          "xml": {
            "name": "FilterTypeModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.Models.FilterTypeModel, Loymax.WebSites.Common"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.Models.FilterTypeModel, Loymax.WebSites.Common"
    },
    "FixedAnswerViewModel": {
      "description": "Модель представления для {Loymax.Domain.Contract.Model.Question.FixedAnswers.IFixedAnswer}.",
      "properties": {
        "id": {
          "description": "Id фиксированнаго ответа.",
          "type": "integer",
          "format": "int32"
        },
        "questionId": {
          "description": "Id вопроса.",
          "type": "integer",
          "format": "int32"
        },
        "isCustom": {
          "description": "Пользовательский ответ.",
          "type": "boolean"
        },
        "order": {
          "description": "Порядок.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Значение.",
          "type": "string"
        },
        "canDelete": {
          "description": "Можно ли удалить.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "FixedAnswerViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Questionnaire.FixedAnswer.FixedAnswerViewModel, Loymax.SystemApi"
    },
    "ResultModelOfFixedAnswerViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/FixedAnswerViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Questionnaire.FixedAnswer.FixedAnswerViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfFixedAnswerViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/FixedAnswerViewModel"
          },
          "xml": {
            "name": "FixedAnswerViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Questionnaire.FixedAnswer.FixedAnswerViewModel, Loymax.SystemApi"
    },
    "GoodsCatalogFilter": {
      "description": "Фильтр для каталога товаров.",
      "properties": {
        "searchedText": {
          "description": "Текст, используемый при фильтрации.",
          "type": "string"
        },
        "searchParameter": {
          "description": "Параметр, по которому выполняется поиск.",
          "type": "string",
          "enum": [
            "Name",
            "ItemId",
            "BarCode"
          ],
          "x-loymax-type": "Loymax.Entities.GoodsCatalogSearchParameter, Loymax.Entities",
          "x-loymax-enum-type": "GoodsCatalogSearchParameter"
        }
      },
      "xml": {
        "name": "GoodsCatalogFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.GoodsCatalog.GoodsCatalogFilter, Loymax.Common.WebApi"
    },
    "GoodsCatalogBaseViewModel": {
      "description": "View модель для элемента каталога товаров.",
      "required": [],
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "goodsCode": {
          "description": "Код товара.",
          "type": "string"
        },
        "parentID": {
          "description": "Id родительского каталога.",
          "type": "integer",
          "format": "int32"
        },
        "isEnabled": {
          "description": "Включено или нет.",
          "type": "boolean"
        },
        "checkState": {
          "description": "Состояние отметки.",
          "type": "string",
          "enum": [
            "Unchecked",
            "Indeterminate",
            "Checked"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.Goods.CheckState, Loymax.Domain.Contract",
          "x-loymax-enum-type": "CheckState"
        }
      },
      "xml": {
        "name": "GoodsCatalogBaseViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.GoodsCatalog.GoodsCatalogBaseViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/GoodsCatalogBaseViewModel"
          },
          "xml": {
            "name": "GoodsCatalogBaseViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.GoodsCatalog.GoodsCatalogBaseViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.GoodsCatalog.GoodsCatalogBaseViewModel, Loymax.Common.WebApi"
    },
    "GoodsCatalogLeafViewModel": {
      "description": "View-модель для листового узла каталога товаров.",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsCatalogBaseViewModel"
        }
      ],
      "properties": {
        "attributeValues": {
          "description": "Список значений атрибутов.",
          "items": {
            "$ref": "#/definitions/GoodsAttributeValueViewModel"
          },
          "xml": {
            "name": "GoodsAttributeValueViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "loadDate": {
          "description": "Дата загрузки.",
          "type": "string",
          "format": "date-time"
        },
        "barCodes": {
          "description": "Список штрих-кодов.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "description": "Путь элемента в каталоге товаров.",
          "type": "string"
        }
      },
      "xml": {
        "name": "GoodsCatalogLeafViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.GoodsCatalog.GoodsCatalogLeafViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfGoodsCatalogLeafViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/GoodsCatalogLeafViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.WebApi.Models.GoodsCatalog.GoodsCatalogLeafViewModel, Loymax.Common.WebApi"
    },
    "GoodsGroupSearchFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "creatorIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "partnerIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "archivedShowMode": {
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "GoodsGroupSearchFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Entities.GoodsGroupSearchFilter, Loymax.Entities"
    },
    "ResultModelOfPagedViewModelOfGoodsGroupViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/GoodsGroupViewModel"
          },
          "xml": {
            "name": "GoodsGroupViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Goods.GoodsGroupViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Goods.GoodsGroupViewModel, Loymax.SystemApi"
    },
    "GoodsGroupModel": {
      "description": "Модель группы товаров.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "partnerId": {
          "description": "Id партнера.",
          "type": "integer",
          "format": "int32"
        },
        "externalId": {
          "description": "Внешний идентификатор группы.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "GoodsGroupModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Goods.GoodsGroupModel, Loymax.SystemApi"
    },
    "ResultModelOfGoodsGroupViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/GoodsGroupViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Goods.GoodsGroupViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfCreatorModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CreatorModel"
          },
          "xml": {
            "name": "CreatorModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.Models.CreatorModel, Loymax.WebSites.Common"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.Models.CreatorModel, Loymax.WebSites.Common"
    },
    "GoodsGroupDto": {
      "description": "Группа товаров.",
      "properties": {
        "id": {
          "description": "Идентификатор группы товаров.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Название группы товаров.",
          "type": "string"
        },
        "partnerId": {
          "description": "Идентификатор партнера.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "isFixed": {
          "description": "Фиксирована ли группа товаров.",
          "type": "boolean"
        },
        "includingSets": {
          "description": "Включающие наборы.",
          "items": {
            "$ref": "#/definitions/GoodsSetDto"
          },
          "xml": {
            "name": "GoodsSetDto",
            "wrapped": true
          },
          "type": "array"
        },
        "excludingSets": {
          "description": "Исключающие наборы.",
          "items": {
            "$ref": "#/definitions/GoodsSetDto"
          },
          "xml": {
            "name": "GoodsSetDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "GoodsGroupDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.GoodsGroupDto, Loymax.ImportExport.Dto"
    },
    "GoodsSetDto": {
      "description": "Набор товаров.",
      "properties": {
        "name": {
          "description": "Название набора товаров.",
          "type": "string"
        },
        "catalogItems": {
          "description": "Элементы каталога.",
          "items": {
            "$ref": "#/definitions/ItemGroupDto"
          },
          "xml": {
            "name": "ItemGroupDto",
            "wrapped": true
          },
          "type": "array"
        },
        "filters": {
          "description": "Фильтры по атрибутам.",
          "items": {
            "$ref": "#/definitions/GoodsFilterDto"
          },
          "xml": {
            "name": "GoodsFilterDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "GoodsSetDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.GoodsSetDto, Loymax.ImportExport.Dto"
    },
    "XmlProtocolMessage": {
      "description": "Базовый класс для запросов на импорт/экспорт.",
      "required": [],
      "properties": {
        "version": {
          "description": "Версия протокола.",
          "type": "string",
          "enum": [
            "Version10",
            "Version20"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.ProtocolVersion, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ProtocolVersion"
        }
      },
      "xml": {
        "name": "XmlProtocolMessage"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.XmlProtocolMessage, Loymax.ImportExport.Dto"
    },
    "ItemGroupDto": {
      "description": "Элементы, сгруппированные по каталогу.",
      "properties": {
        "catalogId": {
          "description": "Идентификатор каталога.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "items": {
          "description": "Элементы каталога.",
          "items": {
            "$ref": "#/definitions/ItemDto"
          },
          "xml": {
            "name": "ItemDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ItemGroupDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.ItemGroupDto, Loymax.ImportExport.Dto"
    },
    "GoodsFilterDto": {
      "description": "Фильтр по атрибутам.",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/AttributeDto",
          "description": "Атрибут."
        },
        "operator": {
          "description": "Оператор сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "values": {
          "description": "Значения атрибута.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "GoodsFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.GoodsFilterDto, Loymax.ImportExport.Dto"
    },
    "ItemDto": {
      "description": "Элемент каталога.",
      "properties": {
        "type": {
          "description": "Тип элемента.",
          "type": "string",
          "enum": [
            "Id"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.ItemType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ItemType"
        },
        "value": {
          "description": "Значение элемента.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ItemDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.ItemDto, Loymax.ImportExport.Dto"
    },
    "AttributeDto": {
      "description": "Фильтр по атрибуту.",
      "properties": {
        "name": {
          "description": "Название атрибута.",
          "type": "string"
        }
      },
      "xml": {
        "name": "AttributeDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.AttributeDto, Loymax.ImportExport.Dto"
    },
    "GoodsGroupsImportRequest": {
      "description": "Запрос на импорт групп товаров.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/XmlProtocolMessage"
        }
      ],
      "properties": {
        "goodsGroups": {
          "description": "Группы товаров.",
          "items": {
            "$ref": "#/definitions/GoodsGroupDto"
          },
          "xml": {
            "name": "GoodsGroupDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "GoodsGroupsImportRequest"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.Messages.GoodsGroupsImportRequest, Loymax.ImportExport.Dto"
    },
    "GoodsGroupsImportModel": {
      "description": "Модель импортируемых групп товаров.",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsGroupsImportRequest"
        }
      ],
      "properties": {},
      "xml": {
        "name": "GoodsGroupsImportModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Goods.GoodsGroupsImportModel, Loymax.SystemApi"
    },
    "GoodsGroupsImportResponse": {
      "description": "Результат импорта групп товаров.",
      "properties": {
        "inserted": {
          "description": "Количество созданных групп товаров.",
          "type": "integer",
          "format": "int32"
        },
        "rewritten": {
          "description": "Количество перезаписанных групп товаров.",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "description": "Ошибки при импорте групп товаров.",
          "items": {
            "$ref": "#/definitions/GoodsGroupsImportError"
          },
          "xml": {
            "name": "GoodsGroupsImportError",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "GoodsGroupsImportResponse"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.Messages.GoodsGroupsImportResponse, Loymax.ImportExport.Dto"
    },
    "GoodsGroupsImportError": {
      "description": "Ошибка при импорте групп товаров.",
      "properties": {
        "goodsGroupId": {
          "description": "Идентификатор группы товаров.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "errorCode": {
          "description": "Код ошибки.",
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "description": "Описание ошибки.",
          "type": "string"
        }
      },
      "xml": {
        "name": "GoodsGroupsImportError"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.Messages.GoodsGroupsImportError, Loymax.ImportExport.Dto"
    },
    "ResultModelOfGoodsGroupsImportResponse": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/GoodsGroupsImportResponse",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.ImportExport.Dto.GoodsGroups.Messages.GoodsGroupsImportResponse, Loymax.ImportExport.Dto"
    },
    "GoodsGroupsExportResponse": {
      "description": "Результат экспорта групп товаров.",
      "allOf": [
        {
          "$ref": "#/definitions/XmlProtocolMessage"
        }
      ],
      "properties": {
        "goodsGroups": {
          "description": "Группы товаров.",
          "items": {
            "$ref": "#/definitions/GoodsGroupDto"
          },
          "xml": {
            "name": "GoodsGroupDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "GoodsGroupsExportResponse"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.GoodsGroups.Messages.GoodsGroupsExportResponse, Loymax.ImportExport.Dto"
    },
    "GoodsSetViewModel": {
      "description": "Модель набора группы товаров.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "type": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "Exclusive",
            "Inclusive"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.Goods.GoodsSetType, Loymax.Domain.Contract",
          "x-loymax-enum-type": "GoodsSetType"
        },
        "isArchived": {
          "description": "Признак помещения в архив.",
          "type": "boolean"
        },
        "goodsCount": {
          "description": "Количество товаров в наборе.",
          "type": "integer",
          "format": "int32"
        },
        "catalogFilterGoodsCount": {
          "description": "Количество выбранных товаров каталога.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GoodsSetViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Goods.GoodsSetViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfGoodsSetViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/GoodsSetViewModel"
          },
          "xml": {
            "name": "GoodsSetViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Goods.GoodsSetViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Goods.GoodsSetViewModel, Loymax.SystemApi"
    },
    "GoodsSetModel": {
      "description": "Модель набора товаров.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "type": {
          "description": "Тип набора.",
          "type": "string",
          "enum": [
            "Exclusive",
            "Inclusive"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.Goods.GoodsSetType, Loymax.Domain.Contract",
          "x-loymax-enum-type": "GoodsSetType"
        }
      },
      "xml": {
        "name": "GoodsSetModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Goods.GoodsSetModel, Loymax.SystemApi"
    },
    "GoodsSetAttributeFilterItemViewModel": {
      "description": "Модель фильтра по атрибутам набора группы товаров.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "goodsCount": {
          "description": "Количество товаров в элементе.",
          "type": "integer",
          "format": "int32"
        },
        "filterType": {
          "description": "Тип фильтрации.",
          "type": "string",
          "enum": [
            "InList"
          ],
          "x-loymax-type": "Loymax.Entities.GoodsGroupFilterLineItemAttributeType, Loymax.Entities",
          "x-loymax-enum-type": "GoodsGroupFilterLineItemAttributeType"
        },
        "attribute": {
          "$ref": "#/definitions/CatalogAttributeViewModel",
          "description": "Атрибут."
        },
        "values": {
          "description": "Значения.",
          "items": {
            "$ref": "#/definitions/GoodsAttributeValueViewModel"
          },
          "xml": {
            "name": "GoodsAttributeValueViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "valuesString": {
          "description": "Строка значений.",
          "readOnly": true,
          "type": "string"
        }
      },
      "xml": {
        "name": "GoodsSetAttributeFilterItemViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Goods.GoodsSetAttributeFilterItemViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfGoodsSetAttributeFilterItemViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/GoodsSetAttributeFilterItemViewModel"
          },
          "xml": {
            "name": "GoodsSetAttributeFilterItemViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Goods.GoodsSetAttributeFilterItemViewModel, Loymax.SystemApi"
    },
    "ResultModelOfGoodsSetAttributeFilterItemViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/GoodsSetAttributeFilterItemViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Goods.GoodsSetAttributeFilterItemViewModel, Loymax.SystemApi"
    },
    "HistoryFilter": {
      "description": "Параметры получения списка истории.",
      "properties": {
        "fromDate": {
          "description": "Дата с которой необходимо вывести историю.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "Дата до которой необходимо вывести историю.",
          "type": "string",
          "format": "date-time"
        },
        "cardId": {
          "description": "ID карты. Если указан, то будет получена история только по этой карте.",
          "type": "integer",
          "format": "int32"
        },
        "from": {
          "description": "Начиная с какого элемента необходимо выводить.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Кол-во элементов для вывода.",
          "type": "integer",
          "format": "int32"
        },
        "historyItemType": {
          "description": "Тип события в истории {Loymax.Mobile.Contract.Models.History.HistoryFilter.HistoryItemType}.",
          "type": "string",
          "enum": [
            "All",
            "Purchase",
            "RewardData",
            "WithdrawData"
          ],
          "x-loymax-type": "Loymax.History.Contract.Types.HistoryItemType, Loymax.History.Contract",
          "x-loymax-enum-type": "HistoryItemType"
        },
        "chequeNumber": {
          "description": "Номер чека.",
          "type": "string"
        }
      },
      "xml": {
        "name": "HistoryFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.History.HistoryFilter, Loymax.Mobile.Contract"
    },
    "HistoryListModel": {
      "description": "ViewModel списка исторических записей.",
      "properties": {
        "allCount": {
          "description": "Всего записей.",
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "description": "Строки.",
          "items": {
            "$ref": "#/definitions/HistoryItemModel"
          },
          "xml": {
            "name": "HistoryItemModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "HistoryListModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.HistoryListModel, Loymax.History.Mobile.Contract"
    },
    "HistoryItemModel": {
      "description": "ViewModel исторической записи.",
      "properties": {
        "id": {
          "description": "Уникальный идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "dateTime": {
          "description": "Дата/время события.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Тип события.",
          "type": "string"
        },
        "userId": {
          "description": "Идентификатор пользователя, к которому относится событие.",
          "type": "integer",
          "format": "int32"
        },
        "identity": {
          "description": "Дополнительные данные, позволяющие идентифицировать событие (номер карты, email итд).",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationDataModel",
          "description": "Место события."
        },
        "partnerId": {
          "description": "Идентификатор партнера.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "brandId": {
          "description": "Идентификатор брэнда.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "brand": {
          "$ref": "#/definitions/BrandHistoryViewModel",
          "description": "Идентификатор брэнда."
        },
        "data": {
          "$ref": "#/definitions/HistoryDataModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "HistoryItemModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.HistoryItemModel, Loymax.History.Mobile.Contract"
    },
    "BrandHistoryViewModel": {
      "description": "Модель представления для бренда.",
      "properties": {
        "externalId": {
          "description": "Идентификатор.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Имя бренда.",
          "type": "string"
        },
        "images": {
          "description": "Изображения.",
          "items": {
            "$ref": "#/definitions/ImageViewModel"
          },
          "xml": {
            "name": "ImageViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "BrandHistoryViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.BrandHistoryViewModel, Loymax.History.Mobile.Contract"
    },
    "HistoryDataModel": {
      "description": "Данные в исторической записи.",
      "required": [],
      "properties": {
        "amount": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Сумма."
        }
      },
      "xml": {
        "name": "HistoryDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.HistoryDataModel, Loymax.History.Mobile.Contract"
    },
    "ResultModelOfHistoryListModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/HistoryListModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.History.Mobile.Contract.HistoryListModel, Loymax.History.Mobile.Contract"
    },
    "HistoryAuditFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "cardNumber": {
          "type": "string"
        },
        "auditTypes": {
          "items": {
            "type": "string",
            "enum": [
              "LoginSuccess",
              "LoginWrongPassword",
              "LoginBlock",
              "CardBlock",
              "CardUnBlock",
              "ChangePhone",
              "RegistrationAcceptOffer",
              "RegistrationPerson",
              "AddUserAction",
              "FinishUserAction",
              "CardActivated",
              "RegistrationAnswerQuestions",
              "CardSetPhone",
              "Answer",
              "RemoveAccount",
              "AddAccount",
              "CardLink",
              "CardUnLink",
              "ChangeEmail",
              "ResetPassword",
              "Mailing",
              "TargetGroup",
              "Offer",
              "CardDelete",
              "CardRecover",
              "Authentication",
              "Filters",
              "PaymentNotEnoughMoney",
              "PaymentCardBlocked",
              "CardIssuance",
              "ExternalCardReplacement",
              "CardPaymentBlock",
              "CardPaymentUnBlock",
              "RunCalculation",
              "CardReplace",
              "ChangePassword",
              "AccountBlock",
              "AccountUnBlock",
              "SetReferrer",
              "AddReferral",
              "ModificationStatusSubscriptions",
              "ConfirmPurchase",
              "CancelPurchase",
              "RegistrationAcceptPersonalDataProcessing",
              "MobileAppInstalled",
              "PrivateClubs",
              "IdentifierBlock",
              "IdentifierUnBlock",
              "CardCategoryChanged",
              "ManualStatusChange",
              "MeatryadManualStatusChange",
              "Deregistration"
            ],
            "x-loymax-type": "Loymax.Entities.AuditType, Loymax.Entities",
            "x-loymax-enum-type": "AuditType"
          },
          "xml": {
            "name": "AuditType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "AuditType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<AuditType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<AuditType>"
        },
        "personId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "HistoryAuditFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Entities.Audits.HistoryAuditFilter, Loymax.Entities"
    },
    "HistoryAuditViewModel": {
      "description": "View model аудита.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Владелец."
        },
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        },
        "auditType": {
          "description": "Тип аудита.",
          "type": "string",
          "enum": [
            "LoginSuccess",
            "LoginWrongPassword",
            "LoginBlock",
            "CardBlock",
            "CardUnBlock",
            "ChangePhone",
            "RegistrationAcceptOffer",
            "RegistrationPerson",
            "AddUserAction",
            "FinishUserAction",
            "CardActivated",
            "RegistrationAnswerQuestions",
            "CardSetPhone",
            "Answer",
            "RemoveAccount",
            "AddAccount",
            "CardLink",
            "CardUnLink",
            "ChangeEmail",
            "ResetPassword",
            "Mailing",
            "TargetGroup",
            "Offer",
            "CardDelete",
            "CardRecover",
            "Authentication",
            "Filters",
            "PaymentNotEnoughMoney",
            "PaymentCardBlocked",
            "CardIssuance",
            "ExternalCardReplacement",
            "CardPaymentBlock",
            "CardPaymentUnBlock",
            "RunCalculation",
            "CardReplace",
            "ChangePassword",
            "AccountBlock",
            "AccountUnBlock",
            "SetReferrer",
            "AddReferral",
            "ModificationStatusSubscriptions",
            "ConfirmPurchase",
            "CancelPurchase",
            "RegistrationAcceptPersonalDataProcessing",
            "MobileAppInstalled",
            "PrivateClubs",
            "IdentifierBlock",
            "IdentifierUnBlock",
            "CardCategoryChanged",
            "ManualStatusChange",
            "MeatryadManualStatusChange",
            "Deregistration"
          ],
          "x-loymax-type": "Loymax.Entities.AuditType, Loymax.Entities",
          "x-loymax-enum-type": "AuditType"
        },
        "additionalInfos": {
          "description": "Дополнительная информация.",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfStringAndString"
          },
          "xml": {
            "name": "KeyValuePair`2",
            "wrapped": true
          },
          "type": "array"
        },
        "author": {
          "$ref": "#/definitions/CreatorModel",
          "description": "Автор."
        }
      },
      "xml": {
        "name": "HistoryAuditViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.HistoryAuditViewModel, Loymax.Common.WebApi"
    },
    "KeyValuePairOfStringAndString": {
      "properties": {
        "key": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      },
      "xml": {
        "name": "KeyValuePair`2"
      },
      "type": "object"
    },
    "ResultModelOfPagedViewModelOfHistoryAuditViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/HistoryAuditViewModel"
          },
          "xml": {
            "name": "HistoryAuditViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.HistoryAuditViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.HistoryAuditViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfHistoryAuditViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/HistoryAuditViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.WebApi.Models.HistoryAuditViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfFileViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/FileViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Files.FileViewModel, Loymax.SystemApi"
    },
    "ResultModelOfGuid": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Guid, mscorlib"
    },
    "LegalViewModel": {
      "description": "Модель юр.лица.",
      "properties": {
        "id": {
          "description": "Идентификатор юр.лица.",
          "type": "integer",
          "format": "int32"
        },
        "partnerId": {
          "description": "Идентификатор партнера.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название юр. лица.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Удалено ли юридическое лицо.",
          "type": "boolean"
        },
        "deviceId": {
          "description": "Id дебетовой кассы юр. лица.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "LegalViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.LegalViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfListOfLegalViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LegalViewModel"
          },
          "xml": {
            "name": "LegalViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.WebApi.Models.LegalViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfLifeTimeDefinitionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LifeTimeDefinitionViewModel"
          },
          "xml": {
            "name": "LifeTimeDefinitionViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Payments.LifeTimeDefinitionViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Payments.LifeTimeDefinitionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfLifeTimeDefinitionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/LifeTimeDefinitionViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Payments.LifeTimeDefinitionViewModel, Loymax.SystemApi"
    },
    "LimitRuleModel": {
      "description": "ViewModel правила лимита.",
      "properties": {
        "id": {
          "description": "Идентификатор правила.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Имя правила.",
          "type": "string"
        },
        "limitType": {
          "$ref": "#/definitions/LimitTypeModel",
          "description": "Тип лимита."
        },
        "period": {
          "description": "Период ограничения.",
          "type": "string",
          "enum": [
            "Once",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Unlimited"
          ],
          "x-loymax-type": "Loymax.Limits.Abstract.LimitPeriod, Loymax.Limits",
          "x-loymax-enum-type": "LimitPeriod"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyBaseModel",
          "description": "Валюта."
        },
        "cardId": {
          "description": "Идентификатор карты.",
          "type": "integer",
          "format": "int32"
        },
        "device": {
          "$ref": "#/definitions/DeviceBaseViewModel",
          "description": "Информация о кассе."
        },
        "blockTimeInSeconds": {
          "description": "Время блокировки при превышении лимита.",
          "type": "integer",
          "format": "int32"
        },
        "timeModel": {
          "$ref": "#/definitions/TimeModel",
          "description": "Модель для времени блокировки."
        },
        "limitBorders": {
          "description": "Значение лимита.",
          "items": {
            "$ref": "#/definitions/LimitBorderModel"
          },
          "xml": {
            "name": "LimitBorderModel",
            "wrapped": true
          },
          "type": "array"
        },
        "phone": {
          "description": "Номер телефона  {Loymax.Limits.Implementation.OtherLimits.Rules.LimitSmsRule.Phone}.",
          "type": "string"
        },
        "userId": {
          "description": "Идентификатор пользователя {Loymax.Limits.Implementation.OperationsWithCardLimits.Rules.LimitGetCardInfoRule.PersonId}.",
          "type": "integer",
          "format": "int32"
        },
        "isArchived": {
          "description": "Заархивировано или нет.",
          "type": "boolean"
        },
        "apiMethodName": {
          "description": "Название метода API.",
          "type": "string"
        }
      },
      "xml": {
        "name": "LimitRuleModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.LimitRuleModel, Loymax.SystemApi"
    },
    "LimitTypeModel": {
      "description": "ViewModel типа лимита.",
      "properties": {
        "typeName": {
          "description": "Название типа.",
          "type": "string"
        },
        "title": {
          "description": "Описание.",
          "type": "string"
        },
        "requireCurrency": {
          "description": "Требует ли этот тип лимита указания валюты при настройке.",
          "type": "boolean"
        },
        "canBeSettedPeriod": {
          "description": "Может ли этот на лимит быть настроен период.",
          "type": "boolean"
        },
        "canBeSettedOnCard": {
          "description": "Может ли этот лимит быть настроен на конкретную карту.",
          "type": "boolean"
        },
        "canBeSettedOnDevice": {
          "description": "Может ли этот лимит быть настроен на конкретную кассу.",
          "type": "boolean"
        },
        "canBeSettedOnPhone": {
          "description": "Может ли этот лимит быть настроен на конкретный телефон.",
          "type": "boolean"
        },
        "canBeSettedOnUser": {
          "description": "Может ли этот лимит быть настроен на конкретного пользователя.",
          "type": "boolean"
        },
        "canWorkWithCard": {
          "description": "Зависит ли этот лимит от карты пользователя.",
          "type": "boolean"
        },
        "canWorkWithIdentifiers": {
          "description": "Зависит ли этот лимит от идентификаторов пользователя.",
          "type": "boolean"
        },
        "canWorkWithApiMethod": {
          "description": "Зависит от наименования аpi метода.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "LimitTypeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.LimitTypeModel, Loymax.SystemApi"
    },
    "TimeModel": {
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "unit": {
          "type": "string",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "x-loymax-type": "Loymax.Entities.TimeUnitsLimit, Loymax.Entities",
          "x-loymax-enum-type": "TimeUnitsLimit"
        }
      },
      "xml": {
        "name": "TimeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Entities.TimeModel, Loymax.Entities"
    },
    "LimitBorderModel": {
      "description": "ViewModel правила лимита.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Значение лимита.",
          "type": "number",
          "format": "double"
        },
        "isArchived": {
          "description": "В архивном состоянии или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "LimitBorderModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.LimitBorderModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfLimitRuleModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LimitRuleModel"
          },
          "xml": {
            "name": "LimitRuleModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Limits.LimitRuleModel, Loymax.SystemApi"
    },
    "ResultModelOfLimitRuleModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/LimitRuleModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Limits.LimitRuleModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfLimitTypeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LimitTypeModel"
          },
          "xml": {
            "name": "LimitTypeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Limits.LimitTypeModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfLimitPeriod": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "string",
            "enum": [
              "Once",
              "Hour",
              "Day",
              "Week",
              "Month",
              "Unlimited"
            ],
            "x-loymax-type": "Loymax.Limits.Abstract.LimitPeriod, Loymax.Limits",
            "x-loymax-enum-type": "LimitPeriod"
          },
          "xml": {
            "name": "LimitPeriod",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "LimitPeriod",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<LimitPeriod>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<LimitPeriod>"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Limits.Abstract.LimitPeriod, Loymax.Limits"
    },
    "LimitActionViewModel": {
      "description": "Действия при достижении лимита.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "isArchived": {
          "description": "В архивном состоянии или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "LimitActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.LimitActionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfLimitActionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LimitActionViewModel"
          },
          "xml": {
            "name": "LimitActionViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Limits.LimitActionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfLimitActionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/LimitActionViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Limits.LimitActionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfLimitBorderModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LimitBorderModel"
          },
          "xml": {
            "name": "LimitBorderModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Limits.LimitBorderModel, Loymax.SystemApi"
    },
    "ResultModelOfLimitBorderModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/LimitBorderModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Limits.LimitBorderModel, Loymax.SystemApi"
    },
    "RegionViewModel": {
      "description": "Модель представления региона.",
      "properties": {
        "id": {
          "description": "Id региона.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование региона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "RegionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Location.RegionViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfRegionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/RegionViewModel"
          },
          "xml": {
            "name": "RegionViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.Location.RegionViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.Location.RegionViewModel, Loymax.Common.WebApi"
    },
    "CityViewModel": {
      "description": "Модель представления города.",
      "properties": {
        "id": {
          "description": "Id города.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование города.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CityViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Location.CityViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfCityViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CityViewModel"
          },
          "xml": {
            "name": "CityViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.Location.CityViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.Location.CityViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfCityDataModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CityDataModel"
          },
          "xml": {
            "name": "CityDataModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.Contract.Model.Location.CityDataModel, Loymax.Common.Contract"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.Contract.Model.Location.CityDataModel, Loymax.Common.Contract"
    },
    "ResultModelOfLocationDataModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/LocationDataModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.Location.LocationDataModel, Loymax.Common.Contract"
    },
    "LoyaltyProgramListFilter": {
      "description": "Фильтр списка программ лояльности.",
      "properties": {
        "from": {
          "description": "С какого элемента брать.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько элементов брать.",
          "type": "integer",
          "format": "int32"
        },
        "partnerIds": {
          "description": "Список Id партнёров.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "name": {
          "description": "Подстрока для фильтрации по имени.",
          "type": "string"
        },
        "sortingIds": {
          "description": "Список идентификаторов для первоочередного выбора.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "LoyaltyProgramListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.LoyaltyProgramListFilter, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfLoyaltyProgramModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LoyaltyProgramModel"
          },
          "xml": {
            "name": "LoyaltyProgramModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.LoyaltyProgramModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.LoyaltyProgramModel, Loymax.SystemApi"
    },
    "ResultModelOfLoyaltyProgramModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/LoyaltyProgramModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Partner.LoyaltyProgramModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfPartnerModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PartnerModel"
          },
          "xml": {
            "name": "PartnerModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.Models.PartnerModel, Loymax.WebSites.Common"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.WebSites.Common.Models.PartnerModel, Loymax.WebSites.Common"
    },
    "OAuthSettings": {
      "required": [],
      "properties": {
        "providerType": {
          "type": "string",
          "enum": [
            "Facebook",
            "VKontakte",
            "Instagram",
            "Twitter",
            "Google",
            "MyMail",
            "Odnoklassniki",
            "Loymax"
          ],
          "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProviderType, Loymax.Business.Social.Common",
          "x-loymax-enum-type": "OAuthProviderType"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "OAuth1",
            "OAuth2"
          ],
          "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProtocolType, Loymax.Business.Social.Common",
          "x-loymax-enum-type": "OAuthProtocolType"
        },
        "scope": {
          "type": "string"
        },
        "requestTokenUri": {
          "$ref": "#/definitions/OAuthUriSettings"
        },
        "authorizeUri": {
          "$ref": "#/definitions/OAuthUriSettings"
        },
        "accessTokenUri": {
          "$ref": "#/definitions/OAuthUriSettings"
        },
        "redirectUri": {
          "type": "string"
        },
        "apiSettings": {
          "$ref": "#/definitions/ClientApiSettings"
        }
      },
      "xml": {
        "name": "OAuthSettings"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthSettings, Loymax.Business.Social.Common"
    },
    "OAuthUriSettings": {
      "properties": {
        "target": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "parameters": {
          "items": {
            "$ref": "#/definitions/HttpValue"
          },
          "xml": {
            "name": "HttpValue",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Portable.Utility.Model.HttpValueCollection, Loymax.Common.Portable"
        }
      },
      "xml": {
        "name": "OAuthUriSettings"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthUriSettings, Loymax.Business.Social.Common"
    },
    "ClientApiSettings": {
      "properties": {
        "uri": {
          "type": "string"
        },
        "applicationKey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ClientApiSettings"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Social.Common.Model.ClientApiSettings, Loymax.Business.Social.Common"
    },
    "HttpValue": {
      "description": "Описание пары ключ-значение.",
      "properties": {
        "key": {
          "description": "Ключ.",
          "type": "string"
        },
        "value": {
          "description": "Значение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "HttpValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Portable.Utility.Model.HttpValue, Loymax.Common.Portable"
    },
    "ResultModelOfPagedViewModelOfOAuthSettings": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OAuthSettings"
          },
          "xml": {
            "name": "OAuthSettings",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Business.Social.Common.Model.OAuthSettings, Loymax.Business.Social.Common"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Business.Social.Common.Model.OAuthSettings, Loymax.Business.Social.Common"
    },
    "OAuthSettingsViewModelEx": {
      "description": "Вью модель настроек соц.сетей.",
      "properties": {
        "providerType": {
          "description": "Провайдер.",
          "type": "string",
          "enum": [
            "Facebook",
            "VKontakte",
            "Instagram",
            "Twitter",
            "Google",
            "MyMail",
            "Odnoklassniki",
            "Loymax"
          ],
          "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProviderType, Loymax.Business.Social.Common",
          "x-loymax-enum-type": "OAuthProviderType"
        },
        "clientId": {
          "description": "Идентификатор приложения.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Секрет клиента.",
          "type": "string"
        },
        "text": {
          "description": "Наименование провайдера.",
          "type": "string"
        },
        "token": {
          "description": "Токен.",
          "type": "string"
        },
        "protocol": {
          "description": "Протокол.",
          "type": "string",
          "enum": [
            "OAuth1",
            "OAuth2"
          ],
          "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProtocolType, Loymax.Business.Social.Common",
          "x-loymax-enum-type": "OAuthProtocolType"
        },
        "scope": {
          "description": "Запрашиваемое окружение.",
          "type": "string"
        },
        "authorizeUri": {
          "$ref": "#/definitions/ClientUri",
          "description": "URL авторизации."
        },
        "accessTokenUri": {
          "$ref": "#/definitions/ClientUri",
          "description": "URL access токена."
        },
        "apiSettings": {
          "$ref": "#/definitions/ClientApiSettings",
          "description": "Настройки Api OAuth клиента."
        }
      },
      "xml": {
        "name": "OAuthSettingsViewModelEx"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OAuth.OAuthSettingsViewModelEx, Loymax.SystemApi"
    },
    "ClientUri": {
      "properties": {
        "method": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ClientUri"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Domain.OAuth.ClientUri, Loymax.Domain"
    },
    "ResultModelOfOAuthSettings": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OAuthSettings",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Social.Common.Model.OAuthSettings, Loymax.Business.Social.Common"
    },
    "ResultModelOfListOfOAuthActivityType": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "string",
            "enum": [
              "Reaction",
              "Comment",
              "Share"
            ],
            "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthActivityType, Loymax.Business.Social.Common",
            "x-loymax-enum-type": "OAuthActivityType"
          },
          "xml": {
            "name": "OAuthActivityType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "OAuthActivityType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OAuthActivityType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<OAuthActivityType>"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Business.Social.Common.Model.OAuthActivityType, Loymax.Business.Social.Common"
    },
    "ClientObjectModel": {
      "description": "View-модель OAuth объекта.",
      "properties": {
        "objectId": {
          "description": "Идентификатор объекта.",
          "type": "string"
        },
        "text": {
          "description": "Описание.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ClientObjectModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OAuth.Client.ClientObjectModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfClientObjectModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ClientObjectModel"
          },
          "xml": {
            "name": "ClientObjectModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.OAuth.Client.ClientObjectModel, Loymax.SystemApi"
    },
    "MailingsListFilter": {
      "description": "Модель фильтра для списка рассылок.",
      "properties": {
        "fromDate": {
          "description": "Дата С.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "Дата По.",
          "type": "string",
          "format": "date-time"
        },
        "from": {
          "description": "С какого элемента брать.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько элементов брать.",
          "type": "integer",
          "format": "int32"
        },
        "creatorIds": {
          "description": "Список id создателей акций для фильтрации.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "mailingType": {
          "description": "Тип рассылки.",
          "type": "string",
          "enum": [
            "Mail",
            "Sms",
            "Push",
            "Viber",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Entities.MailingWaySendType, Loymax.Entities",
          "x-loymax-enum-type": "MailingWaySendType"
        },
        "marketingCampaignId": {
          "description": "ID маркетинговой кампании.",
          "type": "integer",
          "format": "int32"
        },
        "sortByAttachDate": {
          "description": "Значение, указывающее, нужно ли сортировать рассылки по дате прикрепления.",
          "type": "boolean"
        },
        "loyaltyProgramIds": {
          "description": "Идентификаторы программ лояльности.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "MailingsListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.MailingsListFilter, Loymax.SystemApi"
    },
    "MailingBriefViewModel": {
      "description": "Модель для рассылки.",
      "properties": {
        "id": {
          "description": "ID рассылки.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название рассылки.",
          "type": "string"
        },
        "creator": {
          "description": "Создатель рассылки.",
          "type": "string"
        },
        "waySendType": {
          "description": "Способ отправки рассылки.",
          "type": "string",
          "enum": [
            "Mail",
            "Sms",
            "Push",
            "Viber",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Entities.MailingWaySendType, Loymax.Entities",
          "x-loymax-enum-type": "MailingWaySendType"
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/PartnerLoyaltyProgramModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "MailingBriefViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.MailingBriefViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfMailingBriefViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MailingBriefViewModel"
          },
          "xml": {
            "name": "MailingBriefViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Mailings.MailingBriefViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Mailings.MailingBriefViewModel, Loymax.SystemApi"
    },
    "MailingCreateModel": {
      "description": "Модель создания рассылки.",
      "properties": {
        "legalId": {
          "description": "Идентификатор юр.лица.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название рассылки.",
          "type": "string"
        },
        "waySendType": {
          "description": "Способ отправки.",
          "type": "string",
          "enum": [
            "Mail",
            "Sms",
            "Push",
            "Viber",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Entities.MailingWaySendType, Loymax.Entities",
          "x-loymax-enum-type": "MailingWaySendType"
        },
        "loyaltyProgramId": {
          "description": "Программа лояльности.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "MailingCreateModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.MailingCreateModel, Loymax.SystemApi"
    },
    "MailingViewModel": {
      "description": "Модель для рассылки.",
      "properties": {
        "id": {
          "description": "Идентификатор рассылки.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название рассылки.",
          "type": "string"
        },
        "gateway": {
          "$ref": "#/definitions/NotificationGatewayBriefViewModel",
          "description": "Идентификатор шлюза."
        },
        "legal": {
          "$ref": "#/definitions/LegalViewModel",
          "description": "Юр.лицо."
        },
        "mailingTypeId": {
          "description": "Тип рассылки (моментальная или плановая).",
          "type": "integer",
          "format": "int32"
        },
        "targetGroup": {
          "$ref": "#/definitions/TargetGroupBriefViewModel",
          "description": "Целевая группа."
        },
        "destinationType": {
          "description": "Тип получателей рассылки.",
          "type": "string",
          "enum": [
            "TargetGroup",
            "AddressList",
            "Person"
          ],
          "x-loymax-type": "Loymax.Entities.MailingDestinationType, Loymax.Entities",
          "x-loymax-enum-type": "MailingDestinationType"
        },
        "isAbleToStart": {
          "description": "Возможно ли начать рассылку.",
          "type": "boolean"
        },
        "isAbleToEdit": {
          "description": "Возможно ли редактировать рассылку.",
          "type": "boolean"
        },
        "waySendType": {
          "description": "Способ отправки.",
          "type": "string",
          "enum": [
            "Mail",
            "Sms",
            "Push",
            "Viber",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Entities.MailingWaySendType, Loymax.Entities",
          "x-loymax-enum-type": "MailingWaySendType"
        },
        "creator": {
          "description": "Автор рассылки.",
          "type": "string"
        },
        "creationDate": {
          "description": "Дата создания рассылки.",
          "type": "string",
          "format": "date-time"
        },
        "lastChangeUser": {
          "description": "Автор последних изменений.",
          "type": "string"
        },
        "changeDate": {
          "description": "Дата изменения.",
          "type": "string",
          "format": "date-time"
        },
        "messageType": {
          "description": "Тип Push-уведомления (для соответствующего типа).",
          "type": "string",
          "enum": [
            "General",
            "Echo",
            "PersonalOffer"
          ],
          "x-loymax-type": "Loymax.Common.Portable.Model.PushMessageType, Loymax.Common.Portable",
          "x-loymax-enum-type": "PushMessageType"
        },
        "mailingMessage": {
          "$ref": "#/definitions/MailingMessageViewModel",
          "description": "Модель сообщения рассылки."
        },
        "priceOneMessage": {
          "description": "Стоимость одного сообщения.",
          "type": "number",
          "format": "double"
        },
        "usersCount": {
          "description": "Количество пользователей.",
          "type": "integer",
          "format": "int32"
        },
        "marketingCampaign": {
          "$ref": "#/definitions/MarketingCampaignSimpleViewModel",
          "description": "Маркетинговая кампания."
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgramInfoViewModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "MailingViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.MailingViewModel, Loymax.SystemApi"
    },
    "NotificationGatewayBriefViewModel": {
      "description": "Шлюз.",
      "properties": {
        "id": {
          "description": "Идентификатор сущности.",
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "name": {
          "description": "Имя.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Признак удаления.",
          "type": "boolean"
        },
        "type": {
          "description": "Тип шлюза.",
          "type": "string",
          "enum": [
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialsNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Common.NotificationGatewayType, Loymax.Common",
          "x-loymax-enum-type": "NotificationGatewayType"
        }
      },
      "xml": {
        "name": "NotificationGatewayBriefViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.NotificationGatewayBriefViewModel, Loymax.Common.WebApi"
    },
    "TargetGroupBriefViewModel": {
      "description": "View модель целевой аудитории.",
      "properties": {
        "id": {
          "description": "Id целевой аудитории.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Имя.",
          "type": "string"
        },
        "isArchived": {
          "description": "Признак архивирования ЦА.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "TargetGroupBriefViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.TargetGroupBriefViewModel, Loymax.Common.WebApi"
    },
    "MailingMessageViewModel": {
      "description": "Модель сообщения рассылки.",
      "required": [],
      "properties": {
        "text": {
          "description": "Текст.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MailingMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingMessages.MailingMessageViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfMailingViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/MailingViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Mailings.MailingViewModel, Loymax.SystemApi"
    },
    "MailingRunViewModel": {
      "description": "Модель запуска рассылки.",
      "properties": {
        "planRunDate": {
          "description": "Плановая дата и время запуска.",
          "type": "string",
          "format": "date-time"
        },
        "ignoreUnidentifiedPhoneNumbers": {
          "description": "Запускать ли рассылку, даже если загружены номера, которых нет в системе.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "MailingRunViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingRunViewModel, Loymax.Common.WebApi"
    },
    "MailingPhonesViewModel": {
      "description": "Модель загруженных номеров телефонов.",
      "properties": {
        "totalPhonesCount": {
          "description": "Количество загруженных номеров телефонов всего.",
          "type": "integer",
          "format": "int32"
        },
        "correctPhonesCount": {
          "description": "Количество валидных номеров телефонов.",
          "type": "integer",
          "format": "int32"
        },
        "unidentifiedPhonesCount": {
          "description": "Количество номеров, не найденных в системе.",
          "type": "integer",
          "format": "int32"
        },
        "incorrectPhonesCount": {
          "description": "Количество неправильных номеров телефонов.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "MailingPhonesViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.MailingPhonesViewModel, Loymax.SystemApi"
    },
    "ResultModelOfMailingPhonesViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/MailingPhonesViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Mailings.MailingPhonesViewModel, Loymax.SystemApi"
    },
    "MailingPhonesModel": {
      "description": "Модель описывает загружаемые номера телефонов рассылки.",
      "properties": {
        "phonesCsv": {
          "description": "Строка с номерами телефонов.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MailingPhonesModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingPhonesModel, Loymax.Common.WebApi"
    },
    "MailingTestsModel": {
      "description": "Модель рассылки для тестирования.",
      "properties": {
        "testRecipient": {
          "description": "Получатель тестового сообщения.\r\nЕсли для рассылки указана целевая аудитория, необходимо ввести номер карты. Если загружен список номеров, необходимо ввести номер телефона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MailingTestsModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.MailingTestsModel, Loymax.SystemApi"
    },
    "MailingGatewayViewModel": {
      "description": "Модель шлюза рассылки.",
      "properties": {
        "id": {
          "description": "Идентификотор шлюза.",
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "description": "Логическое имя шлюза.",
          "type": "string"
        },
        "name": {
          "description": "Название шлюза.",
          "type": "string"
        },
        "prefix": {
          "description": "Префикс шлюза.",
          "type": "string"
        },
        "price": {
          "description": "Стоимость одного сообщения.",
          "type": "number",
          "format": "double"
        },
        "isDeleted": {
          "description": "Признак удаления.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "MailingGatewayViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingGatewayViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfListOfMailingGatewayViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MailingGatewayViewModel"
          },
          "xml": {
            "name": "MailingGatewayViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.WebApi.Models.Mailings.MailingGatewayViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfListOfCreatorModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CreatorModel"
          },
          "xml": {
            "name": "CreatorModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.CreatorModel, Loymax.WebSites.Common"
    },
    "MailingSubscriptionTypeViewModel": {
      "description": "Тип рассылки.",
      "properties": {
        "id": {
          "description": "Идентификатор типа рассылки.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название типа рассылки.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MailingSubscriptionTypeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.MailingSubscriptionTypeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfMailingSubscriptionTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MailingSubscriptionTypeViewModel"
          },
          "xml": {
            "name": "MailingSubscriptionTypeViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Mailings.MailingSubscriptionTypeViewModel, Loymax.SystemApi"
    },
    "MailingTaskViewModel": {
      "description": "Задача рассылки.",
      "properties": {
        "id": {
          "description": "Идентификатор задачи.",
          "type": "integer",
          "format": "int32"
        },
        "mailingId": {
          "description": "Идентификатор рассылки.",
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "description": "Дата старта.",
          "type": "string",
          "format": "date-time"
        },
        "gateway": {
          "description": "Шлюз.",
          "type": "string"
        },
        "state": {
          "description": "Статус задачи.",
          "type": "string",
          "enum": [
            "Done",
            "InProcess",
            "Planned",
            "Cancelled",
            "ForInitialize"
          ],
          "x-loymax-type": "Loymax.Entities.MailingTaskState, Loymax.Entities",
          "x-loymax-enum-type": "MailingTaskState"
        },
        "statistic": {
          "$ref": "#/definitions/MailingTaskStatisticViewModel",
          "description": "Статистика отправки."
        },
        "isAbleToCancel": {
          "description": "Возможно ли отменить задачу.",
          "type": "boolean"
        },
        "isTest": {
          "description": "Тестовая ли задача.",
          "type": "boolean"
        },
        "message": {
          "$ref": "#/definitions/MailingMessageViewModel",
          "description": "Текст сообщения."
        },
        "targetGroup": {
          "$ref": "#/definitions/TargetGroupBriefViewModel",
          "description": "Целевая группа."
        }
      },
      "xml": {
        "name": "MailingTaskViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.Tasks.MailingTaskViewModel, Loymax.Common.WebApi"
    },
    "MailingTaskStatisticViewModel": {
      "description": "Статистика выполнения задачи рассылки.",
      "properties": {
        "personsCount": {
          "description": "Количество клиентов всего.",
          "type": "integer",
          "format": "int32"
        },
        "processedNotificationsCount": {
          "description": "Количество сформированных оповещений.",
          "type": "integer",
          "format": "int32"
        },
        "processedSmsCount": {
          "description": "Количество сформированных sms.",
          "type": "integer",
          "format": "int32"
        },
        "processedMessagesCount": {
          "description": "Количество сформированных сообщений.",
          "type": "integer",
          "format": "int32"
        },
        "sentMessagesCount": {
          "description": "Количество отправленных сообщений.",
          "type": "integer",
          "format": "int32"
        },
        "deliveryInProcessMessagesCount": {
          "description": "Количество сообщений, которые находятся на обработке внешним шлюзом.",
          "type": "integer",
          "format": "int32"
        },
        "deliveredOkMessagesCount": {
          "description": "Количество успешно доставленных сообщений.",
          "type": "integer",
          "format": "int32"
        },
        "deliveredFailedMessagesCount": {
          "description": "Количество сообщений, доставка которых не удалась.",
          "type": "integer",
          "format": "int32"
        },
        "deliveredReadMessagesCount": {
          "description": "Количество сообщений, которые прочитаны.",
          "type": "integer",
          "format": "int32"
        },
        "deliveredUnknownMessagesCount": {
          "description": "Количество сообщений, у которых неизвестен статус доставки.",
          "type": "integer",
          "format": "int32"
        },
        "sentMessagesAmount": {
          "description": "Фактическая стоимость рассылки.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "MailingTaskStatisticViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.Tasks.MailingTaskStatisticViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfMailingTaskViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MailingTaskViewModel"
          },
          "xml": {
            "name": "MailingTaskViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.Mailings.Tasks.MailingTaskViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.Mailings.Tasks.MailingTaskViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfMailingTaskViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/MailingTaskViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.WebApi.Models.Mailings.Tasks.MailingTaskViewModel, Loymax.Common.WebApi"
    },
    "MarketingCampaignViewModel": {
      "description": "View-модель маркетинговой кампании.",
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/PartnerViewModel",
          "description": "Партнер."
        },
        "beginDate": {
          "description": "Дата начала.",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "Дата окончания.",
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "description": "Значение, определяющее, находится ли кампания в архиве.",
          "type": "boolean"
        },
        "hasMetrics": {
          "description": "Значение, определяющее, установлены ли для кампании показатели.",
          "type": "boolean"
        },
        "canView": {
          "$ref": "#/definitions/CampaignPermissions",
          "description": "Разрешения на просмотр связанных объектов."
        },
        "canEdit": {
          "description": "Значение, определяющее, есть ли у пользователя право редактировать кампанию.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "MarketingCampaignViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Marketing.MarketingCampaignViewModel, Loymax.SystemApi"
    },
    "CampaignPermissions": {
      "description": "Разрешения на просмотр связанных объектов кампании.",
      "properties": {
        "offers": {
          "description": "Значение, определяющее, есть ли разрешение на акции.",
          "type": "boolean"
        },
        "mailings": {
          "description": "Значение, определяющее, есть ли разрешение на рассылки.",
          "type": "boolean"
        },
        "metrics": {
          "description": "Значение, определяющее, есть ли разрешение на показатели.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CampaignPermissions"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Marketing.MarketingCampaignViewModel+CampaignPermissions, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfMarketingCampaignViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MarketingCampaignViewModel"
          },
          "xml": {
            "name": "MarketingCampaignViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Marketing.MarketingCampaignViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Marketing.MarketingCampaignViewModel, Loymax.SystemApi"
    },
    "ResultModelOfMarketingCampaignViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/MarketingCampaignViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Marketing.MarketingCampaignViewModel, Loymax.SystemApi"
    },
    "OffersBriefModel": {
      "description": "Модель для списка акции.",
      "properties": {
        "rows": {
          "description": "Список акций.",
          "items": {
            "$ref": "#/definitions/OfferBriefModel"
          },
          "xml": {
            "name": "OfferBriefModel",
            "wrapped": true
          },
          "type": "array"
        },
        "allCount": {
          "description": "Общее количество акций.",
          "type": "integer",
          "format": "int32"
        },
        "allChainsCount": {
          "description": "Общее количество цепочек всех акций.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "OffersBriefModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OffersBriefModel, Loymax.SystemApi"
    },
    "OfferBriefModel": {
      "description": "Модель для акции.",
      "properties": {
        "id": {
          "description": "ID акции.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название акции.",
          "type": "string"
        },
        "beginTime": {
          "description": "Время начала акции.",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "Дата окончания действия акции. Если это пустое значение, то акция действует бесконечно долго, начиная с BeginTime.",
          "type": "string",
          "format": "date-time"
        },
        "operations": {
          "description": "Доступные операции над акцией.",
          "type": "string",
          "enum": [
            "None",
            "View",
            "Start",
            "Stop",
            "Edit",
            "Copy",
            "Delete",
            "Accept",
            "Apply",
            "RestoreFromArchive"
          ],
          "x-loymax-type": "Loymax.Business.Offers.Interfaces.Operation, Loymax.Business.Offers.Interfaces",
          "x-loymax-enum-type": "Operation"
        },
        "creationDate": {
          "description": "Дата создания акции.",
          "type": "string",
          "format": "date-time"
        },
        "lastChangeDate": {
          "description": "Дата последних изменений.",
          "type": "string",
          "format": "date-time"
        },
        "creator": {
          "description": "Создатель акции.",
          "type": "string"
        },
        "lastChangeUser": {
          "description": "Пользователь, который последним изменял акцию.",
          "type": "string"
        },
        "description": {
          "description": "Описание акции.",
          "type": "string"
        },
        "partners": {
          "description": "Список партнеров акции.",
          "items": {
            "$ref": "#/definitions/PartnerModel"
          },
          "xml": {
            "name": "PartnerModel",
            "wrapped": true
          },
          "type": "array"
        },
        "isSum": {
          "description": "Является ли акция суммируемой.",
          "type": "boolean"
        },
        "priority": {
          "description": "Приоритет акции.",
          "type": "integer",
          "format": "int32"
        },
        "isDraft": {
          "description": "Является ли черновиком.",
          "type": "boolean"
        },
        "isDefault": {
          "description": "Является ли акция базовой (по умолчанию).",
          "type": "boolean"
        },
        "offerCategory": {
          "$ref": "#/definitions/OfferCategoryViewModel",
          "description": "Категория акции."
        },
        "draftState": {
          "description": "Состояния версии как черновика\r\n            None = 0, версия не является черновиком (уже была подтверждена)\r\n            Edit = 1, версия является редактируемым в данный момент черновиком\r\n            Applied = 2, версия является черновиком, требующим подтверждения или отклонения (вносить изменения нельзя)\r\n            Rejected = 3,  версия является редактируемым в данный момент черновиком, отклоненным на этапе подтверждения.",
          "type": "string",
          "enum": [
            "None",
            "Edit",
            "Applied",
            "Rejected"
          ],
          "x-loymax-type": "Loymax.Entities.OfferDraftState, Loymax.Entities",
          "x-loymax-enum-type": "OfferDraftState"
        },
        "draftLastChangeDate": {
          "description": "Дата последнего сохранения черновика.",
          "type": "string",
          "format": "date-time"
        },
        "externalID": {
          "description": "ID акции для внешних система (например если акция была загружена через шлюз).",
          "type": "string"
        },
        "viewState": {
          "description": "Состояние акции во времени.",
          "type": "string",
          "enum": [
            "Future",
            "Present",
            "Past"
          ],
          "x-loymax-type": "Loymax.Entities.OfferViewState, Loymax.Entities",
          "x-loymax-enum-type": "OfferViewState"
        },
        "state": {
          "description": "Состояние акции.",
          "type": "string",
          "enum": [
            "Run",
            "Stop",
            "Archived"
          ],
          "x-loymax-type": "Loymax.WebSites.Common.Models.OfferState, Loymax.WebSites.Common",
          "x-loymax-enum-type": "OfferState"
        },
        "planned": {
          "description": "Если значение флага = true, то акция еще не имеет подтвержденных версий и в периоде требуется выводить слово \"Планируется\".",
          "type": "boolean"
        },
        "draftRejectReason": {
          "description": "Причина отклонения версии как черновика акции.",
          "type": "string"
        },
        "loyaltyPrograms": {
          "description": "Программы лояльности.",
          "items": {
            "$ref": "#/definitions/PartnerLoyaltyProgramModel"
          },
          "xml": {
            "name": "PartnerLoyaltyProgramModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferBriefModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferBriefModel, Loymax.SystemApi"
    },
    "OfferCategoryViewModel": {
      "description": "View модель категории акции.",
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "logicalName": {
          "description": "Уникальное логическое имя.",
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/PartnerViewModel",
          "description": "Партнер."
        }
      },
      "xml": {
        "name": "OfferCategoryViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferCategoryViewModel, Loymax.SystemApi"
    },
    "ResultModelOfOffersBriefModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OffersBriefModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Offers.OffersBriefModel, Loymax.SystemApi"
    },
    "MetricsViewModel": {
      "description": "Модель представления показателей.",
      "required": [],
      "properties": {
        "turnover": {
          "description": "Товарооборот.",
          "type": "number",
          "format": "double"
        },
        "proceeds": {
          "description": "Выручка.",
          "type": "number",
          "format": "double"
        },
        "discount": {
          "description": "Скидка.",
          "type": "number",
          "format": "double"
        },
        "discountPercent": {
          "description": "Скидка в %.",
          "type": "number",
          "format": "double"
        },
        "accruedSum": {
          "description": "Начисленно бонусов.",
          "type": "number",
          "format": "double"
        },
        "accruedPercent": {
          "description": "Начислено бонусов в %.",
          "type": "number",
          "format": "double"
        },
        "paymentBonusesSum": {
          "description": "Оплата бонусами.",
          "type": "number",
          "format": "double"
        },
        "paymentMoneySum": {
          "description": "Оплата валютой кассы.",
          "type": "number",
          "format": "double"
        },
        "activeClientsCount": {
          "description": "Кол-во покупателей.",
          "type": "number",
          "format": "double"
        },
        "chequesCount": {
          "description": "Кол-во чеков.",
          "type": "number",
          "format": "double"
        },
        "purchasesPerClient": {
          "description": "Кол-во покупок на 1ого клиента.",
          "type": "number",
          "format": "double"
        },
        "averageChequeSum": {
          "description": "Средняя сумма чека.",
          "type": "number",
          "format": "double"
        },
        "purchasesSumPerClient": {
          "description": "Сумма покупок на 1ого клиента.",
          "type": "number",
          "format": "double"
        },
        "discountsSumPerClient": {
          "description": "Сумма скидок на 1ого клиента.",
          "type": "number",
          "format": "double"
        },
        "cashbacksSumPerClient": {
          "description": "Сумма начислений на 1ого клиента.",
          "type": "number",
          "format": "double"
        },
        "paymentsSumPerClient": {
          "description": "Сумма оплаты бонусами на 1ого клиента.",
          "type": "number",
          "format": "double"
        },
        "withdrawsPercentByTurnover": {
          "description": "Бонусов списано от товарооборота.",
          "type": "number",
          "format": "double"
        },
        "withdrawsPercentByAccruals": {
          "description": "Кол-во списанных бонусов к кол-ву начисленных.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "MetricsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Plan.MetricsViewModel, Loymax.SystemApi"
    },
    "CampaignMetricsViewModel": {
      "description": "View-модель показателей кампании.",
      "allOf": [
        {
          "$ref": "#/definitions/MetricsViewModel"
        }
      ],
      "properties": {
        "targetGroupCapacity": {
          "description": "Численность ЦА.",
          "type": "integer",
          "format": "int32"
        },
        "advertisingExpensesPerClient": {
          "description": "Затраты рекламы и коммуникации на 1ого клиента.",
          "type": "number",
          "format": "double"
        },
        "advertisingExpensesPerClientPercent": {
          "description": "Затраты рекламы и коммуникации на 1ого клиента в %.",
          "type": "number",
          "format": "double"
        },
        "attractionExpensesPerClient": {
          "description": "Стоимость привлечения 1ого клиента.",
          "type": "number",
          "format": "double"
        },
        "attractionExpensesPerClientPercent": {
          "description": "Стоимость привлечения 1ого клиента в %.",
          "type": "number",
          "format": "double"
        },
        "conversion": {
          "description": "Конверсия.",
          "type": "number",
          "format": "double"
        },
        "expensesSum": {
          "description": "Затраты ИТОГ.",
          "type": "number",
          "format": "double"
        },
        "expensesPercent": {
          "description": "Затраты ИТОГ в %.",
          "type": "number",
          "format": "double"
        },
        "communicationExpenses": {
          "description": "Затраты на коммуникацию.",
          "type": "number",
          "format": "double"
        },
        "advertisingExpenses": {
          "description": "Затраты на рекламные материалы.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "CampaignMetricsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Marketing.CampaignMetricsViewModel, Loymax.SystemApi"
    },
    "ResultModelOfCampaignMetricsViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CampaignMetricsViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Marketing.CampaignMetricsViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfBatchOperationsBriefViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/BatchOperationsBriefViewModel"
          },
          "xml": {
            "name": "BatchOperationsBriefViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.BatchOperations.BatchOperationsBriefViewModel, Loymax.SystemApi"
    },
    "MessageListFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "phone": {
          "type": "string"
        },
        "personUid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "items": {
            "type": "string",
            "enum": [
              "ReadyForSend",
              "Sent",
              "CriticalError",
              "DeliveryInProcess",
              "DeliveryOk",
              "DeliveryFailed",
              "DeliveryRead",
              "DeliveryUnknown",
              "Deleted"
            ],
            "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
            "x-loymax-enum-type": "NotificationMessageState"
          },
          "xml": {
            "name": "NotificationMessageState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "NotificationMessageState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
        }
      },
      "xml": {
        "name": "MessageListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.MessageListFilter, Loymax.Business.NotifyService.MessageSender"
    },
    "MessageViewModel": {
      "description": "ViewModel сообщения.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "body": {
          "description": "Содержимое.",
          "type": "string"
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "changeDate": {
          "description": "Дата изменения.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "MessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Message.MessageViewModel, Loymax.SystemApi"
    },
    "SmsMessageViewModel": {
      "description": "ViewModel смс сообщения.",
      "allOf": [
        {
          "$ref": "#/definitions/MessageViewModel"
        }
      ],
      "properties": {
        "recipient": {
          "description": "Получатель.",
          "type": "string"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "ReadyForSend",
            "Sent",
            "CriticalError",
            "DeliveryInProcess",
            "DeliveryOk",
            "DeliveryFailed",
            "DeliveryRead",
            "DeliveryUnknown",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "NotificationMessageState"
        },
        "type": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "Incoming",
            "Outgoing"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Implementation.Sms.SmsType, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "SmsType"
        },
        "gateway": {
          "$ref": "#/definitions/NotificationGatewayBriefViewModel",
          "description": "Шлюз."
        },
        "length": {
          "description": "Длина Sms сообщения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "SmsMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Message.SmsMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfSmsMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SmsMessageViewModel"
          },
          "xml": {
            "name": "SmsMessageViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.SmsMessageViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.SmsMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfSmsMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SmsMessageViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Message.SmsMessageViewModel, Loymax.SystemApi"
    },
    "MessageMailListFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "toEmail": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "state": {
          "items": {
            "type": "string",
            "enum": [
              "ReadyForSend",
              "Sent",
              "CriticalError",
              "DeliveryInProcess",
              "DeliveryOk",
              "DeliveryFailed",
              "DeliveryRead",
              "DeliveryUnknown",
              "Deleted"
            ],
            "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
            "x-loymax-enum-type": "NotificationMessageState"
          },
          "xml": {
            "name": "NotificationMessageState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "NotificationMessageState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
        },
        "personUid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "MessageMailListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.MessageMailListFilter, Loymax.Business.NotifyService.MessageSender"
    },
    "MailMessageViewModel": {
      "description": "ViewModel mail сообщений.",
      "allOf": [
        {
          "$ref": "#/definitions/MessageViewModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Заголовок.",
          "type": "string"
        },
        "fromEmail": {
          "description": "Адрес отправителя.",
          "type": "string"
        },
        "recipient": {
          "description": "Получатель.",
          "type": "string"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "ReadyForSend",
            "Sent",
            "CriticalError",
            "DeliveryInProcess",
            "DeliveryOk",
            "DeliveryFailed",
            "DeliveryRead",
            "DeliveryUnknown",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "NotificationMessageState"
        },
        "subscriptionTypeID": {
          "description": "Идентификатор типа подписки.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "MailMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Message.MailMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfMailMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MailMessageViewModel"
          },
          "xml": {
            "name": "MailMessageViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.MailMessageViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.MailMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfMailMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/MailMessageViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Message.MailMessageViewModel, Loymax.SystemApi"
    },
    "MessagePushListFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "platformType": {
          "items": {
            "type": "string",
            "enum": [
              "Ios",
              "Android",
              "WindowsPhone",
              "Unknown"
            ],
            "x-loymax-type": "Loymax.Common.Portable.Model.PlatformType, Loymax.Common.Portable",
            "x-loymax-enum-type": "PlatformType"
          },
          "xml": {
            "name": "PlatformType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "PlatformType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<PlatformType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<PlatformType>"
        },
        "state": {
          "items": {
            "type": "string",
            "enum": [
              "ReadyForSend",
              "Sent",
              "CriticalError",
              "DeliveryInProcess",
              "DeliveryOk",
              "DeliveryFailed",
              "DeliveryRead",
              "DeliveryUnknown",
              "Deleted"
            ],
            "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
            "x-loymax-enum-type": "NotificationMessageState"
          },
          "xml": {
            "name": "NotificationMessageState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "NotificationMessageState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
        },
        "header": {
          "type": "string"
        },
        "personUid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "MessagePushListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.MessagePushListFilter, Loymax.Business.NotifyService.MessageSender"
    },
    "PushMessageViewModel": {
      "description": "ViewModel push сообщения.",
      "allOf": [
        {
          "$ref": "#/definitions/MessageViewModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Заголовок.",
          "type": "string"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "ReadyForSend",
            "Sent",
            "CriticalError",
            "DeliveryInProcess",
            "DeliveryOk",
            "DeliveryFailed",
            "DeliveryRead",
            "DeliveryUnknown",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "NotificationMessageState"
        },
        "platformType": {
          "description": "Тип устройства.",
          "type": "string",
          "enum": [
            "Ios",
            "Android",
            "WindowsPhone",
            "Unknown"
          ],
          "x-loymax-type": "Loymax.Common.Portable.Model.PlatformType, Loymax.Common.Portable",
          "x-loymax-enum-type": "PlatformType"
        },
        "messageType": {
          "description": "Тип сообщения.",
          "type": "string",
          "enum": [
            "General",
            "Echo",
            "PersonalOffer"
          ],
          "x-loymax-type": "Loymax.Common.Portable.Model.PushMessageType, Loymax.Common.Portable",
          "x-loymax-enum-type": "PushMessageType"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "PushMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Message.PushMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfPushMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PushMessageViewModel"
          },
          "xml": {
            "name": "PushMessageViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.PushMessageViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.PushMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPushMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PushMessageViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Message.PushMessageViewModel, Loymax.SystemApi"
    },
    "MessageViberListFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "items": {
            "type": "string",
            "enum": [
              "ReadyForSend",
              "Sent",
              "CriticalError",
              "DeliveryInProcess",
              "DeliveryOk",
              "DeliveryFailed",
              "DeliveryRead",
              "DeliveryUnknown",
              "Deleted"
            ],
            "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
            "x-loymax-enum-type": "NotificationMessageState"
          },
          "xml": {
            "name": "NotificationMessageState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "NotificationMessageState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
        },
        "personUid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "MessageViberListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.MessageViberListFilter, Loymax.Business.NotifyService.MessageSender"
    },
    "ViberMessageViewModel": {
      "description": "ViewModel viber сообщения.",
      "allOf": [
        {
          "$ref": "#/definitions/MessageViewModel"
        }
      ],
      "properties": {
        "recipient": {
          "description": "Получатель.",
          "type": "string"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "ReadyForSend",
            "Sent",
            "CriticalError",
            "DeliveryInProcess",
            "DeliveryOk",
            "DeliveryFailed",
            "DeliveryRead",
            "DeliveryUnknown",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "NotificationMessageState"
        },
        "buttonText": {
          "description": "Текст кнопки.",
          "type": "string"
        },
        "url": {
          "description": "URL адрес.",
          "type": "string"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "gateway": {
          "$ref": "#/definitions/NotificationGatewayBriefViewModel",
          "description": "Шлюз."
        }
      },
      "xml": {
        "name": "ViberMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Message.ViberMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfViberMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ViberMessageViewModel"
          },
          "xml": {
            "name": "ViberMessageViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.ViberMessageViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.ViberMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfViberMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ViberMessageViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Message.ViberMessageViewModel, Loymax.SystemApi"
    },
    "MessagesNotifiersFilter": {
      "description": "Фильтр для поиска нотификаторов по сообщениям.",
      "properties": {
        "personUid": {
          "description": "Гуид пользователя.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "notifyType": {
          "description": "Тип нотификатора.",
          "type": "string",
          "enum": [
            "Direct",
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotifyType, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "NotifyType"
        },
        "substring": {
          "description": "Подстрока для поиска.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MessagesNotifiersFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.MessagesNotifiersFilter, Loymax.SystemApi"
    },
    "MessageSocialNetworksListFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "items": {
            "type": "string",
            "enum": [
              "ReadyForSend",
              "Sent",
              "CriticalError",
              "DeliveryInProcess",
              "DeliveryOk",
              "DeliveryFailed",
              "DeliveryRead",
              "DeliveryUnknown",
              "Deleted"
            ],
            "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
            "x-loymax-enum-type": "NotificationMessageState"
          },
          "xml": {
            "name": "NotificationMessageState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "NotificationMessageState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
        },
        "personUid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "MessageSocialNetworksListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.MessageSocialNetworksListFilter, Loymax.Business.NotifyService.MessageSender"
    },
    "SocialNetworksMessageViewModel": {
      "description": "ViewModel socialNetworks сообщения.",
      "allOf": [
        {
          "$ref": "#/definitions/MessageViewModel"
        }
      ],
      "properties": {
        "recipient": {
          "description": "Получатель.",
          "type": "string"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "ReadyForSend",
            "Sent",
            "CriticalError",
            "DeliveryInProcess",
            "DeliveryOk",
            "DeliveryFailed",
            "DeliveryRead",
            "DeliveryUnknown",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "NotificationMessageState"
        },
        "gateway": {
          "$ref": "#/definitions/NotificationGatewayBriefViewModel",
          "description": "Шлюз."
        }
      },
      "xml": {
        "name": "SocialNetworksMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Message.SocialNetworksMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfSocialNetworksMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SocialNetworksMessageViewModel"
          },
          "xml": {
            "name": "SocialNetworksMessageViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.SocialNetworksMessageViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.SocialNetworksMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfSocialNetworksMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SocialNetworksMessageViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Message.SocialNetworksMessageViewModel, Loymax.SystemApi"
    },
    "MessageChatBotListFilter": {
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "type": "string",
          "format": "date-time"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "items": {
            "type": "string",
            "enum": [
              "ReadyForSend",
              "Sent",
              "CriticalError",
              "DeliveryInProcess",
              "DeliveryOk",
              "DeliveryFailed",
              "DeliveryRead",
              "DeliveryUnknown",
              "Deleted"
            ],
            "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
            "x-loymax-enum-type": "NotificationMessageState"
          },
          "xml": {
            "name": "NotificationMessageState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "NotificationMessageState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<NotificationMessageState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<NotificationMessageState>"
        },
        "personUid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "MessageChatBotListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.MessageChatBotListFilter, Loymax.Business.NotifyService.MessageSender"
    },
    "ChatBotMessageViewModel": {
      "description": "ViewModel chatbot сообщения.",
      "allOf": [
        {
          "$ref": "#/definitions/MessageViewModel"
        }
      ],
      "properties": {
        "recipient": {
          "description": "Получатель.",
          "type": "string"
        },
        "header": {
          "description": "Текст до изображения.",
          "type": "string"
        },
        "imageUrl": {
          "description": "Адрес изображения.",
          "type": "string"
        },
        "state": {
          "description": "Статус.",
          "type": "string",
          "enum": [
            "ReadyForSend",
            "Sent",
            "CriticalError",
            "DeliveryInProcess",
            "DeliveryOk",
            "DeliveryFailed",
            "DeliveryRead",
            "DeliveryUnknown",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationMessageState, Loymax.Business.NotifyService.MessageSender",
          "x-loymax-enum-type": "NotificationMessageState"
        },
        "gateway": {
          "$ref": "#/definitions/NotificationGatewayBriefViewModel",
          "description": "Шлюз."
        }
      },
      "xml": {
        "name": "ChatBotMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Message.ChatBotMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfChatBotMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ChatBotMessageViewModel"
          },
          "xml": {
            "name": "ChatBotMessageViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.ChatBotMessageViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Message.ChatBotMessageViewModel, Loymax.SystemApi"
    },
    "ResultModelOfChatBotMessageViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ChatBotMessageViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Message.ChatBotMessageViewModel, Loymax.SystemApi"
    },
    "NotificationGatewayFilter": {
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "type": {
          "type": "string",
          "enum": [
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialsNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Common.NotificationGatewayType, Loymax.Common",
          "x-loymax-enum-type": "NotificationGatewayType"
        },
        "name": {
          "type": "string"
        },
        "proxyName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "NotificationGatewayFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.NotifyService.MessageSender.Model.NotificationGatewayFilter, Loymax.Business.NotifyService.MessageSender"
    },
    "NotificationGatewayViewModel": {
      "description": "Шлюз.",
      "properties": {
        "id": {
          "description": "Идентификатор сущности.",
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "url": {
          "description": "Url.",
          "type": "string"
        },
        "login": {
          "description": "Логин.",
          "type": "string"
        },
        "password": {
          "description": "Пароль.",
          "type": "string"
        },
        "name": {
          "description": "Имя.",
          "type": "string"
        },
        "prefix": {
          "description": "Префикс.",
          "type": "string"
        },
        "enableSsl": {
          "description": "Поддержка SSL.",
          "type": "boolean"
        },
        "checkStatusAllowed": {
          "description": "Поддерживает ли шлюз проверку статуса отправлений.",
          "type": "boolean"
        },
        "protocolType": {
          "description": "Протокол.",
          "type": "string"
        },
        "type": {
          "description": "Тип шлюза.",
          "type": "string",
          "enum": [
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialsNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Common.NotificationGatewayType, Loymax.Common",
          "x-loymax-enum-type": "NotificationGatewayType"
        },
        "isDeleted": {
          "description": "Признак удаления.",
          "type": "boolean"
        },
        "price": {
          "description": "Стоимость одного сообщения.",
          "type": "number",
          "format": "double"
        },
        "proxy": {
          "$ref": "#/definitions/NotificationProxyBriefViewModel",
          "description": "Прокси."
        },
        "additionalParams": {
          "description": "Дополнительные параметры.",
          "type": "string"
        }
      },
      "xml": {
        "name": "NotificationGatewayViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.NotificationGateway.NotificationGatewayViewModel, Loymax.SystemApi"
    },
    "NotificationProxyBriefViewModel": {
      "description": "Шлюз.",
      "properties": {
        "id": {
          "description": "Идентификатор сущности.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Признак - удалена ли сущность.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "NotificationProxyBriefViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.NotificationProxy.NotificationProxyBriefViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfNotificationGatewayViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/NotificationGatewayViewModel"
          },
          "xml": {
            "name": "NotificationGatewayViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.NotificationGateway.NotificationGatewayViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.NotificationGateway.NotificationGatewayViewModel, Loymax.SystemApi"
    },
    "ResultModelOfNotificationGatewayViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/NotificationGatewayViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.NotificationGateway.NotificationGatewayViewModel, Loymax.SystemApi"
    },
    "NotificationGatewayProtocolTypeViewModel": {
      "description": "ViewModel типов протокола шлюзов.",
      "properties": {
        "name": {
          "description": "Имя.",
          "type": "string"
        },
        "type": {
          "description": "Тип шлюза.",
          "type": "string",
          "enum": [
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialsNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Common.NotificationGatewayType, Loymax.Common",
          "x-loymax-enum-type": "NotificationGatewayType"
        },
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "NotificationGatewayProtocolTypeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.NotificationGateway.NotificationGatewayProtocolTypeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfNotificationGatewayProtocolTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/NotificationGatewayProtocolTypeViewModel"
          },
          "xml": {
            "name": "NotificationGatewayProtocolTypeViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.NotificationGateway.NotificationGatewayProtocolTypeViewModel, Loymax.SystemApi"
    },
    "NotificationProxyViewModel": {
      "description": "Шлюз.",
      "properties": {
        "id": {
          "description": "Идентификатор сущности.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "Адрес.",
          "type": "string"
        },
        "login": {
          "description": "Логин.",
          "type": "string"
        },
        "password": {
          "description": "Пароль.",
          "type": "string"
        },
        "title": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Признак - удалена ли сущность.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "NotificationProxyViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.NotificationProxy.NotificationProxyViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfNotificationProxyViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/NotificationProxyViewModel"
          },
          "xml": {
            "name": "NotificationProxyViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.NotificationProxy.NotificationProxyViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.NotificationProxy.NotificationProxyViewModel, Loymax.SystemApi"
    },
    "ResultModelOfNotificationProxyViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/NotificationProxyViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.NotificationProxy.NotificationProxyViewModel, Loymax.SystemApi"
    },
    "NotifyTemplateViewModel": {
      "description": "View Model для шаблона уведомлений.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "description": "Уникальное логическое имя.",
          "type": "string"
        },
        "text": {
          "description": "Текст.",
          "type": "string"
        },
        "priority": {
          "description": "Приоритет.",
          "type": "integer",
          "format": "int32"
        },
        "subscriptionType": {
          "description": "Тип подписки.",
          "type": "string",
          "enum": [
            "Cashback",
            "Payment",
            "Refill",
            "Offer",
            "System",
            "Mailing",
            "Refund",
            "DeviceEmulation"
          ],
          "x-loymax-type": "Loymax.Entities.MailingSubscriptionType, Loymax.Entities",
          "x-loymax-enum-type": "MailingSubscriptionType"
        },
        "isDeleted": {
          "description": "Флаг удаления.",
          "type": "boolean"
        },
        "canNotBeDeleted": {
          "description": "Может ли сущность быть удалена.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "NotifyTemplateViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.NotifyTemplateViewModel, Loymax.SystemApi"
    },
    "ResultModelOfNotifyTemplateViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/NotifyTemplateViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Notify.NotifyTemplateViewModel, Loymax.SystemApi"
    },
    "NotifyTemplatesQuery": {
      "description": "Модель данных запроса на получение списка шаблонов уведомлений.",
      "properties": {
        "from": {
          "description": "С какого.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько.",
          "type": "integer",
          "format": "int32"
        },
        "templateType": {
          "description": "Тип шаблона уведомлений.",
          "type": "string",
          "enum": [
            "HeaderAndText",
            "Push",
            "Simple",
            "Messenger",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplateType, Loymax.SystemApi",
          "x-loymax-enum-type": "TemplateType"
        },
        "logicalNameSubStr": {
          "description": "Подстрока логического имени шаблона.",
          "type": "string"
        },
        "textSubStr": {
          "description": "Подстрока текстового описания шаблона.",
          "type": "string"
        },
        "subscriptionType": {
          "description": "Тип подписки.",
          "type": "string",
          "enum": [
            "Cashback",
            "Payment",
            "Refill",
            "Offer",
            "System",
            "Mailing",
            "Refund",
            "DeviceEmulation"
          ],
          "x-loymax-type": "Loymax.Entities.MailingSubscriptionType, Loymax.Entities",
          "x-loymax-enum-type": "MailingSubscriptionType"
        },
        "showMode": {
          "description": "Режим отображения архивных шаблонов.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        }
      },
      "xml": {
        "name": "NotifyTemplatesQuery"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.NotifyTemplatesQuery, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfNotifyTemplateViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/NotifyTemplateViewModel"
          },
          "xml": {
            "name": "NotifyTemplateViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Notify.NotifyTemplateViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Notify.NotifyTemplateViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfMailingSubscriptionType": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "string",
            "enum": [
              "Cashback",
              "Payment",
              "Refill",
              "Offer",
              "System",
              "Mailing",
              "Refund",
              "DeviceEmulation"
            ],
            "x-loymax-type": "Loymax.Entities.MailingSubscriptionType, Loymax.Entities",
            "x-loymax-enum-type": "MailingSubscriptionType"
          },
          "xml": {
            "name": "MailingSubscriptionType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "MailingSubscriptionType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<MailingSubscriptionType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<MailingSubscriptionType>"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Entities.MailingSubscriptionType, Loymax.Entities"
    },
    "OffersListFilter": {
      "description": "Модель фильтра для списка акций.",
      "properties": {
        "fromDate": {
          "description": "Дата С.",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "Дата По.",
          "type": "string",
          "format": "date-time"
        },
        "from": {
          "description": "С какого элемента брать.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько элементов брать.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Подстрока для поиска по имени.",
          "type": "string"
        },
        "merchantIds": {
          "description": "Список id магазинов для фильтрации.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "creatorIds": {
          "description": "Список id создателей акций для фильтрации.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "viewStates": {
          "description": "Список состояний акции для фильтрации.",
          "items": {
            "type": "string",
            "enum": [
              "Future",
              "Present",
              "Past"
            ],
            "x-loymax-type": "Loymax.Entities.OfferViewState, Loymax.Entities",
            "x-loymax-enum-type": "OfferViewState"
          },
          "xml": {
            "name": "OfferViewState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "OfferViewState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OfferViewState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<OfferViewState>"
        },
        "sortColumn": {
          "description": "Колонка для сортировки.",
          "type": "string",
          "enum": [
            "Priority",
            "Name",
            "BeginTime",
            "EndTime",
            "State",
            "AttachDate"
          ],
          "x-loymax-type": "Loymax.Entities.OfferSortColumn, Loymax.Entities",
          "x-loymax-enum-type": "OfferSortColumn"
        },
        "direction": {
          "description": "Направление сортировки.",
          "type": "boolean"
        },
        "states": {
          "description": "Список состояний акции для фильтрации.",
          "items": {
            "type": "string",
            "enum": [
              "Run",
              "Stop",
              "Archived"
            ],
            "x-loymax-type": "Loymax.WebSites.Common.Models.OfferState, Loymax.WebSites.Common",
            "x-loymax-enum-type": "OfferState"
          },
          "xml": {
            "name": "OfferState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "OfferState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<OfferState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<OfferState>"
        },
        "partnerIds": {
          "description": "Список Id партнеров для фильтрации.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "categoryIds": {
          "description": "Список Id категорий акций.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "priority": {
          "$ref": "#/definitions/PriorityRange",
          "description": "Диапазон значений приоритета у акций."
        },
        "marketingCampaignId": {
          "description": "Идентификатор маркетинговой кампании.",
          "type": "integer",
          "format": "int32"
        },
        "includeMarketingCampaignId": {
          "description": "Значение, указывающее, включать или исключать акции с заданной МК.",
          "type": "boolean"
        },
        "loyaltyProgramIds": {
          "description": "Список Id программ лояльности для фильтрации.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "excludeMarketingCampaign": {
          "description": "Исключает все акции для которых установлена компания.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "OffersListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OffersListFilter, Loymax.SystemApi"
    },
    "PriorityRange": {
      "description": "Диапазон значений приоритета у акций.",
      "properties": {
        "lowerBound": {
          "description": "Нижняя граница приоритета.",
          "type": "integer",
          "format": "int32"
        },
        "upperBound": {
          "description": "Верхняя граница приоритета.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PriorityRange"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.PriorityRange, Loymax.SystemApi"
    },
    "CreateOfferModel": {
      "description": "Модель для создания акции.",
      "properties": {
        "name": {
          "description": "Название акции.",
          "type": "string"
        },
        "dateFrom": {
          "description": "Дата начала.",
          "type": "string",
          "format": "date-time"
        },
        "dateTo": {
          "description": "Дата конца.",
          "type": "string",
          "format": "date-time"
        },
        "partnerId": {
          "description": "ID партнера.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Описание акции.",
          "type": "string"
        },
        "isSum": {
          "description": "Флаг, показывающий, что акция суммируется с остальными.",
          "type": "boolean"
        },
        "priority": {
          "description": "Приоритет акции.",
          "type": "integer",
          "format": "int32"
        },
        "loyaltyProgramId": {
          "description": "ID партнера.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CreateOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.CreateOfferModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfPartnerModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PartnerModel"
          },
          "xml": {
            "name": "PartnerModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.PartnerModel, Loymax.WebSites.Common"
    },
    "ResultModelOfOfferBriefModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferBriefModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Offers.OfferBriefModel, Loymax.SystemApi"
    },
    "OfferModel": {
      "description": "Модель акции.",
      "properties": {
        "id": {
          "description": "Id.",
          "type": "integer",
          "format": "int32"
        },
        "versionID": {
          "description": "Id версии.",
          "type": "integer",
          "format": "int32"
        },
        "warning": {
          "description": "Предупреждение.",
          "type": "string"
        },
        "rejectReason": {
          "description": "Причина отклонения.",
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/OfferInfoModel",
          "description": "Модель с дополнительной информацией."
        },
        "draft": {
          "$ref": "#/definitions/OfferDraftModel",
          "description": "Модель черновика."
        },
        "operations": {
          "description": "Операции.",
          "type": "string",
          "enum": [
            "None",
            "View",
            "Start",
            "Stop",
            "Edit",
            "Copy",
            "Delete",
            "Accept",
            "Apply",
            "RestoreFromArchive"
          ],
          "x-loymax-type": "Loymax.Business.Offers.Interfaces.Operation, Loymax.Business.Offers.Interfaces",
          "x-loymax-enum-type": "Operation"
        },
        "approvalComment": {
          "description": "Комментарий при подтверждении.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferModel, Loymax.SystemApi"
    },
    "OfferInfoModel": {
      "description": "Модель с информацией об акции.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "beginTime": {
          "description": "Дата начала.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "isSum": {
          "description": "Суммируемая.",
          "type": "boolean"
        },
        "priority": {
          "description": "Приоритет.",
          "type": "integer",
          "format": "int32"
        },
        "partner": {
          "$ref": "#/definitions/PartnerModel",
          "description": "Партнер."
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "lastChangeDate": {
          "description": "Дата последнего изменения.",
          "type": "string",
          "format": "date-time"
        },
        "creator": {
          "description": "Создатель.",
          "type": "string"
        },
        "lastChangeUser": {
          "description": "Автор последних изменений.",
          "type": "string"
        },
        "externalID": {
          "description": "Внешний ID.",
          "type": "string"
        },
        "applyChangesDate": {
          "description": "Дата подтверждения.",
          "type": "string",
          "format": "date-time"
        },
        "expirationDate": {
          "description": "Дата завершения.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "Состояние акции.",
          "type": "string",
          "enum": [
            "Run",
            "Stop",
            "Archived"
          ],
          "x-loymax-type": "Loymax.WebSites.Common.Models.OfferState, Loymax.WebSites.Common",
          "x-loymax-enum-type": "OfferState"
        },
        "offerCategory": {
          "$ref": "#/definitions/OfferCategoryViewModel",
          "description": "Категория акции."
        },
        "marketingCampaign": {
          "$ref": "#/definitions/MarketingCampaignViewModel",
          "description": "Маркетинговая кампания."
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgramInfoViewModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "OfferInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferInfoModel, Loymax.SystemApi"
    },
    "OfferDraftModel": {
      "properties": {
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "creator": {
          "type": "string"
        },
        "lastChangeDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastChangeUser": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "None",
            "Edit",
            "Applied",
            "Rejected"
          ],
          "x-loymax-type": "Loymax.Entities.OfferDraftState, Loymax.Entities",
          "x-loymax-enum-type": "OfferDraftState"
        }
      },
      "xml": {
        "name": "OfferDraftModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.OfferDraftModel, Loymax.WebSites.Common"
    },
    "ResultModelOfOfferModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Offers.OfferModel, Loymax.SystemApi"
    },
    "OfferRuleModel": {
      "properties": {
        "eventID": {
          "type": "integer",
          "format": "int32"
        },
        "eventName": {
          "type": "string"
        },
        "offerActionChains": {
          "items": {
            "$ref": "#/definitions/OfferActionChainModel"
          },
          "xml": {
            "name": "OfferActionChainModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferRuleModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.OfferRuleModel, Loymax.WebSites.Common"
    },
    "OfferActionChainModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "actions": {
          "items": {
            "$ref": "#/definitions/OfferActionModel"
          },
          "xml": {
            "name": "OfferActionModel",
            "wrapped": true
          },
          "type": "array"
        },
        "filters": {
          "items": {
            "$ref": "#/definitions/OfferFilterModel"
          },
          "xml": {
            "name": "OfferFilterModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferActionChainModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.Offer.OfferActionChainModel, Loymax.WebSites.Common"
    },
    "OfferActionModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "actionType": {
          "$ref": "#/definitions/ActionTypeModel"
        }
      },
      "xml": {
        "name": "OfferActionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.OfferActionModel, Loymax.WebSites.Common"
    },
    "OfferFilterModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filterType": {
          "$ref": "#/definitions/FilterTypeModel"
        }
      },
      "xml": {
        "name": "OfferFilterModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.OfferFilterModel, Loymax.WebSites.Common"
    },
    "ActionTypeModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ActionTypeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.ActionTypeModel, Loymax.WebSites.Common"
    },
    "ResultModelOfListOfOfferRuleModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferRuleModel"
          },
          "xml": {
            "name": "OfferRuleModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.OfferRuleModel, Loymax.WebSites.Common"
    },
    "EditOfferModelBase": {
      "description": "Базовый класс для работы с акцией.",
      "required": [],
      "properties": {
        "offerId": {
          "description": "Id акции.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "EditOfferModelBase"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.EditOfferModelBase, Loymax.SystemApi"
    },
    "EditOfferModel": {
      "description": "Модель редактирования акции.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "name": {
          "description": "Название акции.",
          "type": "string"
        },
        "description": {
          "description": "Описание акции.",
          "type": "string"
        },
        "isSum": {
          "description": "Флаг, указывающий, что акция суммируется с остальными.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "EditOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.EditOfferModel, Loymax.SystemApi"
    },
    "SendOfferToApprovalModel": {
      "description": "Модель отправки акции на согласование.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "applyChangesDate": {
          "description": "Дата вступления изменений в силу.",
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "description": "Комментарий для согласования.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SendOfferToApprovalModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.SendOfferToApprovalModel, Loymax.SystemApi"
    },
    "AcceptOfferChangesModel": {
      "description": "Модель применения изменений для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "applyChangesDate": {
          "description": "Дата вступления изменений в силу.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "AcceptOfferChangesModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.AcceptOfferChangesModel, Loymax.SystemApi"
    },
    "OfferPeriodModel": {
      "description": "Модель для изменения приоритета акции.",
      "properties": {
        "startDate": {
          "description": "Начало.",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "Начало.",
          "type": "string",
          "format": "date-time"
        },
        "daysOfWeek": {
          "description": "Дни недели.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-loymax-enum-type": "DayOfWeek"
          },
          "type": "array",
          "x-loymax-enum-type": "DayOfWeek",
          "x-loymax-collection-type": "DayOfWeek[]"
        },
        "beginTime": {
          "$ref": "#/definitions/HourMinuteModel",
          "description": "Время начала."
        },
        "endTime": {
          "$ref": "#/definitions/HourMinuteModel",
          "description": "Время окончания."
        }
      },
      "xml": {
        "name": "OfferPeriodModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OfferPeriodModel, Loymax.SystemApi"
    },
    "HourMinuteModel": {
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "HourMinuteModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.HourMinuteModel, Loymax.Common"
    },
    "ResultModelOfOfferPeriodModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferPeriodModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Offers.OfferPeriodModel, Loymax.SystemApi"
    },
    "EditOfferPriorityModel": {
      "description": "Модель для изменения приоритета акции.",
      "properties": {
        "priority": {
          "description": "Приоритет акции.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "EditOfferPriorityModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.EditOfferPriorityModel, Loymax.SystemApi"
    },
    "RejectOfferChangesModel": {
      "description": "Модель отклонения изменений акции.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "reason": {
          "description": "Причина отклонения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "RejectOfferChangesModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.RejectOfferChangesModel, Loymax.SystemApi"
    },
    "GetOfferVersionChangesModel": {
      "description": "Модель для получения изменений версии акции.",
      "properties": {
        "offerVersionId": {
          "description": "Id версии акции.",
          "type": "integer",
          "format": "int32"
        },
        "mode": {
          "description": "Режим получения изменений.",
          "type": "string",
          "enum": [
            "View",
            "Edit",
            "Accept"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Offers.ViewMode, Loymax.SystemApi",
          "x-loymax-enum-type": "ViewMode"
        }
      },
      "xml": {
        "name": "GetOfferVersionChangesModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.GetOfferVersionChangesModel, Loymax.SystemApi"
    },
    "OfferVersionChangeModel": {
      "properties": {
        "elementName": {
          "type": "string"
        },
        "changesDate": {
          "type": "string",
          "format": "date-time"
        },
        "changeType": {
          "type": "string",
          "enum": [
            "ItemAdded",
            "ItemRemoved",
            "ItemChanged"
          ],
          "x-loymax-type": "Loymax.Business.Offers.Interfaces.ChangeType, Loymax.Business.Offers.Interfaces",
          "x-loymax-enum-type": "ChangeType"
        },
        "changesAuthor": {
          "type": "string"
        },
        "changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferVersionChangeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Offers.Interfaces.OfferVersionChangeModel, Loymax.Business.Offers.Interfaces"
    },
    "ResultModelOfListOfOfferVersionChangeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferVersionChangeModel"
          },
          "xml": {
            "name": "OfferVersionChangeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Business.Offers.Interfaces.OfferVersionChangeModel, Loymax.Business.Offers.Interfaces"
    },
    "ResultModelOfListOfInt32": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[System.Int32, mscorlib"
    },
    "FilterViewModel": {
      "required": [],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeletedFilterType": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "FilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.FilterViewModel, Loymax.WebSites.Common"
    },
    "ResultModelOfListOfFilterViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/FilterViewModel"
          },
          "xml": {
            "name": "FilterViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.FilterViewModel, Loymax.WebSites.Common"
    },
    "ResultModelOfFilterViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/FilterViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.WebSites.Common.Models.FilterViewModel, Loymax.WebSites.Common"
    },
    "ResultModelOfListOfCardState": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "string",
            "enum": [
              "Emitted",
              "Packed",
              "Activated",
              "Replaced",
              "Creating",
              "Created",
              "Prepared",
              "Issued"
            ],
            "x-loymax-type": "Loymax.Entities.CardState, Loymax.Entities",
            "x-loymax-enum-type": "CardState"
          },
          "xml": {
            "name": "CardState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CardState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CardState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<CardState>"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Entities.CardState, Loymax.Entities"
    },
    "ResultModelOfListOfPersonState": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "string",
            "enum": [
              "Normal",
              "Registered",
              "Anonymous",
              "Deleted",
              "Deregistered"
            ],
            "x-loymax-type": "Loymax.Common.Portable.Model.PersonState, Loymax.Common.Portable",
            "x-loymax-enum-type": "PersonState"
          },
          "xml": {
            "name": "PersonState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "PersonState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<PersonState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<PersonState>"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.Portable.Model.PersonState, Loymax.Common.Portable"
    },
    "ResultModelOfListOfDayOfWeek": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-loymax-enum-type": "DayOfWeek"
          },
          "type": "array",
          "x-loymax-enum-type": "DayOfWeek",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<DayOfWeek>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<DayOfWeek>"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[System.DayOfWeek, mscorlib"
    },
    "CardEmissionModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "prefix": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CardEmissionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Domain.Contract.Model.Emission.CardEmissionModel, Loymax.Domain.Contract"
    },
    "ResultModelOfListOfCardEmissionModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/CardEmissionModel"
          },
          "xml": {
            "name": "CardEmissionModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Domain.Contract.Model.Emission.CardEmissionModel, Loymax.Domain.Contract"
    },
    "OfferActionChainViewModel": {
      "description": "ViewModel цепочки событий.",
      "properties": {
        "id": {
          "description": "Идентификатор цепочки.",
          "type": "integer",
          "format": "int32"
        },
        "eventType": {
          "description": "Тип события.",
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "name": {
          "description": "Название цепочки.",
          "type": "string"
        },
        "order": {
          "description": "Порядковый номер цепочки.",
          "type": "integer",
          "format": "int32"
        },
        "parentActionId": {
          "description": "Ссылка на действие-владельца цепочки.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "OfferActionChainViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Chains.OfferActionChainViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfOfferActionChainViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferActionChainViewModel"
          },
          "xml": {
            "name": "OfferActionChainViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Offers.Chains.OfferActionChainViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Offers.Chains.OfferActionChainViewModel, Loymax.SystemApi"
    },
    "CreateOfferActionChainModel": {
      "description": "Модель для создания цепочки событий.",
      "properties": {
        "eventInfo": {
          "$ref": "#/definitions/OfferEventInfoModel",
          "description": "Тип события."
        },
        "name": {
          "description": "Название цепочки.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateOfferActionChainModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Chains.CreateOfferActionChainModel, Loymax.SystemApi"
    },
    "OfferEventInfoModel": {
      "properties": {
        "eventType": {
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "parentActionId": {
          "type": "integer",
          "format": "int32"
        },
        "parentEventType": {
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        }
      },
      "xml": {
        "name": "OfferEventInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.OfferEventInfoModel, Loymax.WebSites.Common"
    },
    "ResultModelOfOfferActionChainViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferActionChainViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Offers.Chains.OfferActionChainViewModel, Loymax.SystemApi"
    },
    "OfferEventModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "actions": {
          "items": {
            "$ref": "#/definitions/ActionTypeModel"
          },
          "xml": {
            "name": "ActionTypeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferEventModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.OfferEventModel, Loymax.WebSites.Common"
    },
    "ResultModelOfListOfOfferEventModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferEventModel"
          },
          "xml": {
            "name": "OfferEventModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.OfferEventModel, Loymax.WebSites.Common"
    },
    "ResultModelOfListOfActionTypeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ActionTypeModel"
          },
          "xml": {
            "name": "ActionTypeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.ActionTypeModel, Loymax.WebSites.Common"
    },
    "ResultModelOfListOfOfferEventInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferEventInfoModel"
          },
          "xml": {
            "name": "OfferEventInfoModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.WebSites.Common.Models.OfferEventInfoModel, Loymax.WebSites.Common"
    },
    "ActionPlacementInfo": {
      "properties": {
        "chainNumber": {
          "type": "integer",
          "format": "int32"
        },
        "eventType": {
          "type": "string",
          "enum": [
            "OnPurchaseCalculate",
            "OnAttachPhone",
            "OnPurchaseConfirm",
            "OnPurchasePayment",
            "OnBalanceRequest",
            "OnCardIssue",
            "OnCardActivation",
            "OnSocialActivity",
            "OnSocialGroupJoin",
            "OnFriendInvite",
            "OnSocialGroupLeave",
            "OnQuestionnaireUpdate",
            "OnMobileAppInstall",
            "OnEndPersonRegistration",
            "OnSocialNetworkLink",
            "OnBonusLifetimeExpired",
            "OnBirthday",
            "OnPurchaseRefund",
            "OnReferralPurchase",
            "OnPurchaseCancel",
            "OnRemoveSocialActivity",
            "OnPurchaseDiscount",
            "OnSendPasswordToCheque",
            "OnGoodsSetProcess",
            "OnAttachEmail",
            "OnBonusLifetimeActivation",
            "OnPurchasePaymentCalculate",
            "OnPurchasePaymentCancel",
            "OnCouponPurchased",
            "OnCouponRefunded",
            "OnPurchaseDeposit",
            "OnCardAttach",
            "OnCardReplace",
            "OnExternalCardReplace",
            "OnPurchaseRefundCalculate",
            "OnManualCharge",
            "OnManualWithdraw"
          ],
          "x-loymax-type": "Loymax.Entities.OfferEventType, Loymax.Entities",
          "x-loymax-enum-type": "OfferEventType"
        },
        "parentActionId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ActionPlacementInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Domain.Contract.Model.Offer.ActionPlacementInfo, Loymax.Domain.Contract"
    },
    "ResultModelOfActionPlacementInfo": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ActionPlacementInfo",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Domain.Contract.Model.Offer.ActionPlacementInfo, Loymax.Domain.Contract"
    },
    "OfferActionViewModelBase": {
      "description": "Базовая модель для создания/редактирования действий акции.",
      "required": [],
      "properties": {
        "actionId": {
          "description": "Id действия. Если указан, редактируется действие, иначе создается новое.",
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "description": "Порядок действия.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "OfferActionViewModelBase"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.OfferActionViewModelBase, Loymax.SystemApi"
    },
    "ResultModelOfListOfOfferActionViewModelBase": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferActionViewModelBase"
          },
          "xml": {
            "name": "OfferActionViewModelBase",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Offers.Actions.OfferActionViewModelBase, Loymax.SystemApi"
    },
    "ResultModelOfOfferActionViewModelBase": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferActionViewModelBase",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Offers.Actions.OfferActionViewModelBase, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfOfferCategoryViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OfferCategoryViewModel"
          },
          "xml": {
            "name": "OfferCategoryViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Offers.OfferCategoryViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Offers.OfferCategoryViewModel, Loymax.SystemApi"
    },
    "ResultModelOfOfferCategoryViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferCategoryViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Offers.OfferCategoryViewModel, Loymax.SystemApi"
    },
    "OfferDto": {
      "description": "Акция.",
      "properties": {
        "id": {
          "description": "Внешний идентификатор акции.",
          "type": "string"
        },
        "title": {
          "description": "Наименование.",
          "type": "string"
        },
        "applyChangesDateValue": {
          "description": "Дата, начиная с которой акция начинает действовать, если она в состоянии \"Running\" (pure xml).\r\nTODO: в xsd определить свой тип для даты (строка с регулярным выражением \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.",
          "type": "string"
        },
        "expirationDateValue": {
          "description": "Дата, начиная с которой акция заканчивает действовать (pure xml).\r\nTODO: в xsd определить свой тип для даты (строка с регулярным выражением \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.",
          "type": "string"
        },
        "workingState": {
          "description": "Рабочее состояние акции.",
          "type": "string",
          "enum": [
            "Stopped",
            "Running"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.OfferWorkingState, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "OfferWorkingState"
        },
        "changesState": {
          "description": "Состояние изменений в акции.",
          "type": "string",
          "enum": [
            "Editing",
            "OnApproval",
            "Approved"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.OfferChangesState, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "OfferChangesState"
        },
        "priority": {
          "description": "Приоритет акции.",
          "type": "integer",
          "format": "int32"
        },
        "isSum": {
          "description": "Суммируемая акция.",
          "type": "boolean"
        },
        "timeRefinement": {
          "$ref": "#/definitions/TimeRefinementDto",
          "description": "Уточнение времени действия акции."
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "category": {
          "description": "Категория.",
          "type": "string"
        },
        "marketingCampaign": {
          "description": "Маркетинговая кампания.",
          "type": "integer",
          "format": "int32"
        },
        "partners": {
          "$ref": "#/definitions/OfferPartners",
          "description": "Партнеры, участвующие в акции."
        },
        "loyaltyPrograms": {
          "$ref": "#/definitions/OfferLoyaltyPrograms",
          "description": "Программы лояльности, в которых действует акция."
        },
        "pointsOfSales": {
          "$ref": "#/definitions/PointsOfSales",
          "description": "Магазины, участвующие в акции."
        },
        "targetGroups": {
          "description": "Список ЦА.",
          "items": {
            "$ref": "#/definitions/BaseTargetGroupDto"
          },
          "xml": {
            "name": "BaseTargetGroupDto",
            "wrapped": true
          },
          "type": "array"
        },
        "rules": {
          "$ref": "#/definitions/OfferRules",
          "description": "Правила для акции."
        },
        "applyChangesDate": {
          "description": "Дата, начиная с которой акция начинает действовать, если она в состоянии \"Running\".",
          "type": "string",
          "format": "date-time"
        },
        "expirationDate": {
          "description": "Дата, начиная с которой акция заканчивает действовать.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "OfferDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.OfferDto, Loymax.ImportExport.Dto"
    },
    "TimeRefinementDto": {
      "description": "Уточнение времени действия акции.",
      "properties": {
        "daysOfWeek": {
          "description": "Дни недели.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-loymax-enum-type": "DayOfWeek"
          },
          "type": "array",
          "x-loymax-enum-type": "DayOfWeek",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<DayOfWeek>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<DayOfWeek>"
        },
        "beginTime": {
          "$ref": "#/definitions/HourMinuteModelDto",
          "description": "Время начала."
        },
        "endTime": {
          "$ref": "#/definitions/HourMinuteModelDto",
          "description": "Время конца."
        }
      },
      "xml": {
        "name": "TimeRefinementDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.TimeRefinementDto, Loymax.ImportExport.Dto"
    },
    "OfferPartners": {
      "description": "Партнеры, к которым относится акция.",
      "properties": {
        "partners": {
          "description": "Коллекция партнеров.",
          "items": {
            "$ref": "#/definitions/PartnerDto"
          },
          "xml": {
            "name": "PartnerDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferPartners"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.OfferPartners, Loymax.ImportExport.Dto"
    },
    "OfferLoyaltyPrograms": {
      "description": "Программы лояльности, к которым относится акция.",
      "properties": {
        "loyaltyPrograms": {
          "description": "Коллекция программ лояльности.",
          "items": {
            "$ref": "#/definitions/LoyaltyProgramDto"
          },
          "xml": {
            "name": "LoyaltyProgramDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferLoyaltyPrograms"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.OfferLoyaltyPrograms, Loymax.ImportExport.Dto"
    },
    "PointsOfSales": {
      "description": "Точки продажи.",
      "properties": {
        "merchants": {
          "description": "Коллекция магазинов.",
          "items": {
            "$ref": "#/definitions/MerchantDto"
          },
          "xml": {
            "name": "MerchantDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PointsOfSales"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.PointsOfSales, Loymax.ImportExport.Dto"
    },
    "BaseTargetGroupDto": {
      "description": "Целевая аудитория.",
      "required": [],
      "properties": {},
      "xml": {
        "name": "BaseTargetGroupDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TargetGroupFilter.BaseTargetGroupDto, Loymax.ImportExport.Dto"
    },
    "OfferRules": {
      "description": "Правила обработки событий для акции.",
      "properties": {
        "events": {
          "description": "События.",
          "items": {
            "$ref": "#/definitions/OfferEventDto"
          },
          "xml": {
            "name": "OfferEventDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferRules"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.OfferRules, Loymax.ImportExport.Dto"
    },
    "HourMinuteModelDto": {
      "description": "Модель для представления времени Часы минуты.",
      "properties": {
        "hour": {
          "description": "Часы.",
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "description": "Минуты.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "HourMinuteModelDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.HourMinuteModelDto, Loymax.ImportExport.Dto"
    },
    "PartnerDto": {
      "description": "Партнер.",
      "properties": {
        "id": {
          "description": "Идентификатор партнера.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PartnerDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.PartnerDto, Loymax.ImportExport.Dto"
    },
    "LoyaltyProgramDto": {
      "description": "Программа лояльности.",
      "properties": {
        "id": {
          "description": "Идентификатор программы лояльности.",
          "type": "string"
        }
      },
      "xml": {
        "name": "LoyaltyProgramDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.LoyaltyProgramDto, Loymax.ImportExport.Dto"
    },
    "MerchantDto": {
      "description": "Магазин.",
      "properties": {
        "id": {
          "description": "Идентификатор магазина.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MerchantDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.MerchantDto, Loymax.ImportExport.Dto"
    },
    "OfferEventDto": {
      "description": "Событие для акции.",
      "required": [],
      "properties": {
        "chains": {
          "description": "Цепочки действий для обработки события.",
          "items": {
            "$ref": "#/definitions/OfferActionsChainDto"
          },
          "xml": {
            "name": "OfferActionsChainDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OfferEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.OfferEventDto, Loymax.ImportExport.Dto"
    },
    "OfferActionsChainDto": {
      "description": "Цепочка действий акции.",
      "properties": {
        "filters": {
          "description": "Фильтры цепочки.",
          "items": {
            "$ref": "#/definitions/FilterDto"
          },
          "xml": {
            "name": "FilterDto",
            "wrapped": true
          },
          "type": "array"
        },
        "actions": {
          "description": "Действия.",
          "items": {
            "$ref": "#/definitions/ActionDto"
          },
          "xml": {
            "name": "ActionDto",
            "wrapped": true
          },
          "type": "array"
        },
        "order": {
          "description": "Порядковый номер цепочки.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название цепочки.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OfferActionsChainDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.OfferActionsChainDto, Loymax.ImportExport.Dto"
    },
    "FilterDto": {
      "description": "Фильтр для цепочек действий.",
      "required": [],
      "properties": {
        "name": {
          "description": "Имя фильтра.",
          "type": "string"
        }
      },
      "xml": {
        "name": "FilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.FilterDto, Loymax.ImportExport.Dto"
    },
    "ActionDto": {
      "description": "Действие акции.",
      "required": [],
      "properties": {
        "order": {
          "description": "Порядковый номер действия в цепочке.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "Id действия в цепочке.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.ActionDto, Loymax.ImportExport.Dto"
    },
    "OffersExportResponse": {
      "description": "Ответ на запрос экспорта акций.",
      "allOf": [
        {
          "$ref": "#/definitions/XmlProtocolMessage"
        }
      ],
      "properties": {
        "offers": {
          "description": "Акции.",
          "items": {
            "$ref": "#/definitions/OfferDto"
          },
          "xml": {
            "name": "OfferDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OffersExportResponse"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Messages.OffersExportResponse, Loymax.ImportExport.Dto"
    },
    "OffersImportRequest": {
      "description": "Запрос импорта акций.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/XmlProtocolMessage"
        }
      ],
      "properties": {
        "offers": {
          "description": "Акции.",
          "items": {
            "$ref": "#/definitions/OfferDto"
          },
          "xml": {
            "name": "OfferDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OffersImportRequest"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Messages.OffersImportRequest, Loymax.ImportExport.Dto"
    },
    "OffersImportModel": {
      "description": "Модель импортируемых акций.",
      "allOf": [
        {
          "$ref": "#/definitions/OffersImportRequest"
        }
      ],
      "properties": {},
      "xml": {
        "name": "OffersImportModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.OffersImportModel, Loymax.SystemApi"
    },
    "OffersImportResponse": {
      "description": "Ответ на запрос импорта акций.",
      "properties": {
        "inserted": {
          "description": "Количество новых акций.",
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "description": "Количество обновленных акций.",
          "type": "integer",
          "format": "int32"
        },
        "skipped": {
          "description": "Количество неизмененных акций.",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "description": "Ошибки импорта по акциям.",
          "items": {
            "$ref": "#/definitions/OfferImportError"
          },
          "xml": {
            "name": "OfferImportError",
            "wrapped": true
          },
          "type": "array"
        },
        "offerImportWarnings": {
          "description": "Предупреждения, возникшие при импорте, с идентификаторами акций.",
          "items": {
            "$ref": "#/definitions/OfferImportWarning"
          },
          "xml": {
            "name": "OfferImportWarning",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "OffersImportResponse"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Messages.OffersImportResponse, Loymax.ImportExport.Dto"
    },
    "OfferImportError": {
      "description": "Ошибка импорта акции.",
      "properties": {
        "offerID": {
          "description": "Внешний идентификатор акции.",
          "type": "string"
        },
        "errorCode": {
          "description": "Код ошибки.",
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "description": "Описание ошибки.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OfferImportError"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Messages.OfferImportError, Loymax.ImportExport.Dto"
    },
    "OfferImportWarning": {
      "description": "Предупреждение, возникшие при импорте, с идентификатором акций.",
      "properties": {
        "offerId": {
          "description": "Идентификатор акции.",
          "type": "string"
        },
        "warning": {
          "$ref": "#/definitions/ImportWarning",
          "description": "Предупреждение, возникающее при импорте."
        }
      },
      "xml": {
        "name": "OfferImportWarning"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Messages.OfferImportWarning, Loymax.ImportExport.Dto"
    },
    "ImportWarning": {
      "description": "Предупреждение, возникающее при импорте.",
      "properties": {
        "descriptions": {
          "description": "Описания предупреждения.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributes": {
          "description": "Атрибуты предупреждения.",
          "items": {
            "$ref": "#/definitions/ImportWarningAttribute"
          },
          "xml": {
            "name": "ImportWarningAttribute",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ImportWarning"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Messages.ImportWarning, Loymax.ImportExport.Dto"
    },
    "ImportWarningAttribute": {
      "description": "Атрибут предупреждения.",
      "properties": {
        "name": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "value": {
          "description": "Значение атрибута.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ImportWarningAttribute"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Messages.ImportWarningAttribute, Loymax.ImportExport.Dto"
    },
    "ResultModelOfOffersImportResponse": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/OffersImportResponse",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.ImportExport.Dto.Offers.Messages.OffersImportResponse, Loymax.ImportExport.Dto"
    },
    "ResultModelOfListOfMerchantViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/MerchantViewModel"
          },
          "xml": {
            "name": "MerchantViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Partner.Merchant.MerchantViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfTargetGroupBriefViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/TargetGroupBriefViewModel"
          },
          "xml": {
            "name": "TargetGroupBriefViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.WebApi.Models.TargetGroupBriefViewModel, Loymax.Common.WebApi"
    },
    "EditOfferTargetGroupsModel": {
      "description": "Модель для редактирования списка ЦА для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "targetGroupIds": {
          "description": "Список Id целевых аудиторий.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "EditOfferTargetGroupsModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.EditOfferTargetGroupsModel, Loymax.SystemApi"
    },
    "OperationPayViewModel": {
      "description": "Модель операций оплаты по покупке.",
      "properties": {
        "payTypeViewModel": {
          "$ref": "#/definitions/PayTypeViewModel",
          "description": "Модель способа оплаты."
        },
        "info": {
          "description": "Информация по способу оплаты.",
          "type": "string"
        },
        "amount": {
          "description": "Оплаченная сумма с помощью определенного способа оплаты.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "OperationPayViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OperationPay.OperationPayViewModel, Loymax.SystemApi"
    },
    "PayTypeViewModel": {
      "description": "Модель представления способа оплаты.",
      "properties": {
        "id": {
          "description": "Identifire.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название способа оплаты.",
          "type": "string"
        },
        "logicalName": {
          "description": "Логическое имя способа оплаты.",
          "type": "string"
        },
        "description": {
          "description": "Описание способа оплаты.",
          "type": "string"
        },
        "isDefault": {
          "description": "Признак дефолтного способа оплаты.",
          "type": "boolean"
        },
        "isArchived": {
          "description": "Признак архивности способа оплаты.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PayTypeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OperationPay.PayType.PayTypeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfOperationPayViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OperationPayViewModel"
          },
          "xml": {
            "name": "OperationPayViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.OperationPay.OperationPayViewModel, Loymax.SystemApi"
    },
    "PartnerFilter": {
      "description": "Фильтр для партнеров.",
      "properties": {
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Подстрока для поиска по имени.",
          "type": "string"
        },
        "permission": {
          "description": "Выбираются партнеры, на которые текущий пользователь имеет указанное право.",
          "type": "string"
        },
        "orderByDesc": {
          "description": "Сортировать в обратном порядке.",
          "type": "boolean"
        },
        "sortingIds": {
          "description": "Список идентификаторов для первоочередного выбора.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "loyaltyPrograms": {
          "description": "Список ПЛ для фильтра по ПЛ.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PartnerFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.PartnerFilter, Loymax.SystemApi"
    },
    "ResultModelOfPartnerModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PartnerModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.WebSites.Common.Models.PartnerModel, Loymax.WebSites.Common"
    },
    "ExternalCardInfoModel": {
      "description": "Модель информации о карте партнера.",
      "properties": {
        "partnerInfoValues": {
          "description": "Информация от партнера.",
          "items": {
            "$ref": "#/definitions/PartnerAttributeValueModel"
          },
          "xml": {
            "name": "PartnerAttributeValueModel",
            "wrapped": true
          },
          "type": "array"
        },
        "questionnaireAnswers": {
          "description": "Ответы на вопросы анкеты.",
          "items": {
            "$ref": "#/definitions/PartnerAttributeValueModel"
          },
          "xml": {
            "name": "PartnerAttributeValueModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ExternalCardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.ExternalCardInfoModel, Loymax.SystemApi"
    },
    "PartnerAttributeValueModel": {
      "description": "Модель для значения партнерского атрибута.",
      "properties": {
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "value": {
          "description": "Значение атрибута.",
          "type": "string"
        },
        "displayName": {
          "description": "Имя для отображения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PartnerAttributeValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.PartnerAttributeValueModel, Loymax.SystemApi"
    },
    "ResultModelOfExternalCardInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ExternalCardInfoModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Cards.ExternalCardInfoModel, Loymax.SystemApi"
    },
    "SetPartnerUserAttributeValueModel": {
      "description": "Модель для задания партнёрского атрибута.",
      "properties": {
        "attributeLogicalName": {
          "description": "LogicalName атрибута.",
          "type": "string"
        },
        "attributeValue": {
          "description": "Значение атрибута.",
          "type": "object"
        }
      },
      "xml": {
        "name": "SetPartnerUserAttributeValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.UserAttributes.SetPartnerUserAttributeValueModel, Loymax.SystemApi"
    },
    "UserAttributeValueViewModel": {
      "description": "ViewModel для значения атрибута пользователя.",
      "properties": {
        "id": {
          "description": "Идентификатор значения атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeID": {
          "description": "Идентификатор атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "personID": {
          "description": "Идентификатор пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название атрибута.",
          "type": "string"
        },
        "stringValue": {
          "description": "Строковое значение атрибута.",
          "type": "string"
        },
        "boolValue": {
          "description": "Логическое значение атрибута.",
          "type": "boolean"
        },
        "intValue": {
          "description": "Целочисленное значение атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "doubleValue": {
          "description": "Значение атрибута с плавающей точкой.",
          "type": "number",
          "format": "double"
        },
        "dateValue": {
          "description": "Значеие атрибута в виде даты и времени.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "UserAttributeValueViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.UserAttributes.UserAttributeValueViewModel, Loymax.SystemApi"
    },
    "ResultModelOfUserAttributeValueViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/UserAttributeValueViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Partner.UserAttributes.UserAttributeValueViewModel, Loymax.SystemApi"
    },
    "PartnerCatalogViewModel": {
      "description": "Каталог партнера.",
      "properties": {
        "id": {
          "description": "ID.",
          "type": "integer",
          "format": "int32"
        },
        "guid": {
          "description": "GUID.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Название корневого элемента.",
          "type": "string"
        },
        "urlAddress": {
          "$ref": "#/definitions/UrlAuthViewModel",
          "description": "URL-адрес для загрузки каталога."
        }
      },
      "xml": {
        "name": "PartnerCatalogViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.PartnerCatalogViewModel, Loymax.SystemApi"
    },
    "UrlAuthViewModel": {
      "description": "Модель представления URL-адреса с авторизацией.",
      "properties": {
        "id": {
          "description": "ID.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "Url.",
          "type": "string"
        },
        "authType": {
          "description": "Тип аутентификации.",
          "type": "string",
          "enum": [
            "Standard"
          ],
          "x-loymax-type": "Loymax.Entities.UrlAuthType, Loymax.Entities",
          "x-loymax-enum-type": "UrlAuthType"
        },
        "login": {
          "description": "Логин.",
          "type": "string"
        },
        "password": {
          "description": "Пароль.",
          "type": "string"
        },
        "cert": {
          "description": "Сертификат.",
          "type": "string"
        },
        "identifier": {
          "description": "Идентификатор.",
          "type": "string"
        }
      },
      "xml": {
        "name": "UrlAuthViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.UrlAuth.UrlAuthViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfPartnerCatalogViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PartnerCatalogViewModel"
          },
          "xml": {
            "name": "PartnerCatalogViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Partner.PartnerCatalogViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPartnerCatalogViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PartnerCatalogViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Partner.PartnerCatalogViewModel, Loymax.SystemApi"
    },
    "DeviceListFilter": {
      "description": "Фильтр запроса списка касс.",
      "properties": {
        "from": {
          "description": "С какого.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько.",
          "type": "integer",
          "format": "int32"
        },
        "merchantIds": {
          "description": "Список идентификаторов магазинов.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "legalId": {
          "description": "Идентификатор юр. лица.",
          "type": "integer",
          "format": "int32"
        },
        "logicalId": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "mode": {
          "description": "Режим вывода по признаку удаления.",
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "isOrderedByAscending": {
          "description": "Режим прямой сортировки.",
          "type": "boolean"
        },
        "debetOnly": {
          "description": "Выбор только дебетовых касс.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "DeviceListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.BatchOperations.DeviceListFilter, Loymax.SystemApi"
    },
    "MerchantInfoShortViewModel": {
      "description": "Сокращенная информация о магазине.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "isDeleted": {
          "description": "Признак архивности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "MerchantInfoShortViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.Merchant.MerchantInfoShortViewModel, Loymax.SystemApi"
    },
    "DeviceViewModel": {
      "description": "Модель представления для сущности девайса (кассы).",
      "allOf": [
        {
          "$ref": "#/definitions/DeviceBriefViewModel"
        }
      ],
      "properties": {
        "merchant": {
          "$ref": "#/definitions/MerchantInfoShortViewModel",
          "description": "Магазин."
        },
        "legal": {
          "$ref": "#/definitions/LegalViewModel",
          "description": "Юридическое лицо."
        },
        "type": {
          "$ref": "#/definitions/DeviceTypeViewModel",
          "description": "Тип."
        },
        "accountGroupId": {
          "description": "Идентификатор группы счетов.",
          "type": "integer",
          "format": "int32"
        },
        "operationAuthType": {
          "description": "Тип аутентификации.",
          "type": "string",
          "enum": [
            "None",
            "LastFourNumbers",
            "PINCode"
          ],
          "x-loymax-type": "Loymax.Entities.DeviceOperationAuthType, Loymax.Entities",
          "x-loymax-enum-type": "DeviceOperationAuthType"
        },
        "refundType": {
          "description": "Тип возврата.",
          "type": "string",
          "enum": [
            "Normal",
            "BonusFirst"
          ],
          "x-loymax-type": "Loymax.Entities.RefundType, Loymax.Entities",
          "x-loymax-enum-type": "RefundType"
        },
        "isPerUnit": {
          "description": "Признак расчета на каждую единицу в позиции.",
          "type": "boolean"
        },
        "isDeleted": {
          "description": "Удалено.",
          "type": "boolean"
        },
        "urlAuth": {
          "$ref": "#/definitions/UrlAuthViewModel",
          "description": "URL-адрес с авторизацией."
        },
        "currency": {
          "$ref": "#/definitions/CurrencyBaseModel",
          "description": "Валюта кассы."
        },
        "certificate": {
          "description": "Сертификат с публичным ключём кассы.",
          "type": "string"
        },
        "requestAuthType": {
          "description": "ЭЦП.",
          "type": "string",
          "enum": [
            "None",
            "Signature"
          ],
          "x-loymax-type": "Loymax.Entities.RequestAuthType, Loymax.Entities",
          "x-loymax-enum-type": "RequestAuthType"
        }
      },
      "xml": {
        "name": "DeviceViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Devices.DeviceViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfDeviceViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DeviceViewModel"
          },
          "xml": {
            "name": "DeviceViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Devices.DeviceViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Devices.DeviceViewModel, Loymax.SystemApi"
    },
    "DevicesForApplicationFilter": {
      "description": "Фильтр для касс приложений.",
      "properties": {
        "from": {
          "description": "Начало выборки.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Количество.",
          "type": "integer",
          "format": "int32"
        },
        "logicalId": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "oAauthApplicationId": {
          "description": "Логическое имя.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DevicesForApplicationFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OAuth.Application.DevicesForApplicationFilter, Loymax.SystemApi"
    },
    "ResultModelOfDeviceViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Devices.DeviceViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfDeviceTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DeviceTypeViewModel"
          },
          "xml": {
            "name": "DeviceTypeViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Devices.DeviceTypeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfLegalViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/LegalViewModel"
          },
          "xml": {
            "name": "LegalViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.LegalViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.LegalViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfLegalViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/LegalViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.WebApi.Models.LegalViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfListOfDeviceBriefViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DeviceBriefViewModel"
          },
          "xml": {
            "name": "DeviceBriefViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Devices.DeviceBriefViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfAccountViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/AccountViewModel"
          },
          "xml": {
            "name": "AccountViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.Legals.AccountViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.Legals.AccountViewModel, Loymax.SystemApi"
    },
    "ResultModelOfMerchantViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/MerchantViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Partner.Merchant.MerchantViewModel, Loymax.SystemApi"
    },
    "PartnerNotifyGatewayViewModel": {
      "description": "Вью модель для шлюзов партнера.",
      "properties": {
        "id": {
          "description": "ИД.",
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "partnerId": {
          "description": "ID партнера.",
          "type": "integer",
          "format": "int32"
        },
        "gateway": {
          "$ref": "#/definitions/NotificationGatewayBriefViewModel",
          "description": "Шлюз."
        }
      },
      "xml": {
        "name": "PartnerNotifyGatewayViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Partner.PartnerNotifyGateway.PartnerNotifyGatewayViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfPartnerNotifyGatewayViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PartnerNotifyGatewayViewModel"
          },
          "xml": {
            "name": "PartnerNotifyGatewayViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.PartnerNotifyGateway.PartnerNotifyGatewayViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Partner.PartnerNotifyGateway.PartnerNotifyGatewayViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPartnerNotifyGatewayViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PartnerNotifyGatewayViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Partner.PartnerNotifyGateway.PartnerNotifyGatewayViewModel, Loymax.SystemApi"
    },
    "Item": {
      "description": "Описание доступного значения.",
      "properties": {
        "id": {
          "description": "Идентификатор элемента.",
          "type": "string"
        },
        "name": {
          "description": "Имя элемента.",
          "type": "string"
        }
      },
      "xml": {
        "name": "Item"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Attributes.PartnerUserAttributeViewModel+Item, Loymax.SystemApi"
    },
    "PartnerUserAttributeViewModel": {
      "description": "ViewModel для партнерского атрибута пользователя.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseUserAttributeViewModel"
        }
      ],
      "properties": {
        "type": {
          "description": "Тип атрибута.",
          "type": "string",
          "enum": [
            "Double",
            "String",
            "Bool",
            "RadioString",
            "Integer",
            "Date"
          ],
          "x-loymax-type": "Loymax.Entities.PartnerInfoDataType, Loymax.Entities",
          "x-loymax-enum-type": "PartnerInfoDataType"
        },
        "items": {
          "description": "Доступные значения  (для типа {Loymax.Entities.PartnerInfoDataType.RadioString}).",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "xml": {
            "name": "Item",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PartnerUserAttributeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Attributes.PartnerUserAttributeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfPartnerUserAttributeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PartnerUserAttributeViewModel"
          },
          "xml": {
            "name": "PartnerUserAttributeViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Attributes.PartnerUserAttributeViewModel, Loymax.SystemApi"
    },
    "PasswordRuleViewModel": {
      "description": "Модель представления для {Loymax.Domain.Contract.Model.Person.Password.IPasswordRule}.",
      "properties": {
        "type": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "Length",
            "LatinCharacters",
            "CapitalLetters",
            "Numbers",
            "SpecialCharacters"
          ],
          "x-loymax-type": "Loymax.Common.PasswordRuleType, Loymax.Common",
          "x-loymax-enum-type": "PasswordRuleType"
        },
        "isUsed": {
          "description": "Используется.",
          "type": "boolean"
        },
        "isRequired": {
          "description": "Обязательное.",
          "type": "boolean"
        },
        "minCount": {
          "description": "Минимальное количество.",
          "type": "integer",
          "format": "int32"
        },
        "maxCount": {
          "description": "Максимальное количество.",
          "type": "integer",
          "format": "int32"
        },
        "additionalInformation": {
          "description": "Дополнительная информация.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PasswordRuleViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.PasswordRequirements.PasswordRuleViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfPasswordRuleViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PasswordRuleViewModel"
          },
          "xml": {
            "name": "PasswordRuleViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.PasswordRequirements.PasswordRuleViewModel, Loymax.SystemApi"
    },
    "PasswordRequirementViewModel": {
      "description": "Требование к паролю.",
      "properties": {
        "type": {
          "description": "Тип правила.",
          "type": "string",
          "enum": [
            "Length",
            "LatinCharacters",
            "CapitalLetters",
            "Numbers",
            "SpecialCharacters"
          ],
          "x-loymax-type": "Loymax.Common.PasswordRuleType, Loymax.Common",
          "x-loymax-enum-type": "PasswordRuleType"
        },
        "expression": {
          "description": "Регулярное выражение для проверки.",
          "type": "string"
        },
        "description": {
          "description": "Описание требования.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PasswordRequirementViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.PasswordRequirements.PasswordRequirementViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfListOfPasswordRequirementViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PasswordRequirementViewModel"
          },
          "xml": {
            "name": "PasswordRequirementViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.WebApi.Models.PasswordRequirements.PasswordRequirementViewModel, Loymax.Common.WebApi"
    },
    "PaymentSystemViewModel": {
      "description": "View model для платежной системы.",
      "properties": {
        "id": {
          "description": "Идентификатор программы лояльности.",
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "description": "Логическое имя платежной системы.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PaymentSystemViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.PaymentSystemViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPagedViewModelOfPaymentSystemViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PaymentSystemViewModel"
          },
          "xml": {
            "name": "PaymentSystemViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.PaymentSystemViewModel, Loymax.Common.WebApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Common.WebApi.Models.PaymentSystemViewModel, Loymax.Common.WebApi"
    },
    "PayTypeFilter": {
      "description": "Фильтр для типов оплаты.",
      "properties": {
        "name": {
          "description": "Название типа оплаты.",
          "type": "string"
        },
        "count": {
          "description": "Количество элементов в выборке.",
          "type": "integer",
          "format": "int32"
        },
        "from": {
          "description": "С какого элемента начать выборку.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PayTypeFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OperationPay.PayType.PayTypeFilter, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfPayTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PayTypeViewModel"
          },
          "xml": {
            "name": "PayTypeViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.OperationPay.PayType.PayTypeViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.OperationPay.PayType.PayTypeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPayTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PayTypeViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.OperationPay.PayType.PayTypeViewModel, Loymax.SystemApi"
    },
    "PermissionViewModel": {
      "description": "Модель представления для разрешения.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "isCommon": {
          "description": "Общее.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PermissionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Permissions.PermissionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfPermissionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PermissionViewModel"
          },
          "xml": {
            "name": "PermissionViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Permissions.PermissionViewModel, Loymax.SystemApi"
    },
    "PhoneSettingsViewModel": {
      "description": "ViewModel для настроек телефона.",
      "properties": {
        "length": {
          "description": "Минимальная длина.",
          "type": "integer",
          "format": "int32"
        },
        "prefix": {
          "description": "Префикс.",
          "type": "string"
        },
        "regexp": {
          "description": "Регулярное выражений.",
          "type": "string"
        },
        "mask": {
          "description": "Маска.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PhoneSettingsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.PhoneSettingsViewModel, Loymax.Common.WebApi"
    },
    "ResultModelOfPhoneSettingsViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PhoneSettingsViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.WebApi.Models.PhoneSettingsViewModel, Loymax.Common.WebApi"
    },
    "PlanViewModel": {
      "description": "Модель представления плана.",
      "properties": {
        "partner": {
          "$ref": "#/definitions/PartnerViewModel",
          "description": "Партнер."
        },
        "month": {
          "description": "Номер месяца.",
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "description": "Год.",
          "type": "integer",
          "format": "int32"
        },
        "metrics": {
          "$ref": "#/definitions/PlanMetricsViewModel",
          "description": "Показатели плана."
        }
      },
      "xml": {
        "name": "PlanViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Plan.PlanViewModel, Loymax.SystemApi"
    },
    "PlanMetricsViewModel": {
      "description": "Модель представления показателей маркетингово плана.",
      "allOf": [
        {
          "$ref": "#/definitions/MetricsViewModel"
        }
      ],
      "properties": {
        "balance": {
          "description": "Остаток бонусов.",
          "type": "number",
          "format": "double"
        },
        "clientsCount": {
          "description": "Клиентская база.",
          "type": "integer",
          "format": "int32"
        },
        "outflowPercent": {
          "description": "Коэффициент оттока.",
          "type": "number",
          "format": "double"
        },
        "retentionPercent": {
          "description": "Коэффициент удержания.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "PlanMetricsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Plan.PlanMetricsViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfPlanViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PlanViewModel"
          },
          "xml": {
            "name": "PlanViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Plan.PlanViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPlanViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PlanViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Plan.PlanViewModel, Loymax.SystemApi"
    },
    "PurchasesFilterViewModel": {
      "description": "Модель фильтра для получения коллекции покупок.",
      "allOf": [
        {
          "$ref": "#/definitions/BasePurchasesFilterViewModel"
        }
      ],
      "properties": {
        "state": {
          "description": "Состояние покупки.",
          "type": "string",
          "enum": [
            "Created",
            "Confirmed",
            "Canceled"
          ],
          "x-loymax-type": "Loymax.Business.Purchase.Model.PurchaseState, Loymax.Business.Purchase.Model",
          "x-loymax-enum-type": "PurchaseState"
        }
      },
      "xml": {
        "name": "PurchasesFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PurchasesFilterViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPurchaseViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PurchaseViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Controllers.Purchase.PurchaseViewModel, Loymax.SystemApi"
    },
    "OperationsViewModel": {
      "description": "Модель операции по покупке.",
      "properties": {
        "cardNumber": {
          "$ref": "#/definitions/CardViewModel",
          "description": "Номер карты."
        },
        "amounts": {
          "description": "Количество средств.",
          "items": {
            "$ref": "#/definitions/MoneyViewModel"
          },
          "xml": {
            "name": "MoneyViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "state": {
          "description": "Состояние операции.",
          "type": "string",
          "enum": [
            "Created",
            "Confirmed",
            "Canceled",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Entities.OperationState, Loymax.Entities",
          "x-loymax-enum-type": "OperationState"
        },
        "creationDate": {
          "description": "Дата создания.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Тип операции.",
          "type": "string",
          "enum": [
            "PaymentOperation",
            "DepositOperation",
            "CashbackOperation",
            "RefundCashbackOperation",
            "RefundPaymentOperation",
            "ChargingOperation",
            "DirectDiscountOperation",
            "WithdrawOperation",
            "GiftCardPaymentOperation",
            "RefundGiftCardPaymentOperation"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Purchases.OperationsType, Loymax.SystemApi",
          "x-loymax-enum-type": "OperationsType"
        },
        "description": {
          "description": "Описание операции.",
          "type": "string"
        },
        "personIdentifier": {
          "description": "Ид пользователя связанный с операцией.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OperationsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Purchases.OperationsViewModel, Loymax.SystemApi"
    },
    "CardViewModel": {
      "description": "View model для карты.",
      "properties": {
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CardViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Purchases.CardViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfOperationsViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OperationsViewModel"
          },
          "xml": {
            "name": "OperationsViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Purchases.OperationsViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfChequePositionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/ChequePositionViewModel"
          },
          "xml": {
            "name": "ChequePositionViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Purchases.ChequePositionViewModel, Loymax.SystemApi"
    },
    "PushableDeviceViewModel": {
      "description": "Модель идентификатора.",
      "properties": {
        "id": {
          "description": "Id устройства.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "platform": {
          "description": "Платформа устройства.",
          "type": "string",
          "enum": [
            "Ios",
            "Android",
            "WindowsPhone",
            "Unknown"
          ],
          "x-loymax-type": "Loymax.Common.Portable.Model.PlatformType, Loymax.Common.Portable",
          "x-loymax-enum-type": "PlatformType"
        },
        "userAgent": {
          "description": "User-agent устройства.",
          "type": "string"
        },
        "changeDate": {
          "description": "Время изменения.",
          "type": "string",
          "format": "date-time"
        },
        "isInactive": {
          "description": "Является неактивным.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PushableDeviceViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.PushableDevice.PushableDeviceViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfPushableDeviceViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PushableDeviceViewModel"
          },
          "xml": {
            "name": "PushableDeviceViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.PushableDevice.PushableDeviceViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.PushableDevice.PushableDeviceViewModel, Loymax.SystemApi"
    },
    "AnswerHandlerViewModel": {
      "description": "Модель представления обработчика ответа.",
      "properties": {
        "isSelected": {
          "description": "Выбран.",
          "type": "boolean"
        },
        "handlerType": {
          "description": "Идентификатор обработчика.",
          "type": "string",
          "enum": [
            "AgeLimit",
            "PersonItn"
          ],
          "x-loymax-type": "Loymax.Entities.Enums.AnswerHandlerType, Loymax.Entities",
          "x-loymax-enum-type": "AnswerHandlerType"
        },
        "fields": {
          "description": "Дополнительные поля обработчика.",
          "items": {
            "$ref": "#/definitions/AnswerHandlerFieldViewModel"
          },
          "xml": {
            "name": "AnswerHandlerFieldViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "AnswerHandlerViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Questionnaire.AnswerHandler.AnswerHandlerViewModel, Loymax.SystemApi"
    },
    "QuestionnaireItemViewModel": {
      "description": "Модель представления элемента анкеты.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "collectionId": {
          "description": "Уникальный Id в рамках коллекции.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование.",
          "type": "string"
        },
        "order": {
          "description": "Порядок.",
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "description": "Удален.",
          "type": "boolean"
        },
        "isQuestion": {
          "description": "Это вопрос.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "xml": {
        "name": "QuestionnaireItemViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Questionnaire.QuestionnaireCollection.QuestionnaireItemViewModel, Loymax.SystemApi"
    },
    "AnswerHandlerFieldViewModel": {
      "description": "Модель представления поля обработчика ответа.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "type": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "String",
            "Int"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.Question.AnswerHandlerFieldType, Loymax.Domain.Contract",
          "x-loymax-enum-type": "AnswerHandlerFieldType"
        },
        "value": {
          "description": "Значение.",
          "type": "string"
        },
        "isRequired": {
          "description": "Обязательный.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "AnswerHandlerFieldViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Questionnaire.AnswerHandler.AnswerHandlerFieldViewModel, Loymax.SystemApi"
    },
    "QuestionViewModel": {
      "description": "Вопрос анкеты.",
      "allOf": [
        {
          "$ref": "#/definitions/QuestionnaireItemViewModel"
        }
      ],
      "properties": {
        "logicalName": {
          "description": "Логическое наименование.",
          "type": "string"
        },
        "questionGroupId": {
          "description": "Идентификатор группы вопросов.",
          "type": "integer",
          "format": "int32"
        },
        "questionType": {
          "description": "Тип вопроса.",
          "type": "string",
          "enum": [
            "String",
            "Select",
            "Date",
            "Check",
            "Int",
            "Double"
          ],
          "x-loymax-type": "Loymax.Entities.QuestionType, Loymax.Entities",
          "x-loymax-enum-type": "QuestionType"
        },
        "regexp": {
          "description": "Регулярное выражение.",
          "type": "string"
        },
        "regexpErrorMessage": {
          "description": "Сообщение при не удачной валидации через регулярное выражение.",
          "type": "string"
        },
        "changePeriod": {
          "description": "В течении скольких дней можно изменять ответ.",
          "type": "integer",
          "format": "int32"
        },
        "isRequired": {
          "description": "Обязательный.",
          "type": "boolean"
        },
        "isVisible": {
          "description": "Виден.",
          "type": "boolean"
        },
        "isMultiSelect": {
          "description": "Множественный выбор.",
          "type": "boolean"
        },
        "answerHandlers": {
          "description": "Обработчики ответа.",
          "items": {
            "$ref": "#/definitions/AnswerHandlerViewModel"
          },
          "xml": {
            "name": "AnswerHandlerViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "isVisibleInRegistration": {
          "description": "Видимый при регистрации.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "QuestionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Questionnaire.Question.QuestionViewModel, Loymax.SystemApi"
    },
    "ResultModelOfQuestionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Questionnaire.Question.QuestionViewModel, Loymax.SystemApi"
    },
    "QuestionFilter": {
      "properties": {
        "name": {
          "type": "string"
        },
        "logicalName": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "Archived",
            "NonArchived"
          ],
          "x-loymax-type": "Loymax.Common.Model.ArchivedState, Loymax.Common",
          "x-loymax-enum-type": "ArchivedState"
        },
        "visibleType": {
          "type": "string",
          "enum": [
            "Visible",
            "Invisible"
          ],
          "x-loymax-type": "Loymax.Common.VisibilityType, Loymax.Common",
          "x-loymax-enum-type": "VisibilityType"
        },
        "requiredType": {
          "type": "string",
          "enum": [
            "Required",
            "NoRequired"
          ],
          "x-loymax-type": "Loymax.Entities.QuestionRequiredType, Loymax.Entities",
          "x-loymax-enum-type": "QuestionRequiredType"
        },
        "isEmpty": {
          "readOnly": true,
          "type": "boolean"
        }
      },
      "xml": {
        "name": "QuestionFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Domain.Contract.Model.Question.QuestionFilter, Loymax.Domain.Contract"
    },
    "ResultModelOfListOfQuestionnaireItemViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/QuestionnaireItemViewModel"
          },
          "xml": {
            "name": "QuestionnaireItemViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Questionnaire.QuestionnaireCollection.QuestionnaireItemViewModel, Loymax.SystemApi"
    },
    "QuestionGroupViewModel": {
      "description": "Группа вопросов анкеты.",
      "allOf": [
        {
          "$ref": "#/definitions/QuestionnaireItemViewModel"
        }
      ],
      "properties": {
        "questions": {
          "description": "Вопросы.",
          "items": {
            "$ref": "#/definitions/QuestionViewModel"
          },
          "xml": {
            "name": "QuestionViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "QuestionGroupViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Questionnaire.QuestionGroup.QuestionGroupViewModel, Loymax.SystemApi"
    },
    "ResultModelOfQuestionGroupViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionGroupViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Questionnaire.QuestionGroup.QuestionGroupViewModel, Loymax.SystemApi"
    },
    "RegexpConfigurationViewModel": {
      "description": "View-модель конфигурации регулярного выражения.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "expression": {
          "description": "Регулярное выражение.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Сообщение об ошибке.",
          "type": "string"
        }
      },
      "xml": {
        "name": "RegexpConfigurationViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Regexp.RegexpConfigurationViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfRegexpConfigurationViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/RegexpConfigurationViewModel"
          },
          "xml": {
            "name": "RegexpConfigurationViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Regexp.RegexpConfigurationViewModel, Loymax.SystemApi"
    },
    "RegexpConfigurationListViewModel": {
      "description": "Список конфигураций регулярных выражений для редактирования.",
      "properties": {
        "values": {
          "description": "Коллекция новых значений.",
          "items": {
            "$ref": "#/definitions/RegexpConfigurationViewModel"
          },
          "xml": {
            "name": "RegexpConfigurationViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "RegexpConfigurationListViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Regexp.RegexpConfigurationListViewModel, Loymax.SystemApi"
    },
    "RegistrationModel": {
      "description": "Входные данные для регистрации.",
      "required": [],
      "properties": {
        "login": {
          "description": "Логин.",
          "type": "string"
        },
        "password": {
          "description": "Пароль.",
          "type": "string"
        }
      },
      "xml": {
        "name": "RegistrationModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Registration.RegistrationModel, Loymax.Common.Contract"
    },
    "SystemRegistrationModel": {
      "description": "Входные данные для регистрации в SystemApi.",
      "allOf": [
        {
          "$ref": "#/definitions/RegistrationModel"
        }
      ],
      "properties": {
        "withoutCall": {
          "description": "Регистрация начата без звонка.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SystemRegistrationModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Registration.SystemRegistrationModel, Loymax.SystemApi"
    },
    "AuthResultModel": {
      "description": "Результат авторизации.",
      "required": [],
      "properties": {
        "token_type": {
          "description": "Тип маркера доступа.",
          "type": "string"
        },
        "access_token": {
          "description": "Маркер доступа.",
          "type": "string"
        },
        "refresh_token": {
          "description": "Маркер обновления доступа.",
          "type": "string"
        },
        "expires_in": {
          "description": "Срок действия маркера доступа.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "AuthResultModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.AuthResultModel, Loymax.Common.Contract"
    },
    "RegistrationResult": {
      "description": "Результат регистрации.",
      "required": [],
      "properties": {
        "state": {
          "description": "Код результата.",
          "type": "string",
          "enum": [
            "Success",
            "InvalidLoginPassword",
            "PasswordRequired",
            "RegistrationBlocked",
            "RegistrationAlreadyCompleted"
          ],
          "x-loymax-type": "Loymax.Common.Contract.Model.Registration.RegistrationState, Loymax.Common.Contract",
          "x-loymax-enum-type": "RegistrationState"
        },
        "errorMessage": {
          "description": "Текст сообщения об ошибке.",
          "type": "string"
        },
        "authToken": {
          "description": "Токен аутентификации для дальнейших действий.",
          "type": "string"
        },
        "authResult": {
          "$ref": "#/definitions/AuthResultModel",
          "description": "Результат аутентификации с маркером доступа для дальнейших действий."
        }
      },
      "xml": {
        "name": "RegistrationResult"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Registration.RegistrationResult, Loymax.Common.Contract"
    },
    "SystemRegistrationResult": {
      "description": "Результат регистрации.",
      "allOf": [
        {
          "$ref": "#/definitions/RegistrationResult"
        }
      ],
      "properties": {
        "personId": {
          "description": "Id клиента для дальнейших действий.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "SystemRegistrationResult"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Registration.SystemRegistrationResult, Loymax.SystemApi"
    },
    "ResultModelOfSystemRegistrationResult": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SystemRegistrationResult",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Registration.SystemRegistrationResult, Loymax.SystemApi"
    },
    "FinishRegistrationViewModel": {
      "description": "Модель для завершения регистарции.",
      "properties": {
        "personId": {
          "description": "Идентификатор клиента.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "FinishRegistrationViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Registration.FinishRegistrationViewModel, Loymax.SystemApi"
    },
    "FinishRegistrationResultModel": {
      "description": "Результат окончания регистрации.",
      "allOf": [
        {
          "$ref": "#/definitions/AuthResultModel"
        }
      ],
      "properties": {
        "registrationCompleted": {
          "description": "Закончена ли регистрация пользователя.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "FinishRegistrationResultModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Registration.FinishRegistrationResultModel, Loymax.Common.Contract"
    },
    "ResultModelOfFinishRegistrationResultModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/FinishRegistrationResultModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.Registration.FinishRegistrationResultModel, Loymax.Common.Contract"
    },
    "RequestPersonIdentifierViewModel": {
      "description": "Модель для отображения.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Тип идентификации пользователя.",
          "type": "string",
          "enum": [
            "CardNumber",
            "Login",
            "CardBarCode",
            "CardTrack1",
            "CardTrack2",
            "CardTrack3",
            "UID",
            "Data",
            "Anonymous",
            "Phone",
            "Email",
            "OAuth",
            "OAuthApplication",
            "Coupon",
            "PartnerCoupon",
            "PhoneHash",
            "AppleWalletCard",
            "GpayWalletCard"
          ],
          "x-loymax-type": "Loymax.Entities.Enums.IdentifierType, Loymax.Entities",
          "x-loymax-enum-type": "IdentifierType"
        },
        "mask": {
          "description": "Маска.",
          "type": "string"
        },
        "checkOrder": {
          "description": "Позиция.",
          "type": "integer",
          "format": "int32"
        },
        "replacePattern": {
          "description": "ReplacePattern.",
          "type": "string"
        },
        "partnerId": {
          "description": "Идентификатор партнера.",
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "description": "Флаг логического удаления.",
          "type": "boolean"
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgramInfoViewModel",
          "description": "Программа лояльности."
        }
      },
      "xml": {
        "name": "RequestPersonIdentifierViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.RequestPersonIdentifier.RequestPersonIdentifierViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfRequestPersonIdentifierViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/RequestPersonIdentifierViewModel"
          },
          "xml": {
            "name": "RequestPersonIdentifierViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.RequestPersonIdentifier.RequestPersonIdentifierViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.RequestPersonIdentifier.RequestPersonIdentifierViewModel, Loymax.SystemApi"
    },
    "ResultModelOfRequestPersonIdentifierViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/RequestPersonIdentifierViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.RequestPersonIdentifier.RequestPersonIdentifierViewModel, Loymax.SystemApi"
    },
    "RoleModel": {
      "description": "Модель роли.",
      "properties": {
        "id": {
          "description": "Идентификатор роли.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название роли.",
          "type": "string"
        },
        "logicalName": {
          "description": "Логическое название роли.",
          "type": "string"
        },
        "permissions": {
          "description": "Набор прав доступа, доступных участнику с данной ролью.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "RoleModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Roles.RoleModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfRoleModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/RoleModel"
          },
          "xml": {
            "name": "RoleModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Roles.RoleModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Roles.RoleModel, Loymax.SystemApi"
    },
    "ResultModelOfRoleModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/RoleModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Roles.RoleModel, Loymax.SystemApi"
    },
    "SubscriptionTypeViewModel": {
      "description": "ViewModel для типа подписки.",
      "required": [],
      "properties": {
        "id": {
          "description": "Id типа подписки.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название типа подписки.",
          "type": "string"
        },
        "type": {
          "description": "Тип подписки.",
          "type": "string",
          "enum": [
            "Cashback",
            "Payment",
            "Refill",
            "Offer",
            "System",
            "Mailing",
            "Refund",
            "DeviceEmulation"
          ],
          "x-loymax-type": "Loymax.Entities.MailingSubscriptionType, Loymax.Entities",
          "x-loymax-enum-type": "MailingSubscriptionType"
        },
        "smsEnable": {
          "description": "Оповещение по Sms.",
          "type": "boolean"
        },
        "emailEnable": {
          "description": "Оповещение по Email.",
          "type": "boolean"
        },
        "pushEnable": {
          "description": "Оповещение по Email.",
          "type": "boolean"
        },
        "viberEnable": {
          "description": "Оповещение по Viber.",
          "type": "boolean"
        },
        "socialNetworksEnable": {
          "description": "Оповещение по SocialNetworks.",
          "type": "boolean"
        },
        "timeLimitType": {
          "description": "Тип ограничения по времени рассылки.",
          "type": "string",
          "enum": [
            "NoLimit",
            "NightLimit",
            "NightAndWeekendLimit"
          ],
          "x-loymax-type": "Loymax.Entities.MailingTimeLimitType, Loymax.Entities",
          "x-loymax-enum-type": "MailingTimeLimitType"
        },
        "chatBotEnable": {
          "description": "Оповещение по ChatBot.",
          "type": "boolean"
        },
        "lifeTime": {
          "description": "Время жизни рассылки.",
          "type": "integer",
          "format": "int32"
        },
        "timeUnit": {
          "description": "Еденица времени жизни рассылки.",
          "type": "string",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "x-loymax-type": "Loymax.Entities.TimeUnitsLimit, Loymax.Entities",
          "x-loymax-enum-type": "TimeUnitsLimit"
        }
      },
      "xml": {
        "name": "SubscriptionTypeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.SubscriptionTypeViewModel, Loymax.SystemApi"
    },
    "SystemApiSubscriptionTypeViewModel": {
      "description": "ViewModel для типа подписки.",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionTypeViewModel"
        }
      ],
      "properties": {
        "hiddenTemplate": {
          "description": "Тип подписки скрыт в шаблонах.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SystemApiSubscriptionTypeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.SystemApiSubscriptionTypeViewModel, Loymax.SystemApi"
    },
    "ResultModelOfSystemApiSubscriptionTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SystemApiSubscriptionTypeViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.Notify.SystemApiSubscriptionTypeViewModel, Loymax.SystemApi"
    },
    "SubscriptionTypeFilter": {
      "description": "Фильтр типов подписок.",
      "properties": {
        "searchedText": {
          "description": "Текст поиска.",
          "type": "string"
        },
        "subscriptionType": {
          "description": "Тип подписки.",
          "type": "string",
          "enum": [
            "Cashback",
            "Payment",
            "Refill",
            "Offer",
            "System",
            "Mailing",
            "Refund",
            "DeviceEmulation"
          ],
          "x-loymax-type": "Loymax.Entities.MailingSubscriptionType, Loymax.Entities",
          "x-loymax-enum-type": "MailingSubscriptionType"
        },
        "notificationGatewayType": {
          "description": "Тип канала.",
          "type": "string",
          "enum": [
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialsNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Common.NotificationGatewayType, Loymax.Common",
          "x-loymax-enum-type": "NotificationGatewayType"
        }
      },
      "xml": {
        "name": "SubscriptionTypeFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.SubscriptionTypeFilter, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfSystemApiSubscriptionTypeViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SystemApiSubscriptionTypeViewModel"
          },
          "xml": {
            "name": "SystemApiSubscriptionTypeViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Notify.SystemApiSubscriptionTypeViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.Notify.SystemApiSubscriptionTypeViewModel, Loymax.SystemApi"
    },
    "TargetGroupModel": {
      "description": "Модель целевой аудитории.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "partnerId": {
          "description": "Id партнера.",
          "type": "integer",
          "format": "int32"
        },
        "loyaltyProgramId": {
          "description": "Идентификатор программы лояльности.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "TargetGroupModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupModel, Loymax.SystemApi"
    },
    "ResultModelOfTargetGroupViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TargetGroupViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupViewModel, Loymax.SystemApi"
    },
    "ResultModelOfCalculationModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CalculationModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.Calculations.CalculationModel, Loymax.Business.Calculations"
    },
    "TargetGroupSegmentViewModel": {
      "description": "View модель сегмента целевой аудитории.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "isArchived": {
          "description": "Признак архивного сегмента.",
          "type": "boolean"
        },
        "type": {
          "description": "Тип сегментации.",
          "type": "string",
          "enum": [
            "Exclusive",
            "Inclusive"
          ],
          "x-loymax-type": "Loymax.Entities.TargetGroupSegmentationType, Loymax.Entities",
          "x-loymax-enum-type": "TargetGroupSegmentationType"
        },
        "calculationInfo": {
          "$ref": "#/definitions/CalculationModel",
          "description": "Информация о расчете."
        }
      },
      "xml": {
        "name": "TargetGroupSegmentViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentViewModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfTargetGroupSegmentViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/TargetGroupSegmentViewModel"
          },
          "xml": {
            "name": "TargetGroupSegmentViewModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentViewModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentViewModel, Loymax.SystemApi"
    },
    "TargetGroupSegmentModel": {
      "description": "Модель сегмента целевой аудитории.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "type": {
          "description": "Тип сегментации.",
          "type": "string",
          "enum": [
            "Exclusive",
            "Inclusive"
          ],
          "x-loymax-type": "Loymax.Entities.TargetGroupSegmentationType, Loymax.Entities",
          "x-loymax-enum-type": "TargetGroupSegmentationType"
        }
      },
      "xml": {
        "name": "TargetGroupSegmentModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentModel, Loymax.SystemApi"
    },
    "ResultModelOfTargetGroupSegmentViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TargetGroupSegmentViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentViewModel, Loymax.SystemApi"
    },
    "TargetGroupSegmentFilterViewModel": {
      "description": "View модель набора фильтров сегмента ЦА.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "isArchived": {
          "description": "Признак архивного фильтра.",
          "type": "boolean"
        },
        "type": {
          "description": "Тип сегментации по фильтру.",
          "type": "string",
          "enum": [
            "Exclusive",
            "Inclusive"
          ],
          "x-loymax-type": "Loymax.Entities.TargetGroupSegmentationType, Loymax.Entities",
          "x-loymax-enum-type": "TargetGroupSegmentationType"
        },
        "filter": {
          "$ref": "#/definitions/FilterViewModel",
          "description": "Фильтр."
        },
        "calculationInfo": {
          "$ref": "#/definitions/CalculationModel",
          "description": "Информация о расчете."
        }
      },
      "xml": {
        "name": "TargetGroupSegmentFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfTargetGroupSegmentFilterViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/TargetGroupSegmentFilterViewModel"
          },
          "xml": {
            "name": "TargetGroupSegmentFilterViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterViewModel, Loymax.SystemApi"
    },
    "TargetGroupSegmentFilterModel": {
      "description": "Модель фильтра сегмента ЦА.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "type": {
          "description": "Тип сегментации по фильтру.",
          "type": "string",
          "enum": [
            "Exclusive",
            "Inclusive"
          ],
          "x-loymax-type": "Loymax.Entities.TargetGroupSegmentationType, Loymax.Entities",
          "x-loymax-enum-type": "TargetGroupSegmentationType"
        },
        "filter": {
          "$ref": "#/definitions/FilterViewModel",
          "description": "Фильтр."
        }
      },
      "xml": {
        "name": "TargetGroupSegmentFilterModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterModel, Loymax.SystemApi"
    },
    "ResultModelOfTargetGroupSegmentFilterViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TargetGroupSegmentFilterViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterViewModel, Loymax.SystemApi"
    },
    "TargetGroupSegmentFilterNameModel": {
      "description": "Модель фильтра сегмента ЦА.",
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TargetGroupSegmentFilterNameModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterNameModel, Loymax.SystemApi"
    },
    "TargetGroupSegmentFilterTypeModel": {
      "description": "Модель фильтра сегмента ЦА.",
      "properties": {
        "type": {
          "description": "Тип сегментации по фильтру.",
          "type": "string",
          "enum": [
            "Exclusive",
            "Inclusive"
          ],
          "x-loymax-type": "Loymax.Entities.TargetGroupSegmentationType, Loymax.Entities",
          "x-loymax-enum-type": "TargetGroupSegmentationType"
        }
      },
      "xml": {
        "name": "TargetGroupSegmentFilterTypeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterTypeModel, Loymax.SystemApi"
    },
    "TargetGroupSegmentFilterSetViewModel": {
      "description": "View модель набора фильтров сегмента ЦА.",
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "isArchived": {
          "description": "Признак архивного набора фильтров.",
          "type": "boolean"
        },
        "calculationInfo": {
          "$ref": "#/definitions/CalculationModel",
          "description": "Информация о расчете."
        }
      },
      "xml": {
        "name": "TargetGroupSegmentFilterSetViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterSetViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfTargetGroupSegmentFilterSetViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/TargetGroupSegmentFilterSetViewModel"
          },
          "xml": {
            "name": "TargetGroupSegmentFilterSetViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterSetViewModel, Loymax.SystemApi"
    },
    "ResultModelOfTargetGroupSegmentFilterSetViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TargetGroupSegmentFilterSetViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.TargetGroups.TargetGroupSegmentFilterSetViewModel, Loymax.SystemApi"
    },
    "TriggeredMailingViewModel": {
      "description": "View-модель для триггерной рассылки.",
      "properties": {
        "id": {
          "description": "Идентификатор рассылки.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название рассылки.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TriggeredMailingViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Mailings.TriggeredMailingViewModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfTriggeredMailingViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/TriggeredMailingViewModel"
          },
          "xml": {
            "name": "TriggeredMailingViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Mailings.TriggeredMailingViewModel, Loymax.SystemApi"
    },
    "PersonFilter": {
      "description": "Фильтр пользователей.",
      "properties": {
        "identifierText": {
          "description": "Только пользователи с идентификаторами содержащими данный текст.",
          "type": "string"
        },
        "personInfoStates": {
          "description": "Список состояний пользователя.",
          "items": {
            "type": "string",
            "enum": [
              "Normal",
              "Registered",
              "Anonymous",
              "Deleted",
              "Deregistered"
            ],
            "x-loymax-type": "Loymax.Common.Portable.Model.PersonState, Loymax.Common.Portable",
            "x-loymax-enum-type": "PersonState"
          },
          "xml": {
            "name": "PersonState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "PersonState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<PersonState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<PersonState>"
        },
        "attribute": {
          "$ref": "#/definitions/SearchUserAttributeValueModel",
          "description": "Атрибут и его значение."
        }
      },
      "xml": {
        "name": "PersonFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.PersonFilter, Loymax.SystemApi"
    },
    "SearchUserAttributeValueModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      },
      "xml": {
        "name": "SearchUserAttributeValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.User.Management.Model.SearchUserAttributeValueModel, Loymax.Business.User.Management"
    },
    "PersonInfoModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "patronomicName": {
          "type": "string"
        },
        "phone": {
          "$ref": "#/definitions/NotifierInfoModel"
        },
        "email": {
          "$ref": "#/definitions/NotifierInfoModel"
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time"
        },
        "birthDay": {
          "type": "string",
          "format": "date-time"
        },
        "balance": {
          "$ref": "#/definitions/MoneyViewModel"
        },
        "notActivated": {
          "$ref": "#/definitions/MoneyViewModel"
        },
        "isRequiredActions": {
          "type": "boolean"
        },
        "state": {
          "type": "string",
          "enum": [
            "Normal",
            "Registered",
            "Anonymous",
            "Deleted",
            "Deregistered"
          ],
          "x-loymax-type": "Loymax.Common.Portable.Model.PersonState, Loymax.Common.Portable",
          "x-loymax-enum-type": "PersonState"
        },
        "tenderOfferAcceptDate": {
          "type": "string",
          "format": "date-time"
        },
        "personalDataProcessingAcceptDate": {
          "type": "string",
          "format": "date-time"
        },
        "groupId": {
          "type": "integer",
          "format": "int32"
        },
        "timeZone": {
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "readOnly": true,
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "loyaltyProgramName": {
          "type": "string"
        },
        "loyaltyProgramId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PersonInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.User.Management.Model.PersonInfoModel, Loymax.Business.User.Management"
    },
    "NotifierInfoModel": {
      "properties": {
        "currentValue": {
          "type": "string"
        },
        "attachDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "attachType": {
          "type": "string",
          "enum": [
            "Site",
            "Sms",
            "Operator",
            "MobileClient"
          ],
          "x-loymax-type": "Loymax.Entities.NotifierAttachType, Loymax.Entities",
          "x-loymax-enum-type": "NotifierAttachType"
        }
      },
      "xml": {
        "name": "NotifierInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.User.Management.Model.NotifierInfoModel, Loymax.Business.User.Management"
    },
    "ResultModelOfPagedViewModelOfPersonInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PersonInfoModel"
          },
          "xml": {
            "name": "PersonInfoModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Business.User.Management.Model.PersonInfoModel, Loymax.Business.User.Management"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Business.User.Management.Model.PersonInfoModel, Loymax.Business.User.Management"
    },
    "ResultModelOfListOfPersonInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PersonInfoModel"
          },
          "xml": {
            "name": "PersonInfoModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Business.User.Management.Model.PersonInfoModel, Loymax.Business.User.Management"
    },
    "CreateUserModel": {
      "description": "Модель для регистрации в системе нового пользователя.",
      "properties": {
        "login": {
          "description": "Логин пользователя.",
          "type": "string"
        },
        "password": {
          "description": "Пароль пользователя.",
          "type": "string"
        },
        "loyaltyProgramId": {
          "description": "Ид программы лояльности.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CreateUserModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.CreateUserModel, Loymax.SystemApi"
    },
    "ResultModelOfPersonInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PersonInfoModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.User.Management.Model.PersonInfoModel, Loymax.Business.User.Management"
    },
    "ResultModelOfListOfSubscriptionViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SubscriptionViewModel"
          },
          "xml": {
            "name": "SubscriptionViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.Contract.Model.UserInfo.Subscriptions.SubscriptionViewModel, Loymax.Common.Contract"
    },
    "DetailedBalanceInfoViewModel": {
      "description": "Детализированный баланс.",
      "properties": {
        "items": {
          "description": "Элементы баланса.",
          "items": {
            "$ref": "#/definitions/DetailedBalanceItemViewModel"
          },
          "xml": {
            "name": "DetailedBalanceItemViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DetailedBalanceInfoViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.DetailedBalanceInfo.DetailedBalanceInfoViewModel, Loymax.Common.Contract"
    },
    "DetailedBalanceItemViewModel": {
      "description": "Элемент детализированного баланса.",
      "properties": {
        "currency": {
          "$ref": "#/definitions/CurrencyInfoModel",
          "description": "Валюта."
        },
        "amount": {
          "description": "Сумма доступных бонусов.",
          "type": "number",
          "format": "double"
        },
        "notActivatedAmount": {
          "description": "Сумма не активированных бонусов.",
          "type": "number",
          "format": "double"
        },
        "lifeTimesByTime": {
          "description": "Время активаций/сгораний.",
          "items": {
            "$ref": "#/definitions/DetailedBalanceLifeTimeByTimeViewModel"
          },
          "xml": {
            "name": "DetailedBalanceLifeTimeByTimeViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "lifeTimesByPeriod": {
          "description": "Время активаций/сгораний.",
          "items": {
            "$ref": "#/definitions/DetailedBalanceLifeTimeByPeriodViewModel"
          },
          "xml": {
            "name": "DetailedBalanceLifeTimeByPeriodViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "DetailedBalanceItemViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.DetailedBalanceInfo.DetailedBalanceItemViewModel, Loymax.Common.Contract"
    },
    "DetailedBalanceLifeTimeByTimeViewModel": {
      "description": "Время активаций/сгораний бонусов.",
      "properties": {
        "amount": {
          "description": "Количество бонусов.",
          "type": "number",
          "format": "double"
        },
        "date": {
          "description": "Дата активации/сгорания.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "DetailedBalanceLifeTimeByTimeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.DetailedBalanceInfo.DetailedBalanceLifeTimeByTimeViewModel, Loymax.Common.Contract"
    },
    "DetailedBalanceLifeTimeByPeriodViewModel": {
      "description": "Время активаций/сгораний бонусов.",
      "properties": {
        "activationAmount": {
          "description": "Количество бонусов.",
          "type": "number",
          "format": "double"
        },
        "expirationAmount": {
          "description": "Количество сгораемых за данный период бонусов.",
          "type": "number",
          "format": "double"
        },
        "period": {
          "description": "Тип периода.",
          "type": "string",
          "enum": [
            "FromWeekToMonth",
            "FromMonthToYear",
            "FromYear"
          ],
          "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.DetailedBalanceInfo.Period, Loymax.Common.Contract",
          "x-loymax-enum-type": "Period"
        }
      },
      "xml": {
        "name": "DetailedBalanceLifeTimeByPeriodViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.DetailedBalanceInfo.DetailedBalanceLifeTimeByPeriodViewModel, Loymax.Common.Contract"
    },
    "ResultModelOfDetailedBalanceInfoViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DetailedBalanceInfoViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.UserInfo.DetailedBalanceInfo.DetailedBalanceInfoViewModel, Loymax.Common.Contract"
    },
    "AccountBalanceModel": {
      "description": "Информация о балансе счета.",
      "properties": {
        "currency": {
          "$ref": "#/definitions/CurrencyInfoModel",
          "description": "Валюта."
        },
        "balance": {
          "description": "Баланс пользователя.",
          "type": "number",
          "format": "double"
        },
        "notActivated": {
          "description": "Неактивированные бонусы.",
          "type": "number",
          "format": "double"
        },
        "accumulated": {
          "description": "Получено.",
          "type": "number",
          "format": "double"
        },
        "paid": {
          "description": "Потрачено.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "AccountBalanceModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.AccountBalanceModel, Loymax.Mobile.Contract"
    },
    "ResultModelOfListOfAccountBalanceModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/AccountBalanceModel"
          },
          "xml": {
            "name": "AccountBalanceModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Mobile.Contract.Models.UserInfo.AccountBalanceModel, Loymax.Mobile.Contract"
    },
    "UserName": {
      "description": "Имя пользователя.",
      "properties": {
        "firstName": {
          "description": "Имя.",
          "type": "string"
        },
        "lastName": {
          "description": "Фамилия.",
          "type": "string"
        },
        "patronymicName": {
          "description": "Отчество.",
          "type": "string"
        }
      },
      "xml": {
        "name": "UserName"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.UserName, Loymax.SystemApi"
    },
    "ResultModelOfUserName": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/UserName",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.User.UserName, Loymax.SystemApi"
    },
    "PersonAttributeModel": {
      "description": "Модель атрибута клиента.",
      "properties": {
        "id": {
          "description": "Идентификатор атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование атрибута.",
          "type": "string"
        },
        "userAttributeType": {
          "description": "Тип атрибута.",
          "type": "string",
          "enum": [
            "Notifier",
            "Question",
            "PartnerInfo",
            "Common",
            "PersonalOffer"
          ],
          "x-loymax-type": "Loymax.Common.Portable.UserAttributeType, Loymax.Common.Portable",
          "x-loymax-enum-type": "UserAttributeType"
        },
        "type": {
          "description": "Тип атрибута.",
          "type": "string"
        },
        "logicalName": {
          "description": "Gets or sets the logical name.",
          "type": "string"
        },
        "fixedAnswers": {
          "description": "Варианты ответа.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PersonAttributeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.PersonAttributeModel, Loymax.Common.Contract"
    },
    "ResultModelOfListOfPersonAttributeModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PersonAttributeModel"
          },
          "xml": {
            "name": "PersonAttributeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.Contract.Model.PersonAttributeModel, Loymax.Common.Contract"
    },
    "EmitVirtualCardInfoModel": {
      "description": "Информация о возможности выпуска виртуальной карты.",
      "properties": {
        "currentCountOfVirtualCards": {
          "description": "Текущее число вирт. карт пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "isVirtualCardEmissionAllowed": {
          "description": "Признак возможности выпуска вирт. карты.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "EmitVirtualCardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.EmitVirtualCardInfoModel, Loymax.Mobile.Contract"
    },
    "ResultModelOfEmitVirtualCardInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/EmitVirtualCardInfoModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.Cards.EmitVirtualCardInfoModel, Loymax.Mobile.Contract"
    },
    "UserActionsResult": {
      "description": "Модель с действиями пользователя.",
      "properties": {
        "actions": {
          "description": "Список действий пользователя.",
          "items": {
            "$ref": "#/definitions/UserActionModel"
          },
          "xml": {
            "name": "UserActionModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "UserActionsResult"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserActions.UserActionsResult, Loymax.Common.Contract"
    },
    "UserActionModel": {
      "description": "Информация о действии пользователя.",
      "properties": {
        "userActionType": {
          "description": "Вид действия.",
          "type": "string",
          "enum": [
            "AcceptTenderOffer",
            "ChangePhone",
            "Questions",
            "AttachCard",
            "ShowMessage",
            "ChangeEmail",
            "ResetPassword",
            "DeleteCard",
            "ReplaceCard",
            "ChangePassword",
            "BlockCard",
            "UnblockCard",
            "PasswordRequired",
            "AssignCard"
          ],
          "x-loymax-type": "Loymax.Common.Contract.Model.UserActions.UserActionType, Loymax.Common.Contract",
          "x-loymax-enum-type": "UserActionType"
        },
        "actionState": {
          "description": "Состояние действия.",
          "type": "string",
          "enum": [
            "Required",
            "Normal",
            "Custom"
          ],
          "x-loymax-type": "Loymax.Common.Contract.Model.UserActions.ActionState, Loymax.Common.Contract",
          "x-loymax-enum-type": "ActionState"
        },
        "isDone": {
          "description": "Выполнено ли действие.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UserActionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserActions.UserActionModel, Loymax.Common.Contract"
    },
    "ResultModelOfUserActionsResult": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/UserActionsResult",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.UserActions.UserActionsResult, Loymax.Common.Contract"
    },
    "UserPhoneNumberInfo": {
      "description": "Информация о номере телефона пользователя.",
      "properties": {
        "currentPhoneNumber": {
          "description": "Текущий привязанный номер телефона.",
          "type": "string"
        },
        "newPhoneNumber": {
          "$ref": "#/definitions/NewPhoneNumberInfo",
          "description": "Новый (непотвержденный) номер телефона."
        },
        "confirmCodeLength": {
          "description": "Длина кода подтверждения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "UserPhoneNumberInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Phone.UserPhoneNumberInfo, Loymax.Mobile.Contract"
    },
    "NewPhoneNumberInfo": {
      "description": "Информация о новом номере телефона.",
      "properties": {
        "phoneNumber": {
          "description": "Новый номер телефона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "NewPhoneNumberInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Phone.NewPhoneNumberInfo, Loymax.Mobile.Contract"
    },
    "ResultModelOfUserPhoneNumberInfo": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/UserPhoneNumberInfo",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.UserInfo.Phone.UserPhoneNumberInfo, Loymax.Mobile.Contract"
    },
    "SetNewPhoneModel": {
      "description": "Модель для прикрепления телефона.",
      "properties": {
        "phone": {
          "description": "Телефон.",
          "type": "string"
        },
        "withoutCall": {
          "description": "Прикрепление телефона без звонка.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SetNewPhoneModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.SetNewPhoneModel, Loymax.SystemApi"
    },
    "ConfirmCodeResultModel": {
      "description": "Модель, содержащая информацию о коде потдверждения.",
      "properties": {
        "codeLength": {
          "description": "Количество символов в коде подтверждения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ConfirmCodeResultModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.ConfirmCodeResultModel, Loymax.Mobile.Contract"
    },
    "ResultModelOfConfirmCodeResultModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/ConfirmCodeResultModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.ConfirmCodeResultModel, Loymax.Mobile.Contract"
    },
    "PostConfirmCodeModel": {
      "description": "Модель для отправки кода подтверждения.",
      "properties": {
        "confirmCode": {
          "description": "Код подтверждения.",
          "type": "string"
        },
        "password": {
          "description": "Пароль.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PostConfirmCodeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.PostConfirmCodeModel, Loymax.Mobile.Contract"
    },
    "SetNewEmailModel": {
      "description": "Модель для прикрепления почты.",
      "properties": {
        "email": {
          "description": "Почта.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SetNewEmailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.SetNewEmailModel, Loymax.SystemApi"
    },
    "GetQuestionsFilter": {
      "description": "Фильтр списка вопросов анкета.",
      "properties": {
        "onlyRequired": {
          "description": "Получает информацию о вопросах анкеты с отмеченным чекбоксом \"Видимый при регистрации\".",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "GetQuestionsFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.GetQuestionsFilter, Loymax.Mobile.Contract"
    },
    "QuestionnaireItemModel": {
      "description": "Базовый класс для модели вопроса.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "order": {
          "description": "Порядок.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Тип.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Question",
            "QuestionGroup",
            "QuestionFixedAnswer"
          ],
          "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionnaireItemModelType, Loymax.Mobile.Contract",
          "x-loymax-enum-type": "QuestionnaireItemModelType"
        }
      },
      "xml": {
        "name": "QuestionnaireItemModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionnaireItemModel, Loymax.Mobile.Contract"
    },
    "ResultModelOfListOfQuestionnaireItemModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/QuestionnaireItemModel"
          },
          "xml": {
            "name": "QuestionnaireItemModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionnaireItemModel, Loymax.Mobile.Contract"
    },
    "QuestionAnswerModel": {
      "description": "Модель ответа на вопрос анкеты.",
      "properties": {
        "questionId": {
          "description": "Id вопроса.",
          "type": "integer",
          "format": "int32"
        },
        "fixedAnswerIds": {
          "description": "Id фиксированного ответа.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "value": {
          "description": "Значение ответа.",
          "type": "string"
        }
      },
      "xml": {
        "name": "QuestionAnswerModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionAnswerModel, Loymax.Mobile.Contract"
    },
    "QuestionsErrorsModel": {
      "description": "Результат проверки сервером ответов на вопросы анкеты.",
      "properties": {
        "errors": {
          "description": "Набор ошибок в ответах на вопросы.",
          "items": {
            "$ref": "#/definitions/QuestionError"
          },
          "xml": {
            "name": "QuestionError",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "QuestionsErrorsModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionsErrorsModel, Loymax.Mobile.Contract"
    },
    "QuestionError": {
      "description": "Ошибка при ответе на вопросе.",
      "properties": {
        "idQuestion": {
          "description": "Идентификатор вопроса.",
          "type": "string"
        },
        "errors": {
          "description": "Набор ошибок.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "QuestionError"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionError, Loymax.Mobile.Contract"
    },
    "ResultModelOfQuestionsErrorsModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionsErrorsModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionsErrorsModel, Loymax.Mobile.Contract"
    },
    "CouponListFilter": {
      "properties": {
        "emissionIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "couponStates": {
          "items": {
            "type": "string",
            "enum": [
              "Created",
              "Issued",
              "Used",
              "Rejected",
              "QueuedToUse",
              "QueuedToIssue"
            ],
            "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponState, Loymax.Coupon.Contract",
            "x-loymax-enum-type": "CouponState"
          },
          "xml": {
            "name": "CouponState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CouponState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CouponState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.IEnumerable<CouponState>"
        },
        "changedStateDateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "changedStateDateTo": {
          "type": "string",
          "format": "date-time"
        },
        "couponNumber": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CouponListFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Coupon.Contract.Model.CouponListFilter, Loymax.Coupon.Contract"
    },
    "ResultModelOfMoneyViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.MoneyViewModel, Loymax.Common.Contract"
    },
    "SetCardModel": {
      "description": "Модель добавления карты.",
      "properties": {
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SetCardModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.SetCardModel, Loymax.Mobile.Contract"
    },
    "AttributePartnerValueModel": {
      "description": "Модель значений партнерских атрибутов пользователя.",
      "properties": {
        "info": {
          "$ref": "#/definitions/AttributePartnerInfoModel",
          "description": "Информация об атрибуте."
        },
        "value": {
          "$ref": "#/definitions/AttributeValueModel",
          "description": "Значение партнерского атрибута."
        }
      },
      "xml": {
        "name": "AttributePartnerValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.AttributePartnerValueModel, Loymax.Common.Contract"
    },
    "AttributePartnerInfoModel": {
      "description": "Модель информации о партнерски атрибута пользователя.",
      "properties": {
        "partnerId": {
          "description": "Идентификатор партнера.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "attributeId": {
          "description": "Идентификатор атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Наименование атрибута.",
          "type": "string"
        },
        "logicalName": {
          "description": "Gets or sets the logical name.",
          "type": "string"
        }
      },
      "xml": {
        "name": "AttributePartnerInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.AttributePartnerInfoModel, Loymax.Common.Contract"
    },
    "AttributeValueModel": {
      "description": "Значения атрибутов.",
      "required": [],
      "properties": {},
      "xml": {
        "name": "AttributeValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.AttributeValueModel, Loymax.Common.Contract"
    },
    "ResultModelOfListOfAttributePartnerValueModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/AttributePartnerValueModel"
          },
          "xml": {
            "name": "AttributePartnerValueModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Common.Contract.Model.UserInfo.AttributePartnerValueModel, Loymax.Common.Contract"
    },
    "DetailItem": {
      "description": "Элемент детальной информации.",
      "required": [],
      "properties": {
        "id": {
          "description": "Идентификатор детали.",
          "type": "string"
        },
        "rewardThumbnail": {
          "$ref": "#/definitions/RewardThumbnail",
          "description": "Вознаграждение."
        },
        "title": {
          "description": "Заголовок.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "picture": {
          "description": "Изображение.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "DetailItem"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.DetailItem, Loymax.Mobile.Contract"
    },
    "RewardThumbnail": {
      "description": "Вознаграждение.",
      "required": [],
      "properties": {},
      "xml": {
        "name": "RewardThumbnail"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.RewardThumbnail, Loymax.Mobile.Contract"
    },
    "ResultModelOfPagedViewModelOfDetailItem": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/DetailItem"
          },
          "xml": {
            "name": "DetailItem",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Mobile.Contract.Models.Offer.DetailItem, Loymax.Mobile.Contract"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Mobile.Contract.Models.Offer.DetailItem, Loymax.Mobile.Contract"
    },
    "DeregisterModel": {
      "description": "Модель выхода из ПЛ.",
      "properties": {
        "reason": {
          "description": "Причина выхода.",
          "type": "string"
        }
      },
      "xml": {
        "name": "DeregisterModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.DeregisterModel, Loymax.SystemApi"
    },
    "ResultModelOfListOfSystemApiCardInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/SystemApiCardInfoModel"
          },
          "xml": {
            "name": "SystemApiCardInfoModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.SystemApi.Models.Cards.SystemApiCardInfoModel, Loymax.SystemApi"
    },
    "AttachCardState": {
      "description": "Состояние процесса присоединения карты.",
      "properties": {
        "cardNumber": {
          "description": "Номер присоединяемой карты.",
          "type": "string"
        },
        "isStarted": {
          "description": "Начат ли процесс.",
          "type": "boolean"
        },
        "maxCountOfCards": {
          "description": "Максимальное число карт, которые может присоединить пользователь.",
          "type": "integer",
          "format": "int32"
        },
        "currentCountOfAttachedCards": {
          "description": "Текущее число присоедиенных карт.",
          "type": "integer",
          "format": "int32"
        },
        "maximumPersonCountForGroup": {
          "description": "Максимальное число пользователей в группе.",
          "type": "integer",
          "format": "int32"
        },
        "currentPersonCountInGroup": {
          "description": "Текущее число пользователей в группе.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "AttachCardState"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.AttachCardState, Loymax.Mobile.Contract"
    },
    "ResultModelOfAttachCardState": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/AttachCardState",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.Cards.AttachCardState, Loymax.Mobile.Contract"
    },
    "BeginAttachCardResultModel": {
      "description": "Модель результат обработки начала действия по объединению карт.",
      "properties": {
        "confirmCodeLength": {
          "description": "Длина кода подтверждения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BeginAttachCardResultModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.BeginAttachCardResultModel, Loymax.Mobile.Contract"
    },
    "ResultModelOfBeginAttachCardResultModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/BeginAttachCardResultModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.Cards.BeginAttachCardResultModel, Loymax.Mobile.Contract"
    },
    "ConfirmCodeModel": {
      "description": "Модель кода подтверждения.",
      "properties": {
        "confirmCode": {
          "description": "Код подтверждения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ConfirmCodeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.ConfirmCodeModel, Loymax.Mobile.Contract"
    },
    "SetCardActionInfoModel": {
      "description": "Информация о возможности прикрепления физ. карты.",
      "properties": {
        "maxCountOfMainCardsForUser": {
          "description": "Максимально возможное количество физ. карт, которое может иметь пользователь.",
          "type": "integer",
          "format": "int32"
        },
        "currentCountOfMainCards": {
          "description": "Текущее число физ. карт пользователя.",
          "type": "integer",
          "format": "int32"
        },
        "isCardSetAllowed": {
          "description": "Признак возможности привязки физ. карты.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SetCardActionInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.SetCardActionInfoModel, Loymax.Mobile.Contract"
    },
    "ResultModelOfSetCardActionInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SetCardActionInfoModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Mobile.Contract.Models.Cards.SetCardActionInfoModel, Loymax.Mobile.Contract"
    },
    "SearchByAttributesModel": {
      "description": "Модель для поиска по атрибутам.",
      "properties": {
        "cardNumber": {
          "description": "Номер карты.",
          "type": "string"
        },
        "personUid": {
          "description": "Внешний идентификтор пользователя.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "values": {
          "description": "Gets or sets the values.",
          "items": {
            "$ref": "#/definitions/SearchUserAttributeValueModel"
          },
          "xml": {
            "name": "SearchUserAttributeValueModel",
            "wrapped": true
          },
          "type": "array"
        },
        "from": {
          "description": "С какого.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Сколько.",
          "type": "integer",
          "format": "int32"
        },
        "card": {
          "$ref": "#/definitions/SearchByCardAttributesModel",
          "description": "Атрибуты карты."
        }
      },
      "xml": {
        "name": "SearchByAttributesModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.SearchByAttributesModel, Loymax.SystemApi"
    },
    "SearchByCardAttributesModel": {
      "properties": {
        "cardState": {
          "type": "string",
          "enum": [
            "Emitted",
            "Packed",
            "Activated",
            "Replaced",
            "Creating",
            "Created",
            "Prepared",
            "Issued"
          ],
          "x-loymax-type": "Loymax.Entities.CardState, Loymax.Entities",
          "x-loymax-enum-type": "CardState"
        },
        "isGift": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "SearchByCardAttributesModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.User.Management.Model.SearchByCardAttributesModel, Loymax.Business.User.Management"
    },
    "PersonsGroupInfoModel": {
      "properties": {
        "persons": {
          "items": {
            "$ref": "#/definitions/PersonInfoModel"
          },
          "xml": {
            "name": "PersonInfoModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PersonsGroupInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.User.Management.Model.PersonsGroupInfoModel, Loymax.Business.User.Management"
    },
    "ResultModelOfPagedViewModelOfPersonsGroupInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PersonsGroupInfoModel"
          },
          "xml": {
            "name": "PersonsGroupInfoModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Business.User.Management.Model.PersonsGroupInfoModel, Loymax.Business.User.Management"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.Business.User.Management.Model.PersonsGroupInfoModel, Loymax.Business.User.Management"
    },
    "ResultModelOfPersonsGroupInfoModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PersonsGroupInfoModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Business.User.Management.Model.PersonsGroupInfoModel, Loymax.Business.User.Management"
    },
    "PersonIdentifierModel": {
      "description": "Модель идентификатора.",
      "properties": {
        "id": {
          "description": "Id идентификатора.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Тип идентификатора.",
          "type": "string",
          "enum": [
            "CardNumber",
            "Login",
            "CardBarCode",
            "CardTrack1",
            "CardTrack2",
            "CardTrack3",
            "UID",
            "Data",
            "Anonymous",
            "Phone",
            "Email",
            "OAuth",
            "OAuthApplication",
            "Coupon",
            "PartnerCoupon",
            "PhoneHash",
            "AppleWalletCard",
            "GpayWalletCard"
          ],
          "x-loymax-type": "Loymax.Entities.Enums.IdentifierType, Loymax.Entities",
          "x-loymax-enum-type": "IdentifierType"
        },
        "text": {
          "description": "Текст идентификатора.",
          "type": "string"
        },
        "state": {
          "description": "Состояние идентификатора.",
          "type": "string",
          "enum": [
            "Normal",
            "Block",
            "Deleted"
          ],
          "x-loymax-type": "Loymax.Entities.LoginState, Loymax.Entities",
          "x-loymax-enum-type": "LoginState"
        },
        "roles": {
          "description": "Набор ролей, закрепленные за идентификатором.",
          "items": {
            "$ref": "#/definitions/PersonIdentifierRoleModel"
          },
          "xml": {
            "name": "PersonIdentifierRoleModel",
            "wrapped": true
          },
          "type": "array"
        },
        "permissions": {
          "description": "Набор прав доступа, закрепленные за идентификатором вне роли.",
          "items": {
            "$ref": "#/definitions/PersonIdentifierPermissionModel"
          },
          "xml": {
            "name": "PersonIdentifierPermissionModel",
            "wrapped": true
          },
          "type": "array"
        },
        "isLimited": {
          "description": "Признак ограниченого количества сеансов.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PersonIdentifierModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.PersonIdentifierModel, Loymax.SystemApi"
    },
    "PersonIdentifierRoleModel": {
      "description": "Модель роли для идентификатора.",
      "properties": {
        "role": {
          "$ref": "#/definitions/RoleModel",
          "description": "Роль."
        },
        "partnerIds": {
          "description": "Партнеры.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PersonIdentifierRoleModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.PersonIdentifierRoleModel, Loymax.SystemApi"
    },
    "PersonIdentifierPermissionModel": {
      "description": "Модель для прав идентификатора.",
      "properties": {
        "permission": {
          "description": "Право доступа.",
          "type": "string"
        },
        "partnerIds": {
          "description": "Партнеры.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "isAllow": {
          "description": "Разрешающее или запрещающее право.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PersonIdentifierPermissionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.PersonIdentifierPermissionModel, Loymax.SystemApi"
    },
    "ResultModelOfPagedViewModelOfPersonIdentifierModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/PersonIdentifierModel"
          },
          "xml": {
            "name": "PersonIdentifierModel",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-type": "Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.User.PersonIdentifierModel, Loymax.SystemApi"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.Contract.Model.PagedViewModel`1[[Loymax.SystemApi.Models.User.PersonIdentifierModel, Loymax.SystemApi"
    },
    "ResultModelOfPersonIdentifierModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PersonIdentifierModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.User.PersonIdentifierModel, Loymax.SystemApi"
    },
    "UserMessengersViewModel": {
      "description": "Информацию о менеджерах пользователя.",
      "properties": {
        "hasViber": {
          "description": "Наличие активного аккаунта Viber.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UserMessengersViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.User.UserMessengersViewModel, Loymax.SystemApi"
    },
    "ResultModelOfUserMessengersViewModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/UserMessengersViewModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.SystemApi.Models.User.UserMessengersViewModel, Loymax.SystemApi"
    },
    "OAuthIdentifierInfo": {
      "properties": {
        "provider": {
          "type": "string",
          "enum": [
            "Facebook",
            "VKontakte",
            "Instagram",
            "Twitter",
            "Google",
            "MyMail",
            "Odnoklassniki",
            "Loymax"
          ],
          "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProviderType, Loymax.Business.Social.Common",
          "x-loymax-enum-type": "OAuthProviderType"
        },
        "userId": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "OAuthIdentifierInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthIdentifierInfo, Loymax.Business.Social.Common"
    },
    "ResultModelOfListOfOAuthIdentifierInfo": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "description": "Данные.",
          "items": {
            "$ref": "#/definitions/OAuthIdentifierInfo"
          },
          "xml": {
            "name": "OAuthIdentifierInfo",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[System.Collections.Generic.List`1[[Loymax.Business.Social.Common.Model.OAuthIdentifierInfo, Loymax.Business.Social.Common"
    },
    "VersionModel": {
      "description": "Модель версии.",
      "properties": {
        "major": {
          "description": "Мажорная версия.",
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "description": "Минорная версия.",
          "type": "integer",
          "format": "int32"
        },
        "build": {
          "description": "Билд.",
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "description": "Ревизия.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "VersionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.VersionModel, Loymax.Common.WebApi"
    },
    "ResultModelOfVersionModel": {
      "description": "Модель результата с данными.",
      "allOf": [
        {
          "$ref": "#/definitions/ResultModel"
        }
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/VersionModel",
          "description": "Данные."
        }
      },
      "xml": {
        "name": "ResultModel`1"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.ResultModel`1[[Loymax.Common.WebApi.Models.VersionModel, Loymax.Common.WebApi"
    },
    "AddressInfo": {
      "description": "Информация об адресе.",
      "properties": {
        "city": {
          "description": "Город.",
          "type": "string"
        },
        "street": {
          "description": "Улица.",
          "type": "string"
        },
        "house": {
          "description": "Дом.",
          "type": "string"
        },
        "building": {
          "description": "Строение.",
          "type": "string"
        },
        "flat": {
          "description": "Квартира.",
          "type": "string"
        }
      },
      "xml": {
        "name": "AddressInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.AddressInfo, Loymax.Mobile.Contract"
    },
    "CardShortInfo": {
      "description": "Краткая информация о карте.",
      "properties": {
        "id": {
          "description": "Идентификатор карты.",
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "description": "Баланс карты.",
          "type": "string"
        },
        "isBlocked": {
          "description": "Заблокирована ли карта.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CardShortInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.CardShortInfo, Loymax.Mobile.Contract"
    },
    "BalanceShortInfo": {
      "description": "Баланс пользователя.",
      "properties": {
        "balance": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Баланс пользователя."
        },
        "notActivated": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Неактивированные бонусы."
        },
        "accumulated": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Получено."
        },
        "paid": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Потрачено."
        }
      },
      "xml": {
        "name": "BalanceShortInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.BalanceShortInfo, Loymax.Mobile.Contract"
    },
    "UserInfoResult": {
      "description": "Информация о пользователе.",
      "allOf": [
        {
          "$ref": "#/definitions/UserInfoBase"
        }
      ],
      "properties": {
        "birthDay": {
          "description": "День рождения.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "Состояние пользователя.",
          "type": "string",
          "enum": [
            "Normal",
            "Registered",
            "Anonymous",
            "Deleted",
            "Deregistered"
          ],
          "x-loymax-type": "Loymax.Common.Portable.Model.PersonState, Loymax.Common.Portable",
          "x-loymax-enum-type": "PersonState"
        },
        "addressInfo": {
          "$ref": "#/definitions/AddressInfo",
          "description": "Адрес."
        },
        "cardShortInfo": {
          "$ref": "#/definitions/CardShortInfo",
          "description": "Информация о карте."
        },
        "balanceShortInfo": {
          "$ref": "#/definitions/BalanceShortInfo",
          "description": "Баланс пользователя."
        }
      },
      "xml": {
        "name": "UserInfoResult"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.UserInfoResult, Loymax.Mobile.Contract"
    },
    "BooleanAttributeValue": {
      "description": "Булевое значение атрибута.",
      "properties": {
        "value": {
          "description": "Значение.",
          "type": "boolean"
        },
        "attributeId": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeLogicalName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "isRelated": {
          "description": "Значение атрибута получено из связанной сущности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "BooleanAttributeValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.BooleanAttributeValue, Loymax.Business.Announcement.Model"
    },
    "DateTimeAttributeValue": {
      "description": "Значение атрибута дата/время.",
      "properties": {
        "value": {
          "description": "Значение.",
          "type": "string",
          "format": "date-time"
        },
        "attributeId": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeLogicalName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "isRelated": {
          "description": "Значение атрибута получено из связанной сущности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "DateTimeAttributeValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.DateTimeAttributeValue, Loymax.Business.Announcement.Model"
    },
    "DecimalAttributeValue": {
      "description": "Числовое значение атрибута.",
      "properties": {
        "value": {
          "description": "Значение.",
          "type": "number",
          "format": "double"
        },
        "attributeId": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeLogicalName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "isRelated": {
          "description": "Значение атрибута получено из связанной сущности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "DecimalAttributeValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.DecimalAttributeValue, Loymax.Business.Announcement.Model"
    },
    "GuidAttributeValue": {
      "description": "Значение атрибута GUID.",
      "required": [],
      "properties": {
        "value": {
          "description": "Значение.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "attributeId": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeLogicalName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "isRelated": {
          "description": "Значение атрибута получено из связанной сущности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "GuidAttributeValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.GuidAttributeValue, Loymax.Business.Announcement.Model"
    },
    "GuidAttributeValueViewModel": {
      "description": "Расширение модели мультемедийного атрибута.",
      "allOf": [
        {
          "$ref": "#/definitions/GuidAttributeValue"
        }
      ],
      "properties": {
        "file": {
          "$ref": "#/definitions/FileViewModel",
          "description": "Модель файла."
        }
      },
      "xml": {
        "name": "GuidAttributeValueViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Announcement.GuidAttributeValueViewModel, Loymax.SystemApi"
    },
    "IntAttributeValue": {
      "description": "Целочисленое значение атрибута.",
      "properties": {
        "value": {
          "description": "Значение.",
          "type": "integer",
          "format": "int32"
        },
        "attributeId": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeLogicalName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "isRelated": {
          "description": "Значение атрибута получено из связанной сущности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "IntAttributeValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.IntAttributeValue, Loymax.Business.Announcement.Model"
    },
    "StringAttributeValue": {
      "description": "Строковое значение атрибута.",
      "properties": {
        "value": {
          "description": "Значение.",
          "type": "string"
        },
        "attributeId": {
          "description": "Id атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeLogicalName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        },
        "attributeName": {
          "description": "Имя атрибута.",
          "type": "string"
        },
        "isRelated": {
          "description": "Значение атрибута получено из связанной сущности.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "StringAttributeValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.StringAttributeValue, Loymax.Business.Announcement.Model"
    },
    "AnnouncementModel": {
      "description": "Модель рекламного материала.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAnnouncementModel"
        }
      ],
      "properties": {
        "spaceId": {
          "description": "Id рекламного места.",
          "type": "integer",
          "format": "int32"
        },
        "partnerId": {
          "description": "Id партнера.",
          "type": "integer",
          "format": "int32"
        },
        "authorId": {
          "description": "Id автора.",
          "type": "integer",
          "format": "int32"
        },
        "relatedEntityId": {
          "description": "Id связанной сущности.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "AnnouncementModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.AnnouncementModel, Loymax.Business.Announcement.Model"
    },
    "DateTimeRangeAttributeRestriction": {
      "properties": {
        "minDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "maxDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DateTimeRangeAttributeRestriction"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.Restriction.DateTimeRangeAttributeRestriction, Loymax.Business.Announcement"
    },
    "ImageSizeAttributeRestriction": {
      "properties": {
        "minWidth": {
          "type": "integer",
          "format": "int32"
        },
        "maxWidth": {
          "type": "integer",
          "format": "int32"
        },
        "minHeight": {
          "type": "integer",
          "format": "int32"
        },
        "maxHeight": {
          "type": "integer",
          "format": "int32"
        },
        "minSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxSize": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ImageSizeAttributeRestriction"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.Restriction.ImageSizeAttributeRestriction, Loymax.Business.Announcement"
    },
    "LengthAttributeRestriction": {
      "properties": {
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "LengthAttributeRestriction"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.Restriction.LengthAttributeRestriction, Loymax.Business.Announcement"
    },
    "NumericRangeAttributeRestriction": {
      "properties": {
        "minValue": {
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "NumericRangeAttributeRestriction"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.Restriction.NumericRangeAttributeRestriction, Loymax.Business.Announcement"
    },
    "RequiredAttributeRestriction": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "RequiredAttributeRestriction"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Business.Announcement.Model.Restriction.RequiredAttributeRestriction, Loymax.Business.Announcement"
    },
    "UserAttributeViewModel": {
      "description": "ViewModel для атрибута пользователя.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseUserAttributeViewModel"
        }
      ],
      "properties": {
        "valueType": {
          "description": "Тип значения.",
          "type": "string",
          "enum": [
            "Bool",
            "String"
          ],
          "x-loymax-type": "Loymax.Entities.CommonAttributeValueType, Loymax.Entities",
          "x-loymax-enum-type": "CommonAttributeValueType"
        }
      },
      "xml": {
        "name": "UserAttributeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Attributes.UserAttributeViewModel, Loymax.SystemApi"
    },
    "PersonCouponEmissionViewModel": {
      "description": "View модель пользовательского купона.",
      "allOf": [
        {
          "$ref": "#/definitions/CouponEmissionViewModel"
        }
      ],
      "properties": {
        "count": {
          "description": "Количество купонов.",
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "description": "Стоимость купона в бонусах.",
          "type": "number",
          "format": "double"
        },
        "isPublished": {
          "description": "Признак публикации в каталоге (витрине).",
          "type": "boolean"
        },
        "numberTemplate": {
          "$ref": "#/definitions/NumberTemplateViewModel",
          "description": "Шаблон для формата номера купона."
        }
      },
      "xml": {
        "name": "PersonCouponEmissionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.Coupon.PersonCouponEmissionViewModel, Loymax.SystemApi"
    },
    "DistributedCouponEmissionViewModel": {
      "description": "View модель купона для раздачи.",
      "allOf": [
        {
          "$ref": "#/definitions/CouponEmissionViewModel"
        }
      ],
      "properties": {
        "count": {
          "description": "Количество купонов.",
          "type": "integer",
          "format": "int32"
        },
        "numberTemplate": {
          "$ref": "#/definitions/NumberTemplateViewModel",
          "description": "Шаблон для формата номера купона."
        },
        "isDynamic": {
          "description": "Динамический выпуск.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "DistributedCouponEmissionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.Coupon.DistributedCouponEmissionViewModel, Loymax.SystemApi"
    },
    "PublicCouponEmissionViewModel": {
      "description": "ViewModel публичного выпуска купонов.",
      "allOf": [
        {
          "$ref": "#/definitions/CouponEmissionViewModel"
        }
      ],
      "properties": {
        "code": {
          "description": "Код.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PublicCouponEmissionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Emissions.Coupon.PublicCouponEmissionViewModel, Loymax.SystemApi"
    },
    "CardActionAccessInfo": {
      "description": "Информация о возможности выполнять действия с картой.",
      "properties": {
        "canBlock": {
          "description": "Можно ли заблокировать.",
          "type": "boolean"
        },
        "canReplace": {
          "description": "Можно ли заменить.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CardActionAccessInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.CardActionAccessInfo, Loymax.Mobile.Contract"
    },
    "CardInfo": {
      "description": "Информация о карте.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/AbstractCardInfoModel"
        }
      ],
      "properties": {
        "accumulated": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Получено."
        },
        "paid": {
          "$ref": "#/definitions/MoneyViewModel",
          "description": "Потрачено."
        },
        "accumulatedInfo": {
          "description": "Информация о полученных средствах.",
          "items": {
            "$ref": "#/definitions/MoneyViewModel"
          },
          "xml": {
            "name": "MoneyViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "paidInfo": {
          "description": "Информация о потраченных средствах.",
          "items": {
            "$ref": "#/definitions/MoneyViewModel"
          },
          "xml": {
            "name": "MoneyViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "cardActionAccessInfo": {
          "$ref": "#/definitions/CardActionAccessInfo",
          "description": "Информация о возможности выполнять действия с картой."
        }
      },
      "xml": {
        "name": "CardInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.CardInfo, Loymax.Mobile.Contract"
    },
    "SecondaryCardInfo": {
      "description": "Дополнительная карта.",
      "allOf": [
        {
          "$ref": "#/definitions/CardInfo"
        }
      ],
      "properties": {
        "parentCardId": {
          "description": "Родительская карта для текущей.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "SecondaryCardInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.SecondaryCardInfo, Loymax.Mobile.Contract"
    },
    "VirtualCardInfo": {
      "description": "Виртуальная карта.",
      "allOf": [
        {
          "$ref": "#/definitions/CardInfo"
        }
      ],
      "properties": {
        "qrContent": {
          "description": "QR-контент.",
          "type": "string"
        }
      },
      "xml": {
        "name": "VirtualCardInfo"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Cards.VirtualCardInfo, Loymax.Mobile.Contract"
    },
    "VirtualCardInfoModel": {
      "description": "Информация о виртуальной карте.",
      "allOf": [
        {
          "$ref": "#/definitions/SystemApiCardInfoModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "VirtualCardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.VirtualCardInfoModel, Loymax.SystemApi"
    },
    "SecondaryCardInfoModel": {
      "description": "Информация о дополнительной карте.",
      "allOf": [
        {
          "$ref": "#/definitions/SystemApiCardInfoModel"
        }
      ],
      "properties": {
        "parentCardId": {
          "description": "Родительская карта для текущей.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "SecondaryCardInfoModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Cards.SecondaryCardInfoModel, Loymax.SystemApi"
    },
    "OldNewPriceRewardThumbnailModel": {
      "description": "Модель описания акции, состоящей из старой и новой цены.",
      "allOf": [
        {
          "$ref": "#/definitions/RewardThumbnailModel"
        }
      ],
      "properties": {
        "oldPrice": {
          "description": "Старая цена.",
          "type": "string"
        },
        "newPrice": {
          "description": "Новая цена.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OldNewPriceRewardThumbnailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.RewardThumbnail.OldNewPriceRewardThumbnailModel, Loymax.SystemApi"
    },
    "ImageWithTextRewardThumbnailModel": {
      "description": "Модель описания акции, состоящей из изображения и двух надписей.",
      "allOf": [
        {
          "$ref": "#/definitions/RewardThumbnailModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Заголовок.",
          "type": "string"
        },
        "footer": {
          "description": "Подпись.",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/FileViewModel",
          "description": "Изображение."
        }
      },
      "xml": {
        "name": "ImageWithTextRewardThumbnailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.RewardThumbnail.ImageWithTextRewardThumbnailModel, Loymax.SystemApi"
    },
    "TwoLineTextRewardThumbnailModel": {
      "description": "Модель описания акции, состоящей из двух строк.",
      "allOf": [
        {
          "$ref": "#/definitions/RewardThumbnailModel"
        }
      ],
      "properties": {
        "firstLine": {
          "description": "Первая строка.",
          "type": "string"
        },
        "secondLine": {
          "description": "Вторая строка.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TwoLineTextRewardThumbnailModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.RewardThumbnail.TwoLineTextRewardThumbnailModel, Loymax.SystemApi"
    },
    "UpdateCommunicationPersonalOfferModel": {
      "description": "Модель акции по персональным предложениям (в которых товары выбирает маркетолог), отображаемой клиентам.",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateCommunicationOfferModel"
        }
      ],
      "properties": {
        "offer": {
          "$ref": "#/definitions/OfferInfoShortViewModel",
          "description": "Идентификатор акции."
        }
      },
      "xml": {
        "name": "UpdateCommunicationPersonalOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.UpdateCommunicationPersonalOfferModel, Loymax.SystemApi"
    },
    "UpdateCommunicationPersonalGoodsOfferModel": {
      "description": "Модель акции по персональным предложениям (в которых пользователь сам выбирает товары), отображаемой клиентам.",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateCommunicationOfferModel"
        }
      ],
      "properties": {
        "personalOfferAttributeId": {
          "description": "Id атрибута по персональным предложениям.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "UpdateCommunicationPersonalGoodsOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.UpdateCommunicationPersonalGoodsOfferModel, Loymax.SystemApi"
    },
    "CommunicationPersonalOfferModel": {
      "description": "Модель акции по персональным предложениям (в которых товары выбирает маркетолог), отображаемой клиентам.",
      "allOf": [
        {
          "$ref": "#/definitions/CommunicationOfferModel"
        }
      ],
      "properties": {
        "offer": {
          "$ref": "#/definitions/OfferInfoShortViewModel",
          "description": "Идентификатор акции."
        }
      },
      "xml": {
        "name": "CommunicationPersonalOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.CommunicationPersonalOfferModel, Loymax.SystemApi"
    },
    "CommunicationPersonalGoodsOfferModel": {
      "description": "Модель акции по персональным предложениям (в которых пользователь сам выбирает товары), отображаемой клиентам.",
      "allOf": [
        {
          "$ref": "#/definitions/CommunicationOfferModel"
        }
      ],
      "properties": {
        "personalOfferAttributeId": {
          "description": "Id атрибута по персональным предложениям.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CommunicationPersonalGoodsOfferModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Communication.Offer.CommunicationPersonalGoodsOfferModel, Loymax.SystemApi"
    },
    "MultiplicityCounterViewModel": {
      "description": "Модель представления для счетчика, связанного с кратностью.",
      "allOf": [
        {
          "$ref": "#/definitions/CounterViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "MultiplicityCounterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Counter.MultiplicityCounterViewModel, Loymax.SystemApi"
    },
    "PurchaseCounterViewModel": {
      "description": "Модель представления для счетчика, связанного с покупкой.",
      "allOf": [
        {
          "$ref": "#/definitions/CounterViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PurchaseCounterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Counter.PurchaseCounterViewModel, Loymax.SystemApi"
    },
    "GoodsCatalogNodeViewModel": {
      "description": "View модель для узла каталога товаров.",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsCatalogBaseViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "GoodsCatalogNodeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.GoodsCatalog.GoodsCatalogNodeViewModel, Loymax.Common.WebApi"
    },
    "KeyValuePairOfInt32AndDecimal": {
      "properties": {
        "key": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "readOnly": true,
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "KeyValuePair`2"
      },
      "type": "object"
    },
    "ChangeBalanceDataModel": {
      "description": "ViewModel данных о изменеии баланса.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/HistoryDataModel"
        }
      ],
      "properties": {
        "positionInfo": {
          "description": "Распределение изменения баланса по позициям.",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfInt32AndDecimal"
          },
          "xml": {
            "name": "KeyValuePair`2",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "ChangeBalanceDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.ChangeBalanceDataModel, Loymax.History.Mobile.Contract"
    },
    "RewardDataModel": {
      "description": "ViewModel данных о вознаграждении.",
      "allOf": [
        {
          "$ref": "#/definitions/ChangeBalanceDataModel"
        }
      ],
      "properties": {
        "offerExternalId": {
          "description": "Идентификатор акции.",
          "type": "string"
        },
        "rewardType": {
          "description": "Тип вознаграждения.",
          "type": "string",
          "enum": [
            "Bonus",
            "Discount",
            "Gift",
            "Charging"
          ],
          "x-loymax-type": "Loymax.History.Mobile.Contract.RewardDataType, Loymax.History.Mobile.Contract",
          "x-loymax-enum-type": "RewardDataType"
        },
        "description": {
          "description": "Описание вознаграждения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "RewardDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.RewardDataModel, Loymax.History.Mobile.Contract"
    },
    "WithdrawDataModel": {
      "description": "ViewModel данных о списании.",
      "allOf": [
        {
          "$ref": "#/definitions/ChangeBalanceDataModel"
        }
      ],
      "properties": {
        "moneyAmount": {
          "description": "Сумма в деньгах.",
          "type": "number",
          "format": "double"
        },
        "withdrawType": {
          "description": "Тип списания.",
          "type": "string",
          "enum": [
            "Bonus",
            "GiftCard",
            "Withdraw"
          ],
          "x-loymax-type": "Loymax.History.Mobile.Contract.WithdrawDataType, Loymax.History.Mobile.Contract",
          "x-loymax-enum-type": "WithdrawDataType"
        },
        "description": {
          "description": "Описание операции.",
          "type": "string"
        }
      },
      "xml": {
        "name": "WithdrawDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.WithdrawDataModel, Loymax.History.Mobile.Contract"
    },
    "HistoryChequeItemModel": {
      "description": "ViewModel позиции чека.",
      "properties": {
        "positionId": {
          "description": "Позиция чека.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "count": {
          "description": "Кол-во.",
          "type": "number",
          "format": "double"
        },
        "unit": {
          "description": "Единица измерения.",
          "type": "string"
        },
        "amount": {
          "description": "Стоимость.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "HistoryChequeItemModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.HistoryChequeItemModel, Loymax.History.Mobile.Contract"
    },
    "HistoryPurchaseDataModel": {
      "description": "ViewModel исторической записи о покупке.",
      "allOf": [
        {
          "$ref": "#/definitions/HistoryDataModel"
        }
      ],
      "properties": {
        "externalPurchaseId": {
          "description": "Идентификатор покупки во внешних системах.",
          "type": "string"
        },
        "chequeItems": {
          "description": "Информация по товарам в чеке.",
          "items": {
            "$ref": "#/definitions/HistoryChequeItemModel"
          },
          "xml": {
            "name": "HistoryChequeItemModel",
            "wrapped": true
          },
          "type": "array"
        },
        "withdraws": {
          "description": "Списания.",
          "items": {
            "$ref": "#/definitions/WithdrawDataModel"
          },
          "xml": {
            "name": "WithdrawDataModel",
            "wrapped": true
          },
          "type": "array"
        },
        "rewards": {
          "description": "Вознаграждения.",
          "items": {
            "$ref": "#/definitions/RewardDataModel"
          },
          "xml": {
            "name": "RewardDataModel",
            "wrapped": true
          },
          "type": "array"
        },
        "isRefund": {
          "description": "Является ли покупка \"Возвратом\".",
          "type": "boolean"
        },
        "chequeNumber": {
          "description": "Номер чека.",
          "type": "string"
        }
      },
      "xml": {
        "name": "HistoryPurchaseDataModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.History.Mobile.Contract.HistoryPurchaseDataModel, Loymax.History.Mobile.Contract"
    },
    "BlockUserIdentifiersActionViewModel": {
      "description": "Действия для блокировки идентификаторов пользователя при достижении лимита.",
      "allOf": [
        {
          "$ref": "#/definitions/LimitActionViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "BlockUserIdentifiersActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.BlockUserIdentifiersActionViewModel, Loymax.SystemApi"
    },
    "BlockAccountGroupActionViewModel": {
      "description": "Действия для блокировки счета пользователя при достижении лимита.",
      "allOf": [
        {
          "$ref": "#/definitions/LimitActionViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "BlockAccountGroupActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.BlockAccountGroupActionViewModel, Loymax.SystemApi"
    },
    "SendNotificationViewModel": {
      "description": "Действия для оповещения при достижении лимита.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/LimitActionViewModel"
        }
      ],
      "properties": {
        "frequency": {
          "description": "Уведомление будет рассылаться не чаще чем раз в указанный период.\r\n            Если не указано, то каждый раз при срабатывании лимита.",
          "type": "string",
          "enum": [
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "x-loymax-type": "Loymax.Common.Helpers.LimitTypeNotificationFrequency, Loymax.Common",
          "x-loymax-enum-type": "LimitTypeNotificationFrequency"
        },
        "message": {
          "description": "Текст уведомления.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SendNotificationViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.SendNotificationViewModel, Loymax.SystemApi"
    },
    "TemplateEmailViewModel": {
      "description": "Действия для оповещения по электронной почте.",
      "allOf": [
        {
          "$ref": "#/definitions/SendNotificationViewModel"
        }
      ],
      "properties": {
        "email": {
          "description": "Адрес электронной почты.",
          "type": "string"
        },
        "header": {
          "description": "Заголовок сообщения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TemplateEmailViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.TemplateEmailViewModel, Loymax.SystemApi"
    },
    "TemplateSmsViewModel": {
      "description": "Действия для оповещения по смс.",
      "allOf": [
        {
          "$ref": "#/definitions/SendNotificationViewModel"
        }
      ],
      "properties": {
        "phone": {
          "description": "Номер телефона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TemplateSmsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Limits.TemplateSmsViewModel, Loymax.SystemApi"
    },
    "OAuthSettingsViewModel": {
      "description": "View-model для настроек клиентов социальных сетей.",
      "allOf": [
        {
          "$ref": "#/definitions/OAuthSettings"
        }
      ],
      "properties": {
        "socialSetUri": {
          "description": "URL API метода привязки социального аккаунта.",
          "type": "string"
        },
        "socialLoginUri": {
          "description": "URL API метода логина социального аккаунта.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OAuthSettingsViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.OAuth.OAuthSettingsViewModel, Loymax.Mobile.Contract"
    },
    "MailingChatBotMessageViewModel": {
      "description": "Модель для сообщения через чатбота.",
      "allOf": [
        {
          "$ref": "#/definitions/MailingMessageViewModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Текст до изображения.",
          "type": "string"
        },
        "url": {
          "description": "Ссылка на изображение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MailingChatBotMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingMessages.MailingChatBotMessageViewModel, Loymax.Common.WebApi"
    },
    "MailingMailMessageViewModel": {
      "description": "Модель почтового сообщения рассылки.",
      "allOf": [
        {
          "$ref": "#/definitions/MailingMessageViewModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Заголовок.",
          "type": "string"
        }
      },
      "xml": {
        "name": "MailingMailMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingMessages.MailingMailMessageViewModel, Loymax.Common.WebApi"
    },
    "MailingPushMessageViewModel": {
      "description": "Модель пуш сообщения рассылки.",
      "allOf": [
        {
          "$ref": "#/definitions/MailingMessageViewModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Заголовок.",
          "type": "string"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "MailingPushMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingMessages.MailingPushMessageViewModel, Loymax.Common.WebApi"
    },
    "MailingSmsMessageViewModel": {
      "description": "Модель смс сообщения рассылки.",
      "allOf": [
        {
          "$ref": "#/definitions/MailingMessageViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "MailingSmsMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingMessages.MailingSmsMessageViewModel, Loymax.Common.WebApi"
    },
    "MailingSocialNetworksMessageViewModel": {
      "description": "Модель для сообщения через социальную сеть.",
      "allOf": [
        {
          "$ref": "#/definitions/MailingMessageViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "MailingSocialNetworksMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingMessages.MailingSocialNetworksMessageViewModel, Loymax.Common.WebApi"
    },
    "MailingViberMessageViewModel": {
      "description": "Модель viber сообщения рассылки.",
      "allOf": [
        {
          "$ref": "#/definitions/MailingMessageViewModel"
        }
      ],
      "properties": {
        "buttonText": {
          "description": "Текст кнопки.",
          "type": "string"
        },
        "url": {
          "description": "URL адрес.",
          "type": "string"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "MailingViberMessageViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.WebApi.Models.Mailings.MailingMessages.MailingViberMessageViewModel, Loymax.Common.WebApi"
    },
    "TemplateMessengerViewModel": {
      "description": "View Model для TemplateMessenger.",
      "allOf": [
        {
          "$ref": "#/definitions/NotifyTemplateViewModel"
        }
      ],
      "properties": {
        "buttonText": {
          "description": "Текст кнопки.",
          "type": "string"
        },
        "url": {
          "description": "URL страницы, на которую будет отправлен пользователь при нажатии на кнопку.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TemplateMessengerViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplateMessengerViewModel, Loymax.SystemApi"
    },
    "TemplateSocialNetworksViewModel": {
      "description": "Шаблон для сообщения через социальную сеть.",
      "allOf": [
        {
          "$ref": "#/definitions/NotifyTemplateViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "TemplateSocialNetworksViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplateSocialNetworksViewModel, Loymax.SystemApi"
    },
    "TemplateChatBotViewModel": {
      "description": "Шаблон для сообщения через чатбота.",
      "allOf": [
        {
          "$ref": "#/definitions/NotifyTemplateViewModel"
        }
      ],
      "properties": {
        "url": {
          "description": "Ссылка на изображение.",
          "type": "string"
        },
        "header": {
          "description": "Заголовок.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TemplateChatBotViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplateChatBotViewModel, Loymax.SystemApi"
    },
    "TemplateHeaderAndTextViewModel": {
      "description": "View Model для TemplateHeaderAndText.",
      "allOf": [
        {
          "$ref": "#/definitions/NotifyTemplateViewModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Заголовок.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TemplateHeaderAndTextViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplateHeaderAndTextViewModel, Loymax.SystemApi"
    },
    "TemplatePushViewModel": {
      "description": "View Model для TemplatePush.",
      "allOf": [
        {
          "$ref": "#/definitions/NotifyTemplateViewModel"
        }
      ],
      "properties": {
        "header": {
          "description": "Заголовок.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TemplatePushViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplatePushViewModel, Loymax.SystemApi"
    },
    "TemplateSimpleViewModel": {
      "description": "View Model для TemplateSimple.",
      "allOf": [
        {
          "$ref": "#/definitions/NotifyTemplateViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "TemplateSimpleViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Notify.TemplateSimpleViewModel, Loymax.SystemApi"
    },
    "GetOfferFilter": {
      "description": "Модель фильтра для получения модели одной акции.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "mode": {
          "description": "Режим отображения акции (просмотр, редактирование, подтверждение).",
          "type": "string",
          "enum": [
            "View",
            "Edit",
            "Accept"
          ],
          "x-loymax-type": "Loymax.SystemApi.Models.Offers.ViewMode, Loymax.SystemApi",
          "x-loymax-enum-type": "ViewMode"
        }
      },
      "xml": {
        "name": "GetOfferFilter"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.GetOfferFilter, Loymax.SystemApi"
    },
    "DeleteActionModel": {
      "description": "Модель для удаления действия.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "actionChainId": {
          "description": "Id цепочки действий.",
          "type": "integer",
          "format": "int32"
        },
        "actionId": {
          "description": "Id действия.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "DeleteActionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.DeleteActionModel, Loymax.SystemApi"
    },
    "OrderModel": {
      "properties": {
        "elementId": {
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "OrderModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.OrderModel, Loymax.WebSites.Common"
    },
    "SetActionChainsOrderModel": {
      "description": "Модель установки порядка для цепочек действий акции.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "chainsOrder": {
          "description": "Модель порядка.",
          "items": {
            "$ref": "#/definitions/OrderModel"
          },
          "xml": {
            "name": "OrderModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "SetActionChainsOrderModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.SetActionChainsOrderModel, Loymax.SystemApi"
    },
    "EditOfferMerchantsModel": {
      "description": "Модель редактирования магазинов акции.",
      "allOf": [
        {
          "$ref": "#/definitions/EditOfferModelBase"
        }
      ],
      "properties": {
        "merchantIds": {
          "description": "Список ID магазинов, в которых будет работать акция.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "EditOfferMerchantsModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.EditOfferMerchantsModel, Loymax.SystemApi"
    },
    "CommonAttributeFilterViewModel": {
      "description": "Модель представления фильтра по обычному атрибуту.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "attributeId": {
          "description": "Идентификатор атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeValue": {
          "description": "Значение атрибута.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CommonAttributeFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CommonAttributeFilterViewModel, Loymax.SystemApi"
    },
    "GoodsAttributeFilterViewModel": {
      "description": "Модель представления фильтра по атрибуту товара.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "goodsAttributeId": {
          "description": "Идентификатор атрибута товара.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GoodsAttributeFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.GoodsAttributeFilterViewModel, Loymax.SystemApi"
    },
    "IncludeAllFilterViewModel": {
      "description": "View модель фильтра \"Include All\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "IncludeAllFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.IncludeAllFilterViewModel, Loymax.SystemApi"
    },
    "ViberAccountFilterViewModel": {
      "description": "View модель фильтра \"Привязан viber аккаунт\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "viberStates": {
          "description": "Привязан ли viber аккаунт.",
          "items": {
            "type": "string",
            "enum": [
              "Exist",
              "NoExist",
              "Unknown"
            ],
            "x-loymax-type": "Loymax.Entities.ViberAccountState, Loymax.Entities",
            "x-loymax-enum-type": "ViberAccountState"
          },
          "xml": {
            "name": "ViberAccountState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "ViberAccountState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<ViberAccountState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.IEnumerable<ViberAccountState>"
        }
      },
      "xml": {
        "name": "ViberAccountFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ViberAccountFilterViewModel, Loymax.SystemApi"
    },
    "EmailBindingFilterViewModel": {
      "description": "View модель фильтра \"Привязан E-Mail\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "emailBinded": {
          "description": "Привязан E-Mail или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "EmailBindingFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.EmailBindingFilterViewModel, Loymax.SystemApi"
    },
    "PartnerCashbackFilterViewModel": {
      "description": "Фильтр наличия бонусов от партнера.",
      "properties": {
        "operation": {
          "description": "Операция сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeletedFilterType": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PartnerCashbackFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PartnerCashbackFilterViewModel, Loymax.SystemApi"
    },
    "PayTypeModel": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logicalName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PayTypeModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.PayTypeModel, Loymax.WebSites.Common"
    },
    "PaymentTypeFilterViewModel": {
      "description": "View модель фильтра типа оплаты.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "paymentTypes": {
          "description": "Список идентификаторов выбранных способов оплаты.",
          "items": {
            "$ref": "#/definitions/PayTypeModel"
          },
          "xml": {
            "name": "PayTypeModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PaymentTypeFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PaymentTypeFilterViewModel, Loymax.SystemApi"
    },
    "GoodsGroupsFilterViewModel": {
      "description": "ViewModel для фильтра по вхождению товара в группу товаров.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "goodsGroups": {
          "description": "Список выбранных групп товаров.",
          "items": {
            "$ref": "#/definitions/GoodsGroupViewModel"
          },
          "xml": {
            "name": "GoodsGroupViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "personalOfferAttributeId": {
          "description": "Идентификатор атрибута \"Персональное предложение\".",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GoodsGroupsFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.GoodsGroupsFilterViewModel, Loymax.SystemApi"
    },
    "ChequeGoodsLimitWithCounterFilterViewModel": {
      "description": "ViewModel для фильтра \"Ограничение на товар\".",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsGroupsFilterViewModel"
        }
      ],
      "properties": {
        "type": {
          "description": "Тип фильтрации.",
          "type": "string",
          "enum": [
            "OnlyGoods",
            "GoodsQuantity",
            "GoodsAmount"
          ],
          "x-loymax-type": "Loymax.Entities.ChequeGoodsFilterType, Loymax.Entities",
          "x-loymax-enum-type": "ChequeGoodsFilterType"
        },
        "operation": {
          "description": "Операция для фильтра.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "value": {
          "description": "Значение для операции.",
          "type": "number",
          "format": "double"
        },
        "counterId": {
          "description": "Идентификатор счетчика.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "ChequeGoodsLimitWithCounterFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ChequeGoodsLimitWithCounterFilterViewModel, Loymax.SystemApi"
    },
    "PositionDirectDiscountFilterViewModel": {
      "description": "View-модель фильтра \"Наличие прямой скидки\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "offer": {
          "$ref": "#/definitions/OfferInfoShortViewModel",
          "description": "Акция, по которой далась скидка."
        }
      },
      "xml": {
        "name": "PositionDirectDiscountFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PositionDirectDiscountFilterViewModel, Loymax.SystemApi"
    },
    "ProbabilityFilterViewModel": {
      "description": "View модель фильтра \"Вероятность\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "probabilityValue": {
          "description": "Вероятность (от 0 до 1).",
          "type": "number",
          "format": "float"
        }
      },
      "xml": {
        "name": "ProbabilityFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ProbabilityFilterViewModel, Loymax.SystemApi"
    },
    "ReferrerFilterViewModel": {
      "description": "View модель фильтра \"Наличие реферера\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "referrerSpecified": {
          "description": "Есть реферер или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ReferrerFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ReferrerFilterViewModel, Loymax.SystemApi"
    },
    "AccountFilterViewModel": {
      "description": "View модель фильтра наличие счета.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "accountExists": {
          "description": "Существует счет или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "AccountFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.AccountFilterViewModel, Loymax.SystemApi"
    },
    "CardTypeFilterViewModel": {
      "description": "View модель фильтра типа карты.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "cardTypes": {
          "description": "Список идентификаторов выбранных категорий карт.",
          "items": {
            "type": "string",
            "enum": [
              "General",
              "Secondary",
              "Virtual"
            ],
            "x-loymax-type": "Loymax.Entities.CardType, Loymax.Entities",
            "x-loymax-enum-type": "CardType"
          },
          "xml": {
            "name": "CardType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CardType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CardType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.IEnumerable<CardType>"
        }
      },
      "xml": {
        "name": "CardTypeFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CardTypeFilterViewModel, Loymax.SystemApi"
    },
    "CounterFilterViewModel": {
      "description": "View модель фильтра \"Счётчик\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "counterId": {
          "description": "Идентификатор счетчика.",
          "type": "integer",
          "format": "int32"
        },
        "counterName": {
          "description": "Наименование счетчика.",
          "type": "string"
        },
        "operation": {
          "description": "Вид сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "value": {
          "description": "Значение для сравнения.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "CounterFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CounterFilterViewModel, Loymax.SystemApi"
    },
    "PersonStateFilterViewModel": {
      "description": "ViewModel фильтра состояний пользователя.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "personStates": {
          "description": "Выбранные выпуски.",
          "items": {
            "type": "string",
            "enum": [
              "Normal",
              "Registered",
              "Anonymous",
              "Deleted",
              "Deregistered"
            ],
            "x-loymax-type": "Loymax.Common.Portable.Model.PersonState, Loymax.Common.Portable",
            "x-loymax-enum-type": "PersonState"
          },
          "xml": {
            "name": "PersonState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "PersonState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<PersonState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<PersonState>"
        }
      },
      "xml": {
        "name": "PersonStateFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PersonStateFilterViewModel, Loymax.SystemApi"
    },
    "SocialActivityFilterViewModel": {
      "description": "View-model для фильтра \"Активность в социальных сетях\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "providerType": {
          "description": "Провайдер (социальная сеть).",
          "type": "string",
          "enum": [
            "Facebook",
            "VKontakte",
            "Instagram",
            "Twitter",
            "Google",
            "MyMail",
            "Odnoklassniki",
            "Loymax"
          ],
          "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthProviderType, Loymax.Business.Social.Common",
          "x-loymax-enum-type": "OAuthProviderType"
        },
        "activityType": {
          "description": "Тип активности.",
          "type": "string",
          "enum": [
            "Reaction",
            "Comment",
            "Share"
          ],
          "x-loymax-type": "Loymax.Business.Social.Common.Model.OAuthActivityType, Loymax.Business.Social.Common",
          "x-loymax-enum-type": "OAuthActivityType"
        },
        "objects": {
          "description": "Отслеживаемые объекты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SocialActivityFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.SocialActivityFilterViewModel, Loymax.SystemApi"
    },
    "OfferEventContextVariableViewModel": {
      "description": "View-модель переменной контекста.",
      "properties": {
        "name": {
          "description": "Имя переменной.",
          "type": "string"
        },
        "displayName": {
          "description": "Отображаемое имя переменной.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OfferEventContextVariableViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.OfferEventContextVariableViewModel, Loymax.SystemApi"
    },
    "OfferEventContextVariableFilterViewModel": {
      "description": "ViewModel для фильтра \"Значение переменной\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "operation": {
          "description": "Операция.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "variable": {
          "$ref": "#/definitions/OfferEventContextVariableViewModel",
          "description": "Переменные контекста акционных событий."
        }
      },
      "xml": {
        "name": "OfferEventContextVariableFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.OfferEventContextVariableFilterViewModel, Loymax.SystemApi"
    },
    "QuestionnaireFilterBaseViewModel": {
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "questionId": {
          "type": "integer",
          "format": "int32"
        },
        "operation": {
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstIntValue": {
          "type": "integer",
          "format": "int32"
        },
        "secondIntValue": {
          "type": "integer",
          "format": "int32"
        },
        "firstDoubleValue": {
          "type": "number",
          "format": "double"
        },
        "secondDoubleValue": {
          "type": "number",
          "format": "double"
        },
        "firstDateValue": {
          "type": "string",
          "format": "date-time"
        },
        "secondDateValue": {
          "type": "string",
          "format": "date-time"
        },
        "stringValue": {
          "type": "string"
        },
        "fixedAnswerIds": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "fixedAnswerNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "boolValue": {
          "type": "boolean"
        },
        "questionType": {
          "type": "string",
          "enum": [
            "String",
            "Select",
            "Date",
            "Check",
            "Int",
            "Double"
          ],
          "x-loymax-type": "Loymax.Entities.QuestionType, Loymax.Entities",
          "x-loymax-enum-type": "QuestionType"
        }
      },
      "xml": {
        "name": "QuestionnaireFilterBaseViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.WebSites.Common.Models.QuestionnaireFilterBaseViewModel, Loymax.WebSites.Common"
    },
    "QuestionnaireFilterViewModel": {
      "description": "Фильтр по анкете пользователя.",
      "allOf": [
        {
          "$ref": "#/definitions/QuestionnaireFilterBaseViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "QuestionnaireFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.QuestionnaireFilterViewModel, Loymax.SystemApi"
    },
    "BirthDayFilterViewModel": {
      "description": "ViewModel для фильтра День рождения.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "daysBefore": {
          "description": "Дней до.",
          "type": "integer",
          "format": "int32"
        },
        "daysAfter": {
          "description": "Дней после.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BirthDayFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.BirthDayFilterViewModel, Loymax.SystemApi"
    },
    "MoneyOperationFilterViewModel": {
      "description": "View модель для фильтров со сравнением в денежных единицах.",
      "required": [],
      "properties": {
        "operation": {
          "description": "Операция сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeletedFilterType": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "MoneyOperationFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.MoneyOperationFilterViewModel, Loymax.SystemApi"
    },
    "CalculatorFilterViewModel": {
      "description": "View млдель фильтра \"Калькулятор\".",
      "allOf": [
        {
          "$ref": "#/definitions/MoneyOperationFilterViewModel"
        }
      ],
      "properties": {
        "calculatorId": {
          "description": "Id калькулятора.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CalculatorFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CalculatorFilterViewModel, Loymax.SystemApi"
    },
    "CardListFilterViewModel": {
      "description": "View модель фильтра \"Список карт\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "cardsNumbers": {
          "description": "Список номеров выбранных карт.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreDeletedCards": {
          "description": "Игнорировать удаленные карты.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CardListFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CardListFilterViewModel, Loymax.SystemApi"
    },
    "CardStateFilterViewModel": {
      "description": "ViewModel фильтра состояний карт.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "cardStates": {
          "description": "Выбранные выпуски.",
          "items": {
            "type": "string",
            "enum": [
              "Emitted",
              "Packed",
              "Activated",
              "Replaced",
              "Creating",
              "Created",
              "Prepared",
              "Issued"
            ],
            "x-loymax-type": "Loymax.Entities.CardState, Loymax.Entities",
            "x-loymax-enum-type": "CardState"
          },
          "xml": {
            "name": "CardState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CardState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CardState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.IEnumerable<CardState>"
        }
      },
      "xml": {
        "name": "CardStateFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CardStateFilterViewModel, Loymax.SystemApi"
    },
    "CardCategoryFilterViewModel": {
      "description": "ViewModel для фильтра \"Категория карт\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "cardCategories": {
          "description": "Список выбранных категорий карт.",
          "items": {
            "$ref": "#/definitions/CardCategoryModel"
          },
          "xml": {
            "name": "CardCategoryModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CardCategoryFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CardCategoryFilterViewModel, Loymax.SystemApi"
    },
    "ChequePositionParameterFilterViewModel": {
      "description": "Модель для фильтра по дополнительным параметрам чековых позиций.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "parameterName": {
          "description": "Имя параметра.",
          "type": "string"
        },
        "parameterExpectedValues": {
          "description": "Ожидаемые значения параметра.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "negative": {
          "description": "Отрицание (значение параметра не должно быть среди ожидаемых).",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ChequePositionParameterFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ChequePositionParameterFilterViewModel, Loymax.SystemApi"
    },
    "GoodsGroupsFilterWithConditionViewModel": {
      "description": "ViewModel для фильтра по вхождению товара из чека в группу тооваров с дополнительными условиями.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/GoodsGroupsFilterViewModel"
        }
      ],
      "properties": {
        "type": {
          "description": "Тип фильтрации.",
          "type": "string",
          "enum": [
            "OnlyGoods",
            "GoodsQuantity",
            "GoodsAmount"
          ],
          "x-loymax-type": "Loymax.Entities.ChequeGoodsFilterType, Loymax.Entities",
          "x-loymax-enum-type": "ChequeGoodsFilterType"
        },
        "operation": {
          "description": "Операция для фильтра.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое значение для операции.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение для операции.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "GoodsGroupsFilterWithConditionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.GoodsGroupsFilterWithConditionViewModel, Loymax.SystemApi"
    },
    "ChequeGoodsFilterViewModel": {
      "description": "ViewModel для фильтра \"Наличие товара в чеке\".",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsGroupsFilterWithConditionViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "ChequeGoodsFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ChequeGoodsFilterViewModel, Loymax.SystemApi"
    },
    "ChequePositionGoodsFilterViewModel": {
      "description": "ViewModel для фильтра \"Товар\".",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsGroupsFilterWithConditionViewModel"
        }
      ],
      "properties": {
        "dividePositions": {
          "description": "Делить позиции по условиям.",
          "type": "boolean"
        },
        "chequeGoodsSortType": {
          "description": "Тип сортировки товаров при покупке.",
          "type": "string",
          "enum": [
            "PositionAscending",
            "PositionDescending",
            "PriceAscending",
            "PriceDescending"
          ],
          "x-loymax-type": "Loymax.Entities.ChequeGoodsSortType, Loymax.Entities",
          "x-loymax-enum-type": "ChequeGoodsSortType"
        }
      },
      "xml": {
        "name": "ChequePositionGoodsFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ChequePositionGoodsFilterViewModel, Loymax.SystemApi"
    },
    "ChequeSumFilterViewModel": {
      "description": "View модель фильтра \"Сумма чека\".",
      "allOf": [
        {
          "$ref": "#/definitions/MoneyOperationFilterViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "ChequeSumFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ChequeSumFilterViewModel, Loymax.SystemApi"
    },
    "PurchaseFilterPeriodViewModel": {
      "description": "View-модель для периода в фильтре по покупкам.",
      "required": [],
      "properties": {},
      "xml": {
        "name": "PurchaseFilterPeriodViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PurchaseFilterPeriodViewModel, Loymax.SystemApi"
    },
    "FloatingPurchaseFilterPeriodViewModel": {
      "description": "View-модель для плавающего периода в фильтре по покупкам.",
      "allOf": [
        {
          "$ref": "#/definitions/PurchaseFilterPeriodViewModel"
        }
      ],
      "properties": {
        "dateIntervalDuration": {
          "description": "Продолжительность плавающего периода для даты покупки.",
          "type": "integer",
          "format": "int32"
        },
        "dateIntervalTimeUnit": {
          "description": "Единица времени плавающего периода для даты покупки.",
          "type": "string",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "x-loymax-type": "Loymax.Entities.TimeUnit, Loymax.Entities",
          "x-loymax-enum-type": "TimeUnit"
        },
        "dateIntervalRoundType": {
          "description": "Уточнение границ плавающего периода для даты покупки.",
          "type": "string",
          "enum": [
            "None",
            "Begin",
            "End"
          ],
          "x-loymax-type": "Loymax.Entities.TimeIntervalRoundType, Loymax.Entities",
          "x-loymax-enum-type": "TimeIntervalRoundType"
        }
      },
      "xml": {
        "name": "FloatingPurchaseFilterPeriodViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.FloatingPurchaseFilterPeriodViewModel, Loymax.SystemApi"
    },
    "FixedPurchaseFilterPeriodViewModel": {
      "description": "View-модель для фиксированного периода в фильтре по покупкам.",
      "allOf": [
        {
          "$ref": "#/definitions/PurchaseFilterPeriodViewModel"
        }
      ],
      "properties": {
        "dateOperation": {
          "description": "Операция для даты покупки.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "dateFirstValue": {
          "description": "Первое значение даты покупки.",
          "type": "string",
          "format": "date-time"
        },
        "dateSecondValue": {
          "description": "Второе значение даты покупки.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "FixedPurchaseFilterPeriodViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.FixedPurchaseFilterPeriodViewModel, Loymax.SystemApi"
    },
    "PurchaseFilterViewModel": {
      "description": "ViewModel для фильтра \"Покупки\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "merchants": {
          "description": "Список выбранных магазинов.",
          "items": {
            "$ref": "#/definitions/MerchantViewModel"
          },
          "xml": {
            "name": "MerchantViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "dateFixedPeriod": {
          "$ref": "#/definitions/FixedPurchaseFilterPeriodViewModel",
          "description": "Фиксированный период даты покупки."
        },
        "dateFloatingPeriod": {
          "$ref": "#/definitions/FloatingPurchaseFilterPeriodViewModel",
          "description": "Плавающий период даты покупки."
        },
        "daysOfWeek": {
          "description": "Дни недели покупок.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-loymax-enum-type": "DayOfWeek"
          },
          "type": "array",
          "x-loymax-enum-type": "DayOfWeek",
          "x-loymax-collection-type": "DayOfWeek[]"
        },
        "beginTime": {
          "$ref": "#/definitions/HourMinuteModel",
          "description": "Время начала покупки."
        },
        "endTime": {
          "$ref": "#/definitions/HourMinuteModel",
          "description": "Время окончания покупки."
        },
        "chequeSumOperation": {
          "description": "Операция сравнения суммы чека.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "chequeSumFirstValue": {
          "description": "Первое значение суммы чека.",
          "type": "number",
          "format": "double"
        },
        "chequeSumSecondValue": {
          "description": "Второе значение суммы чека.",
          "type": "number",
          "format": "double"
        },
        "goodsGroups": {
          "description": "Товары, хотябы один из которых должены присутствовать в чеке.",
          "items": {
            "$ref": "#/definitions/GoodsGroupViewModel"
          },
          "xml": {
            "name": "GoodsGroupViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "filterPositions": {
          "description": "Фильтровать позиции в соответсвии с выбранными товарами.",
          "type": "boolean"
        },
        "includeCurrentPurchase": {
          "description": "Включить текущую покупку в расчет, если она удовлетворяет условиям.",
          "type": "boolean"
        },
        "aggregationType": {
          "description": "Способ агрегации покупок.",
          "type": "string",
          "enum": [
            "PurchaseAmount",
            "PurchaseCount",
            "PositionQuantity",
            "PaymentAmount",
            "CashbackAmount",
            "ChargingAmount",
            "CashbackChargingAmount",
            "AveragePurchaseAmount",
            "DiscountAmount"
          ],
          "x-loymax-type": "Loymax.Entities.FilterPurchaseGroupType, Loymax.Entities",
          "x-loymax-enum-type": "FilterPurchaseGroupType"
        },
        "operation": {
          "description": "Операция сравнения агрегированного значениия.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое значение для сравнения.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение для сравнения.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "PurchaseFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PurchaseFilterViewModel, Loymax.SystemApi"
    },
    "TargetGroupFilterViewModel": {
      "description": "View модель фильтра \"Целевые аудитории\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "targetGroups": {
          "description": "Список идентификаторов выбранных целевых аудиторий.",
          "items": {
            "$ref": "#/definitions/TargetGroupBriefViewModel"
          },
          "xml": {
            "name": "TargetGroupBriefViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "TargetGroupFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.TargetGroupFilterViewModel, Loymax.SystemApi"
    },
    "CouponFilterViewModel": {
      "description": "ViewModel для фильтра \"Наличие купона\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "emissionId": {
          "description": "Идентификатор требуемого выпуска купонов.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Требуемое количество купонов.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CouponFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CouponFilterViewModel, Loymax.SystemApi"
    },
    "ChequeGoodsLimitFilterViewModel": {
      "description": "ViewModel для фильтра \"Ограничение количества товара\".",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsGroupsFilterViewModel"
        }
      ],
      "properties": {
        "dateTimeLimitPeriod": {
          "description": "Период ограничения.",
          "type": "string",
          "enum": [
            "Day",
            "Week",
            "Unlimited"
          ],
          "x-loymax-type": "Loymax.Entities.DateTimeLimitPeriod, Loymax.Entities",
          "x-loymax-enum-type": "DateTimeLimitPeriod"
        },
        "quantity": {
          "description": "Количество товара, которое можно приобрести за период.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "ChequeGoodsLimitFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.ChequeGoodsLimitFilterViewModel, Loymax.SystemApi"
    },
    "PartnerDiscountFilterViewModel": {
      "description": "Фильтр наличия скидки от партнера.",
      "properties": {
        "operation": {
          "description": "Операция сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeletedFilterType": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PartnerDiscountFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PartnerDiscountFilterViewModel, Loymax.SystemApi"
    },
    "PartnerUserAttributeFilterViewModel": {
      "description": "Фильтр по партнерскому атрибуту пользователя.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "partnerUserAttributeId": {
          "description": "Идентификатор атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "operation": {
          "description": "Операция сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое числовое значение.",
          "type": "object"
        },
        "secondValue": {
          "description": "Второе числовое значение.",
          "type": "object"
        },
        "stringValue": {
          "description": "Строковое значение.",
          "type": "string"
        },
        "radioStringItems": {
          "description": "Массив выбранных элементов (для атрибута типа RadioString).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "boolValue": {
          "description": "Булевое значение.",
          "type": "boolean"
        },
        "attributeType": {
          "description": "Тип атрибута.",
          "type": "string",
          "enum": [
            "Double",
            "String",
            "Bool",
            "RadioString",
            "Integer",
            "Date"
          ],
          "x-loymax-type": "Loymax.Entities.PartnerInfoDataType, Loymax.Entities",
          "x-loymax-enum-type": "PartnerInfoDataType"
        }
      },
      "xml": {
        "name": "PartnerUserAttributeFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PartnerUserAttributeFilterViewModel, Loymax.SystemApi"
    },
    "PhoneBindingFilterViewModel": {
      "description": "View модель фильтра \"Привязан телефон\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "phoneBinded": {
          "description": "Привязан телефон или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PhoneBindingFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.PhoneBindingFilterViewModel, Loymax.SystemApi"
    },
    "WildcardMaskCouponFilterViewModel": {
      "description": "Фильтр купонов по маске.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "wildcardMask": {
          "description": "Маска номера купона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "WildcardMaskCouponFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.WildcardMaskCouponFilterViewModel, Loymax.SystemApi"
    },
    "CardEmissionFilterViewModel": {
      "description": "ViewModel для фильтра выпуск карт.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "emissionIds": {
          "description": "Выбранные выпуски.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CardEmissionFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.CardEmissionFilterViewModel, Loymax.SystemApi"
    },
    "DateFilterViewModel": {
      "description": "ViewModel для фильтра \"Дни\".",
      "properties": {
        "operation": {
          "description": "Операция сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.Entities.FilterOperation, Loymax.Entities",
          "x-loymax-enum-type": "FilterOperation"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "string",
          "format": "date-time"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isDeletedFilterType": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "DateFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.DateFilterViewModel, Loymax.SystemApi"
    },
    "MerchantFilterViewModel": {
      "description": "ViewModel для фильтра \"Магазины\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "merchants": {
          "description": "Список выбранных магазинов.",
          "items": {
            "$ref": "#/definitions/MerchantViewModel"
          },
          "xml": {
            "name": "MerchantViewModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "MerchantFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.MerchantFilterViewModel, Loymax.SystemApi"
    },
    "TimePeriodFilterViewModel": {
      "description": "ViewModel для фильтра \"Часы\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "beginTime": {
          "$ref": "#/definitions/HourMinuteModel",
          "description": "Время начала."
        },
        "endTime": {
          "$ref": "#/definitions/HourMinuteModel",
          "description": "Время окончания."
        }
      },
      "xml": {
        "name": "TimePeriodFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.TimePeriodFilterViewModel, Loymax.SystemApi"
    },
    "WeekDayFilterViewModel": {
      "description": "ViewModel для фильтра дни недели.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterViewModel"
        }
      ],
      "properties": {
        "daysOfWeek": {
          "description": "Дни недели.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-loymax-enum-type": "DayOfWeek"
          },
          "type": "array",
          "x-loymax-enum-type": "DayOfWeek",
          "x-loymax-collection-type": "DayOfWeek[]"
        }
      },
      "xml": {
        "name": "WeekDayFilterViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Filters.WeekDayFilterViewModel, Loymax.SystemApi"
    },
    "AttributeDiscount": {
      "properties": {
        "attributeDiscountType": {
          "type": "string",
          "enum": [
            "PricePerUnit",
            "AmountPerWeight"
          ],
          "x-loymax-type": "Loymax.Entities.Action.AttributeDiscountType, Loymax.Entities",
          "x-loymax-enum-type": "AttributeDiscountType"
        },
        "catalogAttributeId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "AttributeDiscount"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Domain.Contract.Model.Offer.Action.AttributeDiscount, Loymax.Domain.Contract"
    },
    "AmountActionViewModelBase": {
      "description": "Модель дейтсвия со значением скидки/бонусов.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "percent": {
          "description": "Значение процентов скидки/бонусов.",
          "type": "number",
          "format": "double"
        },
        "pricePerUnit": {
          "description": "Значение фиксированной цены на единицу товара.",
          "type": "number",
          "format": "double"
        },
        "amountPerUnit": {
          "description": "Значение суммы скидки/бонусов за единицу товара.",
          "type": "number",
          "format": "double"
        },
        "amountPerUniqueSku": {
          "description": "Значение суммы скидки/бонусов на sku.",
          "type": "number",
          "format": "double"
        },
        "amount": {
          "description": "Значение фиксированной суммы скидки/бонусов.",
          "type": "number",
          "format": "double"
        },
        "amountMeasure": {
          "description": "Сумма, за каждое достижение в чеке которой начисляется фиксированные скидки/бонусов.",
          "type": "number",
          "format": "double"
        },
        "amountPerMeasure": {
          "description": "Сумма фиксированных скидки/бонуса, которая начисляется за каждое достижение в чеке суммы.",
          "type": "number",
          "format": "double"
        },
        "amountWeight": {
          "description": "Масса, за каждое достижение в чеке которой начисляется фиксированные скидки/бонусов.",
          "type": "number",
          "format": "double"
        },
        "amountPerWeight": {
          "description": "Сумма фиксированных скидки/бонуса, которая начисляется за каждое достижение в чеке массы.",
          "type": "number",
          "format": "double"
        },
        "price": {
          "description": "Значение фиксированной цены.",
          "type": "number",
          "format": "double"
        },
        "attributeDiscount": {
          "$ref": "#/definitions/AttributeDiscount",
          "description": "Скидка из атрибута товара."
        },
        "distributeToAll": {
          "description": "Распределить на все.",
          "type": "boolean"
        },
        "calculationExclusionDiscountTypes": {
          "description": "Типы скидок, которые исключаются при расчете.",
          "items": {
            "type": "string",
            "enum": [
              "Discount",
              "PaymentLoymaxBonus",
              "PaymentExternalBonus"
            ],
            "x-loymax-type": "Loymax.Entities.CalculationExclusionDiscountType, Loymax.Entities",
            "x-loymax-enum-type": "CalculationExclusionDiscountType"
          },
          "xml": {
            "name": "CalculationExclusionDiscountType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CalculationExclusionDiscountType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CalculationExclusionDiscountType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<CalculationExclusionDiscountType>"
        }
      },
      "xml": {
        "name": "AmountActionViewModelBase"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.AmountActionViewModelBase, Loymax.SystemApi"
    },
    "CashbackActionViewModel": {
      "description": "Модель для редактирования действия начиления бонусов.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/AmountActionViewModelBase"
        }
      ],
      "properties": {
        "lifeTimeDefinitionId": {
          "description": "Id определения времени жизни.",
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyViewModel",
          "description": "Валюта."
        }
      },
      "xml": {
        "name": "CashbackActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CashbackActionViewModel, Loymax.SystemApi"
    },
    "CashbackForWeightActionViewModel": {
      "description": "Модель для редактирования действия начиления бонусов за вес.",
      "allOf": [
        {
          "$ref": "#/definitions/CashbackActionViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "CashbackForWeightActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CashbackForWeightActionViewModel, Loymax.SystemApi"
    },
    "PaymentActionViewModel": {
      "description": "Модель для действия \"Оплата\".",
      "allOf": [
        {
          "$ref": "#/definitions/AmountActionViewModelBase"
        }
      ],
      "properties": {
        "currency": {
          "$ref": "#/definitions/CurrencyViewModel",
          "description": "Валюта."
        },
        "rate": {
          "description": "Курс.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "PaymentActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.PaymentActionViewModel, Loymax.SystemApi"
    },
    "DiscountActionViewModel": {
      "description": "Модель для редактирования действия предоставления скидки.",
      "allOf": [
        {
          "$ref": "#/definitions/AmountActionViewModelBase"
        }
      ],
      "properties": {},
      "xml": {
        "name": "DiscountActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.DiscountActionViewModel, Loymax.SystemApi"
    },
    "FavoriteGoodsActionViewModel": {
      "description": "View модель дейтвия сообщение на чек.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "changeType": {
          "description": "Тип изменения.",
          "type": "string",
          "enum": [
            "IncreaseCellsCount",
            "DecreaseCellsCount"
          ],
          "x-loymax-type": "Loymax.Entities.FavoriteGoodsChangeType, Loymax.Entities",
          "x-loymax-enum-type": "FavoriteGoodsChangeType"
        },
        "value": {
          "description": "Значение.",
          "type": "integer",
          "format": "int32"
        },
        "attributeId": {
          "description": "Идентификатор атрибута персонального предложения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "FavoriteGoodsActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.FavoriteGoodsActionViewModel, Loymax.SystemApi"
    },
    "CorrectionPaymentActionViewModel": {
      "description": "View модель действия \"Корректировка оплаты\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "roundValue": {
          "description": "Значение округления в копейках.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CorrectionPaymentActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CorrectionPaymentActionViewModel, Loymax.SystemApi"
    },
    "InitialPriceActionViewModel": {
      "description": "Модель для редактирования действия \"Установка первоначальной цены\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "catalogAttributeId": {
          "description": "Идентификатор атрибута каталога.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "InitialPriceActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.InitialPriceActionViewModel, Loymax.SystemApi"
    },
    "GoodsSetItemInfoViewModel": {
      "description": "Информация о составляющей набора.",
      "properties": {
        "goodsGroup": {
          "$ref": "#/definitions/GoodsGroupViewModel",
          "description": "Идентификатор группы товаров."
        },
        "value": {
          "description": "Значение для добавления в набор.",
          "type": "number",
          "format": "double"
        },
        "useSameGoods": {
          "description": "Флаг необходимости формировать набор только из одинаковых товаров.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "GoodsSetItemInfoViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.GoodsSetItemInfoViewModel, Loymax.SystemApi"
    },
    "GoodsSetDivideActionViewModel": {
      "description": "Модель представления действия \"Разделение по наборам\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "compositionInfo": {
          "description": "Источник данных о товарах, из который будет формироваться набор.",
          "items": {
            "$ref": "#/definitions/GoodsSetItemInfoViewModel"
          },
          "xml": {
            "name": "GoodsSetItemInfoViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "targetFieldType": {
          "description": "Поле, по значениям которого будет формироваться набор.",
          "type": "string",
          "enum": [
            "Quantity",
            "Amount"
          ],
          "x-loymax-type": "Loymax.Entities.ChequeGoodsSetType, Loymax.Entities",
          "x-loymax-enum-type": "ChequeGoodsSetType"
        },
        "chequeGoodsSortType": {
          "description": "Поле сортировки.",
          "type": "string",
          "enum": [
            "PositionAscending",
            "PositionDescending",
            "PriceAscending",
            "PriceDescending"
          ],
          "x-loymax-type": "Loymax.Entities.ChequeGoodsSortType, Loymax.Entities",
          "x-loymax-enum-type": "ChequeGoodsSortType"
        },
        "personalAttributeId": {
          "description": "Идентификатор атрибута персональных предложений.",
          "type": "integer",
          "format": "int32"
        },
        "goodsAttributeId": {
          "description": "Идентификатор атрибута товара.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GoodsSetDivideActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.GoodsSetDivideActionViewModel, Loymax.SystemApi"
    },
    "PersonalUpdateActionViewModel": {
      "description": "View модель действия обновления персонального предложения.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "attributeId": {
          "description": "Идентификатор атрибута персонального предложения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PersonalUpdateActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.PersonalUpdateActionViewModel, Loymax.SystemApi"
    },
    "ChequeMessageActionViewModel": {
      "description": "View модель дейтвия сообщение на чек.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "message": {
          "description": "Текст сообщения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ChequeMessageActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.ChequeMessageActionViewModel, Loymax.SystemApi"
    },
    "CashierMessageActionViewModel": {
      "description": "View модель действия сообщения кассиру.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "message": {
          "description": "Текст сообщения.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CashierMessageActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CashierMessageActionViewModel, Loymax.SystemApi"
    },
    "CounterActionViewModel": {
      "description": "Модель для редактирования действия \"Счётчик\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "counterId": {
          "description": "Привязанный счётчик.",
          "type": "integer",
          "format": "int32"
        },
        "targets": {
          "description": "Список моделей для счётчика.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "increment": {
          "description": "Величина изменения счётчика.",
          "type": "number",
          "format": "double"
        },
        "incrementType": {
          "description": "Тип инкремента.",
          "type": "string",
          "enum": [
            "Constant",
            "ContextVariable",
            "IssuedPreference"
          ],
          "x-loymax-type": "Loymax.Entities.IncrementType, Loymax.Entities",
          "x-loymax-enum-type": "IncrementType"
        },
        "variable": {
          "$ref": "#/definitions/OfferEventContextVariableViewModel",
          "description": "Контекстная переменная."
        },
        "isAdding": {
          "description": "Знак, который будет применяться к значению контекстной переменнной.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CounterActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CounterActionViewModel, Loymax.SystemApi"
    },
    "SwitchTriggeredMailingActionViewModel": {
      "description": "Модель для действий по переключению триггерных рассылок.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "mailingId": {
          "description": "Идентификатор рассылки.",
          "type": "integer",
          "format": "int32"
        },
        "mailingName": {
          "description": "Название рассылки.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SwitchTriggeredMailingActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.SwitchTriggeredMailingActionViewModel, Loymax.SystemApi"
    },
    "DisableTriggeredMailingActionViewModel": {
      "description": "Модель для действия \"Выключить оповещение\".",
      "allOf": [
        {
          "$ref": "#/definitions/SwitchTriggeredMailingActionViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "DisableTriggeredMailingActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.DisableTriggeredMailingActionViewModel, Loymax.SystemApi"
    },
    "EnableTriggeredMailingActionViewModel": {
      "description": "Модель для действия \"Включить оповещение\".",
      "allOf": [
        {
          "$ref": "#/definitions/SwitchTriggeredMailingActionViewModel"
        }
      ],
      "properties": {},
      "xml": {
        "name": "EnableTriggeredMailingActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.EnableTriggeredMailingActionViewModel, Loymax.SystemApi"
    },
    "WithdrawActionViewModel": {
      "description": "Модель для редактирования действия \"Списание бонусов\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "amount": {
          "description": "Сумма изъятия.",
          "type": "number",
          "format": "double"
        },
        "device": {
          "$ref": "#/definitions/DeviceBriefViewModel",
          "description": "Дебетовая касса."
        },
        "currency": {
          "$ref": "#/definitions/CurrencyViewModel",
          "description": "Валюта."
        }
      },
      "xml": {
        "name": "WithdrawActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.WithdrawActionViewModel, Loymax.SystemApi"
    },
    "SendMessageActionViewModel": {
      "description": "View модель действия отправки сообщения.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "messageType": {
          "description": "Тип сообщения.",
          "type": "string",
          "enum": [
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.Entities.MessageType, Loymax.Entities",
          "x-loymax-enum-type": "MessageType"
        },
        "templateMessage": {
          "description": "Шаблон сообщения.",
          "type": "string"
        },
        "subject": {
          "description": "Заголовок.",
          "type": "string"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "buttonText": {
          "description": "Текст кнопки.",
          "type": "string"
        },
        "url": {
          "description": "URL страницы, на которую будет отправлен пользователь при нажатии на кнопку.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SendMessageActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.SendMessageActionViewModel, Loymax.SystemApi"
    },
    "CorrectionDiscountActionViewModel": {
      "description": "View модель действия \"Корректировка прямой скидки\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "roundValue": {
          "description": "Занчение округления в копейках.",
          "type": "integer",
          "format": "int32"
        },
        "correctionTypeDiscounts": {
          "description": "Тип распределения скидки между позициями.",
          "type": "string",
          "enum": [
            "AllCheque",
            "WithoutDiscount",
            "HighPrice"
          ],
          "x-loymax-type": "Loymax.Entities.CorrectionTypeDiscounts, Loymax.Entities",
          "x-loymax-enum-type": "CorrectionTypeDiscounts"
        }
      },
      "xml": {
        "name": "CorrectionDiscountActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CorrectionDiscountActionViewModel, Loymax.SystemApi"
    },
    "MinPriceActionViewModel": {
      "description": "Модель для редактирования действия \"Установка мин. цены\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "percent": {
          "description": "Процент.",
          "type": "number",
          "format": "double"
        },
        "fixedAmount": {
          "description": "Фиксированная сумма.",
          "type": "number",
          "format": "double"
        },
        "fixedPrice": {
          "description": "Фиксированная цена.",
          "type": "number",
          "format": "double"
        },
        "goodsAttributeId": {
          "description": "Идентификатор атрибута каталога.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "MinPriceActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.MinPriceActionViewModel, Loymax.SystemApi"
    },
    "CashbackNnActionViewModel": {
      "description": "Модель для редактирования действия \"Бонусы (Нижний Новгород)\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "percent": {
          "description": "Значение процентов бонусов.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "CashbackNnActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CashbackNnActionViewModel, Loymax.SystemApi"
    },
    "PartnerCashbackActionViewModel": {
      "description": "View модель действия начиления партнерских бонусов.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "currency": {
          "$ref": "#/definitions/CurrencyViewModel",
          "description": "Валюта."
        }
      },
      "xml": {
        "name": "PartnerCashbackActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.PartnerCashbackActionViewModel, Loymax.SystemApi"
    },
    "ChargingActionViewModel": {
      "description": "Модель для редактирования действия начисления дополнительных бонусов.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "amount": {
          "description": "Значние фиксированной суммы.",
          "type": "number",
          "format": "double"
        },
        "lifeTimeDefinition": {
          "$ref": "#/definitions/LifeTimeDefinitionBaseViewModel",
          "description": "Модель определения времени жизни."
        },
        "device": {
          "$ref": "#/definitions/DeviceBriefViewModel",
          "description": "Дебетовая касса."
        },
        "currency": {
          "$ref": "#/definitions/CurrencyViewModel",
          "description": "Валюта."
        }
      },
      "xml": {
        "name": "ChargingActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.ChargingActionViewModel, Loymax.SystemApi"
    },
    "CouponIssueActionViewModel": {
      "description": "Модель для редактирования действия \"Выдать купон\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {
        "couponEmissionId": {
          "description": "Идентификатор выпуска купонов.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Тип выдачи купонов.",
          "type": "string",
          "enum": [
            "Cheque",
            "Email",
            "PhoneMessage",
            "CashierMessage",
            "PushNotification"
          ],
          "x-loymax-type": "Loymax.Domain.Contract.Model.Offer.Action.ActionCouponIssueType, Loymax.Domain.Contract",
          "x-loymax-enum-type": "ActionCouponIssueType"
        },
        "templateMessage": {
          "description": "Шаблон сообщения пр выдачи купона.",
          "type": "string"
        },
        "subject": {
          "description": "Заголовок..",
          "type": "string"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "CouponIssueActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.CouponIssueActionViewModel, Loymax.SystemApi"
    },
    "PartnerDiscountActionViewModel": {
      "description": "Модель для редактирования действия \"Партнерская прямая скидка\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PartnerDiscountActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.PartnerDiscountActionViewModel, Loymax.SystemApi"
    },
    "SetCouponUsedActionViewModel": {
      "description": "Модель для редактирования действия погашения купонов.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferActionViewModelBase"
        }
      ],
      "properties": {},
      "xml": {
        "name": "SetCouponUsedActionViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.SystemApi.Models.Offers.Actions.SetCouponUsedActionViewModel, Loymax.SystemApi"
    },
    "IdentifiersDto": {
      "description": "Идентификатора клиентов.",
      "properties": {
        "type": {
          "description": "Тип.",
          "type": "string",
          "enum": [
            "CardNumber"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TargetGroupFilter.IdentifierType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "IdentifierType"
        },
        "identifiers": {
          "description": "Идентификаторы клиентов.",
          "items": {
            "$ref": "#/definitions/IdentifierDto"
          },
          "xml": {
            "name": "IdentifierDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "IdentifiersDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TargetGroupFilter.IdentifiersDto, Loymax.ImportExport.Dto"
    },
    "IdentifierDto": {
      "description": "Идентификатор.",
      "properties": {
        "value": {
          "description": "Значение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "IdentifierDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TargetGroupFilter.IdentifierDto, Loymax.ImportExport.Dto"
    },
    "NewTargetGroupDto": {
      "description": "Новая целевая аудитория.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTargetGroupDto"
        }
      ],
      "properties": {
        "name": {
          "description": "Название.",
          "type": "string"
        },
        "description": {
          "description": "Описание.",
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/PartnerDto",
          "description": "Партнёр."
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgramDto",
          "description": "Программа лояльности."
        },
        "identifiers": {
          "$ref": "#/definitions/IdentifiersDto",
          "description": "Идентификаторы клиентов."
        }
      },
      "xml": {
        "name": "NewTargetGroupDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TargetGroupFilter.NewTargetGroupDto, Loymax.ImportExport.Dto"
    },
    "TargetGroupDto": {
      "description": "Существующая целевая аудитория.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTargetGroupDto"
        }
      ],
      "properties": {
        "id": {
          "description": "Id целевой аудитории.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "TargetGroupDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TargetGroupFilter.TargetGroupDto, Loymax.ImportExport.Dto"
    },
    "AttachEmailEventDto": {
      "description": "Событие \"Привязка E-Mail\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "AttachEmailEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.AttachEmailEventDto, Loymax.ImportExport.Dto"
    },
    "AttachPhoneEventDto": {
      "description": "Событие \"Привязка телефона\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "AttachPhoneEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.AttachPhoneEventDto, Loymax.ImportExport.Dto"
    },
    "BalanceRequestEventDto": {
      "description": "Событие \"Запрос баланса\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "BalanceRequestEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.BalanceRequestEventDto, Loymax.ImportExport.Dto"
    },
    "CardActivationEventDto": {
      "description": "Событие \"Активация карты\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "CardActivationEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.CardActivationEventDto, Loymax.ImportExport.Dto"
    },
    "CardIssueEventDto": {
      "description": "Событие \"Выдача карты\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "CardIssueEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.CardIssueEventDto, Loymax.ImportExport.Dto"
    },
    "EndPersonRegistrationEventDto": {
      "description": "Событие \"Регистрация пользователя завершена\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "EndPersonRegistrationEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.EndPersonRegistrationEventDto, Loymax.ImportExport.Dto"
    },
    "FriendInviteEventDto": {
      "description": "Пользователь приглашает друга.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "FriendInviteEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.FriendInviteEventDto, Loymax.ImportExport.Dto"
    },
    "GoodsSetProcessEventDto": {
      "description": "Событие \"Обработка набора товаров\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "GoodsSetProcessEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.GoodsSetProcessEventDto, Loymax.ImportExport.Dto"
    },
    "MobileAppInstallEventDto": {
      "description": "Событие \"Установка мобильного приложения\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "MobileAppInstallEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.MobileAppInstallEventDto, Loymax.ImportExport.Dto"
    },
    "PurchaseCalculateEventDto": {
      "description": "Событие \"Расчет скидки\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PurchaseCalculateEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.PurchaseCalculateEventDto, Loymax.ImportExport.Dto"
    },
    "PurchaseCancelEventDto": {
      "description": "Событие \"Отмена покупки\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PurchaseCancelEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.PurchaseCancelEventDto, Loymax.ImportExport.Dto"
    },
    "PurchaseConfirmEventDto": {
      "description": "Событие \"Завершение покупки\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PurchaseConfirmEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.PurchaseConfirmEventDto, Loymax.ImportExport.Dto"
    },
    "PurchaseDiscountEventDto": {
      "description": "Событие \"Расчет бонусов\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PurchaseDiscountEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.PurchaseDiscountEventDto, Loymax.ImportExport.Dto"
    },
    "PurchasePaymentEventDto": {
      "description": "Событие \"Оплата\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PurchasePaymentEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.PurchasePaymentEventDto, Loymax.ImportExport.Dto"
    },
    "PurchaseRefundEventDto": {
      "description": "Событие \"Возврат покупки\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PurchaseRefundEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.PurchaseRefundEventDto, Loymax.ImportExport.Dto"
    },
    "QuestionnaireUpdateEventDto": {
      "description": "Активность в социальных сетях.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "QuestionnaireUpdateEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.QuestionnaireUpdateEventDto, Loymax.ImportExport.Dto"
    },
    "ReferralPurchaseEventDto": {
      "description": "Событие \"Покупка рефералом\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "ReferralPurchaseEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.ReferralPurchaseEventDto, Loymax.ImportExport.Dto"
    },
    "RemoveSocialActivityEventDto": {
      "description": "Удаление пользователем активности в социальных сетях.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "RemoveSocialActivityEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.RemoveSocialActivityEventDto, Loymax.ImportExport.Dto"
    },
    "SendPasswordToChequeEventDto": {
      "description": "Событие \"Отправка пароля на чек\" для акции.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "SendPasswordToChequeEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.SendPasswordToChequeEventDto, Loymax.ImportExport.Dto"
    },
    "SocialActivityEventDto": {
      "description": "Активность в социальных сетях.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "SocialActivityEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.SocialActivityEventDto, Loymax.ImportExport.Dto"
    },
    "SocialGroupJoinEventDto": {
      "description": "Вступление в группу социальной сети.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "SocialGroupJoinEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.SocialGroupJoinEventDto, Loymax.ImportExport.Dto"
    },
    "SocialGroupLeaveEventDto": {
      "description": "Выход из группы социальной сети.",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "SocialGroupLeaveEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.SocialGroupLeaveEventDto, Loymax.ImportExport.Dto"
    },
    "SocialNetworkLinkEventDto": {
      "description": "Событие \"Привязка соц. сети\".",
      "allOf": [
        {
          "$ref": "#/definitions/OfferEventDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "SocialNetworkLinkEventDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Events.SocialNetworkLinkEventDto, Loymax.ImportExport.Dto"
    },
    "AccountFilterDto": {
      "description": "Фильтр \"Наличие счета\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "accountExists": {
          "description": "Существует счет или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "AccountFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.AccountFilterDto, Loymax.ImportExport.Dto"
    },
    "BirthDayFilterDto": {
      "description": "Фильтр \"День рождения\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "daysBefore": {
          "description": "Дней до.",
          "type": "integer",
          "format": "int32"
        },
        "daysAfter": {
          "description": "Дней после.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "BirthDayFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.BirthDayFilterDto, Loymax.ImportExport.Dto"
    },
    "CalculatorFilterDto": {
      "description": "Фильтр \"Фильтр по репозиторию\".",
      "properties": {
        "calculatorId": {
          "description": "Id калькулятора.",
          "type": "integer",
          "format": "int32"
        },
        "operator": {
          "description": "Операция.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Имя фильтра.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CalculatorFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CalculatorFilterDto, Loymax.ImportExport.Dto"
    },
    "CardCategoryFilterDto": {
      "description": "Фильтр \"Категория карты\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "cardCategoryIds": {
          "description": "Список идентификаторов выбранных категорий карт.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CardCategoryFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CardCategoryFilterDto, Loymax.ImportExport.Dto"
    },
    "CardEmissionFilterDto": {
      "description": "Фильтр \"Карта из указанного выпуска\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "emissionIds": {
          "description": "Выбранные выпуски.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CardEmissionFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CardEmissionFilterDto, Loymax.ImportExport.Dto"
    },
    "CardListFilterDto": {
      "description": "Фильтр \"Список карт\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "cards": {
          "description": "Номера выбранных карт.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "CardListFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CardListFilterDto, Loymax.ImportExport.Dto"
    },
    "CardStateFilterDto": {
      "description": "Фильтр \"Состояние карты\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "cardStates": {
          "description": "Список состояний карты.",
          "items": {
            "type": "string",
            "enum": [
              "Emitted",
              "Packed",
              "Activated",
              "Replaced",
              "Creating",
              "Created",
              "Prepared",
              "Issued"
            ],
            "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CardState, Loymax.ImportExport.Dto",
            "x-loymax-enum-type": "CardState"
          },
          "xml": {
            "name": "CardState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CardState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CardState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<CardState>"
        }
      },
      "xml": {
        "name": "CardStateFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CardStateFilterDto, Loymax.ImportExport.Dto"
    },
    "CardTypeFilterDto": {
      "description": "Фильтр \"Тип карты\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "cardTypes": {
          "description": "Список типов карт.",
          "items": {
            "type": "string",
            "enum": [
              "General",
              "Secondary",
              "Virtual"
            ],
            "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CardType, Loymax.ImportExport.Dto",
            "x-loymax-enum-type": "CardType"
          },
          "xml": {
            "name": "CardType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CardType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CardType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<CardType>"
        }
      },
      "xml": {
        "name": "CardTypeFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CardTypeFilterDto, Loymax.ImportExport.Dto"
    },
    "BaseGoodsGroupDto": {
      "description": "Группа товаров.",
      "properties": {},
      "xml": {
        "name": "BaseGoodsGroupDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.BaseGoodsGroupDto, Loymax.ImportExport.Dto"
    },
    "BaseGoodsFilterDto": {
      "description": "Базоый класс для фильтров по чеку.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "goodsGroups": {
          "description": "Группы товаров.",
          "items": {
            "$ref": "#/definitions/BaseGoodsGroupDto"
          },
          "xml": {
            "name": "BaseGoodsGroupDto",
            "wrapped": true
          },
          "type": "array"
        },
        "personalOfferAttributeLogicalName": {
          "description": "Логическое имя атрибута \"Персональное предложение\".",
          "type": "string"
        }
      },
      "xml": {
        "name": "BaseGoodsFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.BaseGoodsFilterDto, Loymax.ImportExport.Dto"
    },
    "BaseGoodsWithConditionsFilterDto": {
      "description": "Базоый класс для фильтров по чеку c условиями.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/BaseGoodsFilterDto"
        }
      ],
      "properties": {
        "type": {
          "description": "Тип фильтрации.",
          "type": "string",
          "enum": [
            "OnlyGoods",
            "GoodsQuantity",
            "GoodsAmount"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsFilterType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ChequeGoodsFilterType"
        },
        "operator": {
          "description": "Gets or sets the operator.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValue": {
          "description": "Первое значение для операции.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение для операции.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "BaseGoodsWithConditionsFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.BaseGoodsWithConditionsFilterDto, Loymax.ImportExport.Dto"
    },
    "ChequeGoodsFilterDto": {
      "description": "Фильтр \"Наличие товара в чеке\".",
      "allOf": [
        {
          "$ref": "#/definitions/BaseGoodsWithConditionsFilterDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "ChequeGoodsFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsFilterDto, Loymax.ImportExport.Dto"
    },
    "ChequePositionGoodsFilterDto": {
      "description": "Фильтр \"Товар\".",
      "allOf": [
        {
          "$ref": "#/definitions/BaseGoodsWithConditionsFilterDto"
        }
      ],
      "properties": {
        "dividePositions": {
          "description": "Делить позиции по условиям.",
          "type": "boolean"
        },
        "chequeGoodsSortType": {
          "description": "Тип сортировки товаров при покупке.",
          "type": "string",
          "enum": [
            "PositionAscending",
            "PositionDescending",
            "PriceAscending",
            "PriceDescending"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsSortType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ChequeGoodsSortType"
        }
      },
      "xml": {
        "name": "ChequePositionGoodsFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequePositionGoodsFilterDto, Loymax.ImportExport.Dto"
    },
    "ChequeGoodsLimitFilterDto": {
      "description": "Фильтр \"Ограничение количества товара\".",
      "allOf": [
        {
          "$ref": "#/definitions/BaseGoodsFilterDto"
        }
      ],
      "properties": {
        "period": {
          "description": "Период ограничения.",
          "type": "string",
          "enum": [
            "Day",
            "Week",
            "Unlimited"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.DateTimeLimitPeriod, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "DateTimeLimitPeriod"
        },
        "quantity": {
          "description": "Количество товара, которое можно приобрести за период.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "ChequeGoodsLimitFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsLimitFilterDto, Loymax.ImportExport.Dto"
    },
    "BaseCounterDto": {
      "description": "Счетчик.",
      "properties": {},
      "xml": {
        "name": "BaseCounterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Counter.BaseCounterDto, Loymax.ImportExport.Dto"
    },
    "ChequeGoodsLimitWithCounterFilterDto": {
      "description": "Фильтр \"Ограничение на товар\".",
      "allOf": [
        {
          "$ref": "#/definitions/BaseGoodsFilterDto"
        }
      ],
      "properties": {
        "type": {
          "description": "Тип фильтрации.",
          "type": "string",
          "enum": [
            "OnlyGoods",
            "GoodsQuantity",
            "GoodsAmount"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsFilterType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ChequeGoodsFilterType"
        },
        "operator": {
          "description": "Оператор сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "value": {
          "description": "Значение для операции.",
          "type": "number",
          "format": "double"
        },
        "counter": {
          "$ref": "#/definitions/BaseCounterDto",
          "description": "Cчетчик."
        }
      },
      "xml": {
        "name": "ChequeGoodsLimitWithCounterFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsLimitWithCounterFilterDto, Loymax.ImportExport.Dto"
    },
    "PurchaseFilterMerchants": {
      "description": "Магазины, в которых совершались покупки.",
      "properties": {
        "merchants": {
          "description": "Магазины, в которых совершались покупки.",
          "items": {
            "$ref": "#/definitions/MerchantDto"
          },
          "xml": {
            "name": "MerchantDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PurchaseFilterMerchants"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PurchaseFilterMerchants, Loymax.ImportExport.Dto"
    },
    "PurchaseFilterDate": {
      "description": "Даты покупок.",
      "properties": {
        "operator": {
          "description": "Оператор сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValueAsString": {
          "description": "Первое значение (pure xml).",
          "type": "string"
        },
        "secondValueAsString": {
          "description": "Второе значение (pure xml).",
          "type": "string"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "string",
          "format": "date-time"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "PurchaseFilterDate"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PurchaseFilterDate, Loymax.ImportExport.Dto"
    },
    "PurchaseFilterDateInterval": {
      "description": "Даты покупок в плавающем периоде.",
      "properties": {
        "roundType": {
          "description": "Уточнение границ.",
          "type": "string",
          "enum": [
            "None",
            "Begin",
            "End"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TimeIntervalRoundType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "TimeIntervalRoundType"
        },
        "timeUnit": {
          "description": "Единица времени.",
          "type": "string",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TimeUnit, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "TimeUnit"
        },
        "duration": {
          "description": "Продолжительность периода в единицах времени.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PurchaseFilterDateInterval"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PurchaseFilterDateInterval, Loymax.ImportExport.Dto"
    },
    "PurchaseFilterDaysOfWeek": {
      "description": "Дни недели покупок.",
      "properties": {
        "daysOfWeek": {
          "description": "Дни недели покупок.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-loymax-enum-type": "DayOfWeek"
          },
          "type": "array",
          "x-loymax-enum-type": "DayOfWeek",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<DayOfWeek>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<DayOfWeek>"
        }
      },
      "xml": {
        "name": "PurchaseFilterDaysOfWeek"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PurchaseFilterDaysOfWeek, Loymax.ImportExport.Dto"
    },
    "PurchaseFilterTime": {
      "description": "Время покупок.",
      "properties": {
        "beginHour": {
          "description": "Часы начала.",
          "type": "integer",
          "format": "int32"
        },
        "beginMinute": {
          "description": "Минуты начала.",
          "type": "integer",
          "format": "int32"
        },
        "endHour": {
          "description": "Часы окончания.",
          "type": "integer",
          "format": "int32"
        },
        "endMinute": {
          "description": "Минуты окончания.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "PurchaseFilterTime"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PurchaseFilterTime, Loymax.ImportExport.Dto"
    },
    "PurchaseFilterChequeSum": {
      "description": "Сумма чека.",
      "properties": {
        "operator": {
          "description": "Операция.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "PurchaseFilterChequeSum"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PurchaseFilterChequeSum, Loymax.ImportExport.Dto"
    },
    "PurchaseFilterDto": {
      "description": "Фильтр \"Покупки\".",
      "allOf": [
        {
          "$ref": "#/definitions/BaseGoodsFilterDto"
        }
      ],
      "properties": {
        "merchants": {
          "$ref": "#/definitions/PurchaseFilterMerchants",
          "description": "Магазины, в которых совершались покупки."
        },
        "date": {
          "$ref": "#/definitions/PurchaseFilterDate",
          "description": "Даты покупок."
        },
        "dateInterval": {
          "$ref": "#/definitions/PurchaseFilterDateInterval",
          "description": "Дата покупок в плавающем периоде."
        },
        "daysOfWeek": {
          "$ref": "#/definitions/PurchaseFilterDaysOfWeek",
          "description": "Дни недели покупок."
        },
        "time": {
          "$ref": "#/definitions/PurchaseFilterTime",
          "description": "Время покупок."
        },
        "chequeSum": {
          "$ref": "#/definitions/PurchaseFilterChequeSum",
          "description": "Сумма чека."
        },
        "filterPositions": {
          "description": "Фильтровать позиции в соответсвии с выбранными товарами.",
          "type": "boolean"
        },
        "includeCurrentPurchase": {
          "description": "Включить текущую покупку в расчет, если она удовлетворяет условиям.",
          "type": "boolean"
        },
        "aggregationType": {
          "description": "Способ агрегации покупок.",
          "type": "string",
          "enum": [
            "PurchaseAmount",
            "PurchaseCount",
            "PositionQuantity",
            "PaymentAmount",
            "CashbackAmount",
            "ChargingAmount",
            "CashbackChargingAmount",
            "AveragePurchaseAmount",
            "DiscountAmount"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.FilterPurchaseGroupType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "FilterPurchaseGroupType"
        },
        "operator": {
          "description": "Оператор сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "PurchaseFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PurchaseFilterDto, Loymax.ImportExport.Dto"
    },
    "ChequePositionParameterFilterDto": {
      "description": "Фильтр \"Дополнительная информация по чековой позиции\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "parameterName": {
          "description": "Имя параметра.",
          "type": "string"
        },
        "expectedValues": {
          "description": "Ожидаемые значения параметра.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "isNegative": {
          "description": "Отрицание (значение параметра не должно быть среди ожидаемых).",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ChequePositionParameterFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequePositionParameterFilterDto, Loymax.ImportExport.Dto"
    },
    "ChequeSumFilterDto": {
      "description": "Фильтр \"Сумма чека\".",
      "properties": {
        "operator": {
          "description": "Операция.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Имя фильтра.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ChequeSumFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeSumFilterDto, Loymax.ImportExport.Dto"
    },
    "CommonAttributeFilterDto": {
      "description": "Фильтр по common атрибуту.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "attributeId": {
          "description": "Идентификатор атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "attributeValue": {
          "description": "Значение атрибута.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CommonAttributeFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CommonAttributeFilterDto, Loymax.ImportExport.Dto"
    },
    "CounterFilterDto": {
      "description": "Фильтр \"Счётчик\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "counter": {
          "$ref": "#/definitions/BaseCounterDto",
          "description": "Cчетчик."
        },
        "operation": {
          "description": "Тип операции сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "value": {
          "description": "Значение для сравнения.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "CounterFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CounterFilterDto, Loymax.ImportExport.Dto"
    },
    "CouponFilterDto": {
      "description": "Фильтр \"Наличие купона\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "emissionId": {
          "description": "Id эмиссии купонов.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Необходимое количество купонов.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CouponFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.CouponFilterDto, Loymax.ImportExport.Dto"
    },
    "DateFilterDto": {
      "description": "Фильтр \"Дни\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "operator": {
          "description": "Оператор сравнения.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValueAsString": {
          "description": "Первое значение (pure xml).",
          "type": "string"
        },
        "secondValueAsString": {
          "description": "Второе значение (pure xml).",
          "type": "string"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "string",
          "format": "date-time"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "DateFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.DateFilterDto, Loymax.ImportExport.Dto"
    },
    "EmailBindingFilterDto": {
      "description": "Фильтр \"Привязан E-Mail\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "emailBinded": {
          "description": "Привязан E-Mail или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "EmailBindingFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.EmailBindingFilterDto, Loymax.ImportExport.Dto"
    },
    "GoodsAttributeFilterDto": {
      "description": "Фильтр по атрибуту товара.",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "goodsAttributeId": {
          "description": "Идентификатор атрибута товара.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GoodsAttributeFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.GoodsAttributeFilterDto, Loymax.ImportExport.Dto"
    },
    "MerchantFilterDto": {
      "description": "Фильтр \"Магазины\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "merchants": {
          "description": "Магазины.",
          "items": {
            "$ref": "#/definitions/MerchantDto"
          },
          "xml": {
            "name": "MerchantDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "MerchantFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.MerchantFilterDto, Loymax.ImportExport.Dto"
    },
    "OfferEventContextVariableFilterDto": {
      "description": "Фильтр \"Значение переменной\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "operator": {
          "description": "Операция.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "variable": {
          "description": "Переменные контекста акционных событий.",
          "type": "string",
          "enum": [
            "ChequeSum",
            "PartnerDiscountSum",
            "FullChequeSum",
            "PaymentSum",
            "UnprocessedPositionsSum",
            "UnprocessedPositionsWithoutPaymentSum",
            "CountGoods",
            "ResultChequeSum",
            "ResultChequePaymentSum",
            "RefundChequeSum",
            "RefundPaymentSum",
            "ResultRefundChequeSum",
            "ResultRefundChequePaymentSum",
            "ResultChequeDiscountSum",
            "ResultRefundChequeDiscountSum",
            "ResultChequePaymentDiscountSum",
            "ResultRefundChequePaymentDiscountSum",
            "PurchaseUsedCouponsCoupons",
            "CountFilteredGoods",
            "CountFilteredPositions",
            "PaymentAmount",
            "CashPaymentSum"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.OfferEventContextVariable, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "OfferEventContextVariable"
        }
      },
      "xml": {
        "name": "OfferEventContextVariableFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.OfferEventContextVariableFilterDto, Loymax.ImportExport.Dto"
    },
    "PartnerOperationFilterDto": {
      "description": "Базоый класс для фильтров с партнерскими операциями.",
      "required": [],
      "properties": {
        "operator": {
          "description": "Операция.",
          "type": "string",
          "enum": [
            "More",
            "Less",
            "Equals",
            "Between",
            "MoreOrEqual",
            "LessOrEqual",
            "BetweenLessEqual",
            "BetweenMoreEqual",
            "BetweenEqual",
            "Each"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.ComparisonOperator, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ComparisonOperator"
        },
        "firstValue": {
          "description": "Первое значение.",
          "type": "number",
          "format": "double"
        },
        "secondValue": {
          "description": "Второе значение.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Имя фильтра.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PartnerOperationFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PartnerOperationFilterDto, Loymax.ImportExport.Dto"
    },
    "PartnerCashbackFilterDto": {
      "description": "Фильтр \"Наличие бонусов от партнера\".",
      "allOf": [
        {
          "$ref": "#/definitions/PartnerOperationFilterDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PartnerCashbackFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PartnerCashbackFilterDto, Loymax.ImportExport.Dto"
    },
    "PartnerDiscountFilterDto": {
      "description": "Фильтр \"Наличие скидки от партнера\".",
      "allOf": [
        {
          "$ref": "#/definitions/PartnerOperationFilterDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PartnerDiscountFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PartnerDiscountFilterDto, Loymax.ImportExport.Dto"
    },
    "PartnerAttributeFilterValue": {
      "description": "Абстрактное значение фильтра по партнерскому атрибуту.",
      "properties": {},
      "xml": {
        "name": "PartnerAttributeFilterValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PartnerAttributeFilterValue, Loymax.ImportExport.Dto"
    },
    "PartnerUserAttributeFilterDto": {
      "description": "Фильтр \"Значение партнерского атрибута у пользователя.\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "partnerUserAttributeId": {
          "description": "Идентификатор атрибута.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "$ref": "#/definitions/PartnerAttributeFilterValue",
          "description": "Значение фильтра."
        }
      },
      "xml": {
        "name": "PartnerUserAttributeFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PartnerUserAttributeFilterDto, Loymax.ImportExport.Dto"
    },
    "PaymentTypeFilterDto": {
      "description": "Фильтр \"Тип карты\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "paymentTypesIds": {
          "description": "Список способов оплаты.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "PaymentTypeFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PaymentTypeFilterDto, Loymax.ImportExport.Dto"
    },
    "PersonStateFilterDto": {
      "description": "Фильтр \"Состояние пользователя\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "personStates": {
          "description": "Список состояний пользователя.",
          "items": {
            "type": "string",
            "enum": [
              "Normal",
              "Registered",
              "Anonymous",
              "Deleted",
              "Deregistered"
            ],
            "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PersonState, Loymax.ImportExport.Dto",
            "x-loymax-enum-type": "PersonState"
          },
          "xml": {
            "name": "PersonState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "PersonState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<PersonState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<PersonState>"
        }
      },
      "xml": {
        "name": "PersonStateFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PersonStateFilterDto, Loymax.ImportExport.Dto"
    },
    "PhoneBindingFilterDto": {
      "description": "Фильтр \"Привязка телефона\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "phoneBinded": {
          "description": "Привязан телефон или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PhoneBindingFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PhoneBindingFilterDto, Loymax.ImportExport.Dto"
    },
    "OfferLinkDto": {
      "description": "Ссылка на акцию.",
      "properties": {
        "offerId": {
          "description": "Внешний идентификатор акции.",
          "type": "string"
        },
        "partnerId": {
          "description": "Идентификатор партнера акции.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "OfferLinkDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.OfferLinkDto, Loymax.ImportExport.Dto"
    },
    "PositionDirectDiscountFilterDto": {
      "description": "Фильтр \"Наличие прямой скидки\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "offer": {
          "$ref": "#/definitions/OfferLinkDto",
          "description": "Акция, по которой далась прямая скидка."
        }
      },
      "xml": {
        "name": "PositionDirectDiscountFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.PositionDirectDiscountFilterDto, Loymax.ImportExport.Dto"
    },
    "ProbabilityFilterDto": {
      "description": "Фильтр \"Вероятность\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "probabilityValue": {
          "description": "Вероятность (от 0 до 1).",
          "type": "number",
          "format": "float"
        }
      },
      "xml": {
        "name": "ProbabilityFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ProbabilityFilterDto, Loymax.ImportExport.Dto"
    },
    "QuestionnaireFilterValue": {
      "description": "Абстрактное значение фильтра по вопросу анкеты.",
      "properties": {},
      "xml": {
        "name": "QuestionnaireFilterValue"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.QuestionnaireFilterValue, Loymax.ImportExport.Dto"
    },
    "QuestionnaireFilterDto": {
      "description": "Фильтр \"Анкетная информация\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "questionId": {
          "description": "Идентификатор вопроса.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "$ref": "#/definitions/QuestionnaireFilterValue",
          "description": "Значение фильтра."
        }
      },
      "xml": {
        "name": "QuestionnaireFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.QuestionnaireFilterDto, Loymax.ImportExport.Dto"
    },
    "ReferrerFilterDto": {
      "description": "Фильтр \"Наличие реферера\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "referrerSpecified": {
          "description": "Есть реферер или нет.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ReferrerFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ReferrerFilterDto, Loymax.ImportExport.Dto"
    },
    "SocialActivityFilterDto": {
      "description": "Фильтр \"Активность в социальных сетях\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "providerType": {
          "description": "Тип провайдера OAuth.",
          "type": "string",
          "enum": [
            "Facebook",
            "VKontakte",
            "Instagram",
            "Twitter",
            "Google",
            "MyMail",
            "Odnoklassniki",
            "Loymax"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.OAuthProviderType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "OAuthProviderType"
        },
        "activityType": {
          "description": "Тип социальной активности.",
          "type": "string",
          "enum": [
            "Reaction",
            "Comment",
            "Share"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.OAuthActivityType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "OAuthActivityType"
        },
        "objects": {
          "description": "Отслеживаемые объекты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SocialActivityFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.SocialActivityFilterDto, Loymax.ImportExport.Dto"
    },
    "TargetGroupFilterDto": {
      "description": "Фильтр \"Целевые аудитории\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "targetGroups": {
          "description": "Список выбранных целевых аудиторий.",
          "items": {
            "$ref": "#/definitions/BaseTargetGroupDto"
          },
          "xml": {
            "name": "BaseTargetGroupDto",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "TargetGroupFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TargetGroupFilterDto, Loymax.ImportExport.Dto"
    },
    "TimePeriodFilterDto": {
      "description": "Фильтр \"Временной промежуток\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "beginHour": {
          "description": "Часы начала.",
          "type": "integer",
          "format": "int32"
        },
        "beginMinute": {
          "description": "Минуты начала.",
          "type": "integer",
          "format": "int32"
        },
        "endHour": {
          "description": "Часы окончания.",
          "type": "integer",
          "format": "int32"
        },
        "endMinute": {
          "description": "Минуты окончания.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "TimePeriodFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.TimePeriodFilterDto, Loymax.ImportExport.Dto"
    },
    "UnknownFilterDto": {
      "description": "Фильтр для замены всех фильтров, которые не конвертируются в xml (находятся в плагинах).",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "UnknownFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.UnknownFilterDto, Loymax.ImportExport.Dto"
    },
    "ViberAccountFilterDto": {
      "description": "Фильтр \"Привязан viber аккаунт\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "viberStates": {
          "description": "Привязан ли viber аккаунт.",
          "items": {
            "type": "string",
            "enum": [
              "Exist",
              "NoExist",
              "Unknown"
            ],
            "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ViberAccountState, Loymax.ImportExport.Dto",
            "x-loymax-enum-type": "ViberAccountState"
          },
          "xml": {
            "name": "ViberAccountState",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "ViberAccountState",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<ViberAccountState>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<ViberAccountState>"
        }
      },
      "xml": {
        "name": "ViberAccountFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ViberAccountFilterDto, Loymax.ImportExport.Dto"
    },
    "WeekDayFilterDto": {
      "description": "Фильтр \"День недели\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "daysOfWeek": {
          "description": "Дни недели.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-loymax-enum-type": "DayOfWeek"
          },
          "type": "array",
          "x-loymax-enum-type": "DayOfWeek",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<DayOfWeek>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<DayOfWeek>"
        }
      },
      "xml": {
        "name": "WeekDayFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.WeekDayFilterDto, Loymax.ImportExport.Dto"
    },
    "WildcardMaskCouponFilterDto": {
      "description": "Фильтр \"Фильтр купон по маске\".",
      "allOf": [
        {
          "$ref": "#/definitions/FilterDto"
        }
      ],
      "properties": {
        "wildcardMask": {
          "description": "Маска номера купона.",
          "type": "string"
        }
      },
      "xml": {
        "name": "WildcardMaskCouponFilterDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.WildcardMaskCouponFilterDto, Loymax.ImportExport.Dto"
    },
    "AttributeDiscountDto": {
      "description": "Скидка из атрибута товара.",
      "properties": {
        "attributeDiscountType": {
          "description": "Тип расчета из атрнибута.",
          "type": "string",
          "enum": [
            "PricePerUnit",
            "AmountPerWeight"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.AttributeDiscountType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "AttributeDiscountType"
        },
        "catalogAttributeId": {
          "description": "Id атрибута каталога.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "AttributeDiscountDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.AttributeDiscountDto, Loymax.ImportExport.Dto"
    },
    "AmountActionDto": {
      "description": "Действие акции \"Бонусы\" или \"Скидка\".",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "percent": {
          "description": "Процент. Значение от 0 до 1.",
          "type": "number",
          "format": "double"
        },
        "amountPerUnit": {
          "description": "Сумма скидки на единицу товара.",
          "type": "number",
          "format": "double"
        },
        "amountPerUniqueSku": {
          "description": "Сумма скидки на sku.",
          "type": "number",
          "format": "double"
        },
        "pricePerUnit": {
          "description": "Цена за единицу товара.",
          "type": "number",
          "format": "double"
        },
        "amount": {
          "description": "Фиксированная сумма скидки.",
          "type": "number",
          "format": "double"
        },
        "amountMeasure": {
          "description": "Сумма, за каждое достижение в чеке которой начисляется фиксированная скидка/бонус{Loymax.ImportExport.Dto.Offers.Actions.AmountActionDto.AmountPerMeasure}.",
          "type": "number",
          "format": "double"
        },
        "amountPerMeasure": {
          "description": "Сумма фиксированной скидки/бонуса, которая начисляется за каждое достижение в чеке суммы{Loymax.ImportExport.Dto.Offers.Actions.AmountActionDto.AmountMeasure}.",
          "type": "number",
          "format": "double"
        },
        "amountWeight": {
          "description": "Масса, за каждое достижение в чеке которой начисляется фиксированная скидка/бонус{Loymax.ImportExport.Dto.Offers.Actions.AmountActionDto.AmountPerWeight}.",
          "type": "number",
          "format": "double"
        },
        "amountPerWeight": {
          "description": "Сумма фиксированной скидки/бонуса, которая начисляется за каждое достижение в чеке массы{Loymax.ImportExport.Dto.Offers.Actions.AmountActionDto.AmountWeight}.",
          "type": "number",
          "format": "double"
        },
        "price": {
          "description": "Фиксированная цена всех товаров.",
          "type": "number",
          "format": "double"
        },
        "attributeDiscount": {
          "$ref": "#/definitions/AttributeDiscountDto",
          "description": "Атрибут для расчета."
        },
        "distributeToAll": {
          "description": "Распределить на все.",
          "type": "boolean"
        },
        "discountType": {
          "description": "Тип скидки (readonly, рассчитывается на основе других полей).",
          "type": "string",
          "enum": [
            "Percent",
            "Amount",
            "PricePerUnit",
            "AmountPerUnit",
            "AmountPerMeasure",
            "Price",
            "AmountPerUniqueSku",
            "AmountPerWeight"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.ActionDiscountType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ActionDiscountType"
        },
        "calculationExclusionDiscountTypes": {
          "description": "Типы скидок, которые исключаются при расчете.",
          "items": {
            "type": "string",
            "enum": [
              "Discount",
              "PaymentLoymaxBonus",
              "PaymentExternalBonus"
            ],
            "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CalculationExclusionDiscountType, Loymax.ImportExport.Dto",
            "x-loymax-enum-type": "CalculationExclusionDiscountType"
          },
          "xml": {
            "name": "CalculationExclusionDiscountType",
            "wrapped": true
          },
          "type": "array",
          "x-loymax-enum-type": "CalculationExclusionDiscountType",
          "x-loymax-collection-type": "System.Collections.Generic.IEnumerable<CalculationExclusionDiscountType>",
          "x-loymax-property-collection-type": "System.Collections.Generic.List<CalculationExclusionDiscountType>"
        }
      },
      "xml": {
        "name": "AmountActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.AmountActionDto, Loymax.ImportExport.Dto"
    },
    "CashbackActionDto": {
      "description": "Действие акции \"Бонусы\".",
      "allOf": [
        {
          "$ref": "#/definitions/AmountActionDto"
        }
      ],
      "properties": {
        "lifeTimeDefinitionId": {
          "description": "Время жизни.",
          "type": "integer",
          "format": "int32"
        },
        "currencyExternalId": {
          "description": "Внешний идентификатор валюты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CashbackActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CashbackActionDto, Loymax.ImportExport.Dto"
    },
    "CashbackForWeightActionDto": {
      "description": "Действие акции \"Бонусы\".",
      "allOf": [
        {
          "$ref": "#/definitions/AmountActionDto"
        }
      ],
      "properties": {
        "lifeTimeDefinitionId": {
          "description": "Время жизни.",
          "type": "integer",
          "format": "int32"
        },
        "currencyExternalId": {
          "description": "Внешний идентификатор валюты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CashbackForWeightActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CashbackForWeightActionDto, Loymax.ImportExport.Dto"
    },
    "DirectDiscountActionDto": {
      "description": "Действие акции \"Скидка\".",
      "allOf": [
        {
          "$ref": "#/definitions/AmountActionDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "DirectDiscountActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.DirectDiscountActionDto, Loymax.ImportExport.Dto"
    },
    "PaymentActionDto": {
      "description": "Действие \"Оплата\".",
      "allOf": [
        {
          "$ref": "#/definitions/AmountActionDto"
        }
      ],
      "properties": {
        "rate": {
          "description": "Значение курса.",
          "type": "number",
          "format": "double"
        },
        "currencyExternalId": {
          "description": "Внешний идентификатор валюты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PaymentActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.PaymentActionDto, Loymax.ImportExport.Dto"
    },
    "CashbackNnActionDto": {
      "description": "Действие акции \"Бонусы Нижнего Новгорода\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "percent": {
          "description": "Процент в долях.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "CashbackNnActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CashbackNnActionDto, Loymax.ImportExport.Dto"
    },
    "CashierMessageActionDto": {
      "description": "Действие акции \"Вывод сообщения кассиру\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "message": {
          "description": "Сообщение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "CashierMessageActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CashierMessageActionDto, Loymax.ImportExport.Dto"
    },
    "ChargingActionDto": {
      "description": "Действие акции \"Доп. бонусы\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "amount": {
          "description": "Фиксированная сумма.",
          "type": "number",
          "format": "double"
        },
        "deviceId": {
          "description": "Логическое имя дебетовой кассы.",
          "type": "string"
        },
        "currencyExternalId": {
          "description": "Внешний идентификатор валюты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ChargingActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.ChargingActionDto, Loymax.ImportExport.Dto"
    },
    "ChequeMessageActionDto": {
      "description": "Действие акции \"Вывод сообщения на чек\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "message": {
          "description": "Сообщение.",
          "type": "string"
        }
      },
      "xml": {
        "name": "ChequeMessageActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.ChequeMessageActionDto, Loymax.ImportExport.Dto"
    },
    "CorrectionDirectDiscountActionDto": {
      "description": "Действие акции \"Корректировка прямой скидки\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "roundValue": {
          "description": "Значение округления в копейках.",
          "type": "integer",
          "format": "int32"
        },
        "correctionTypeDiscounts": {
          "description": "Тип распределения скидки между позициями.",
          "type": "string",
          "enum": [
            "AllCheque",
            "WithoutDiscount",
            "HighPrice"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CorrectionTypeDiscounts, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "CorrectionTypeDiscounts"
        }
      },
      "xml": {
        "name": "CorrectionDirectDiscountActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CorrectionDirectDiscountActionDto, Loymax.ImportExport.Dto"
    },
    "CorrectionPaymentActionDto": {
      "description": "Действие акции \"Корректировка оплаты\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "roundValue": {
          "description": "Значение округления в копейках.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "CorrectionPaymentActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CorrectionPaymentActionDto, Loymax.ImportExport.Dto"
    },
    "CounterActionDto": {
      "description": "Действие акции \"Счётчик\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "increment": {
          "description": "Значение шага счетчика.",
          "type": "number",
          "format": "double"
        },
        "incrementVariable": {
          "description": "Переменная, значение которой будет шагом счетчика.",
          "type": "string",
          "enum": [
            "ChequeSum",
            "PartnerDiscountSum",
            "FullChequeSum",
            "PaymentSum",
            "UnprocessedPositionsSum",
            "UnprocessedPositionsWithoutPaymentSum",
            "CountGoods",
            "ResultChequeSum",
            "ResultChequePaymentSum",
            "RefundChequeSum",
            "RefundPaymentSum",
            "ResultRefundChequeSum",
            "ResultRefundChequePaymentSum",
            "ResultChequeDiscountSum",
            "ResultRefundChequeDiscountSum",
            "ResultChequePaymentDiscountSum",
            "ResultRefundChequePaymentDiscountSum",
            "PurchaseUsedCouponsCoupons",
            "CountFilteredGoods",
            "CountFilteredPositions",
            "PaymentAmount",
            "CashPaymentSum"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.OfferEventContextVariable, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "OfferEventContextVariable"
        },
        "isAdding": {
          "description": "Признак, что переменная будет увеличивать значение счетчика.",
          "type": "boolean"
        },
        "incrementType": {
          "description": "Тип инкремента счетчика.",
          "type": "string",
          "enum": [
            "Constant",
            "ContextVariable",
            "IssuedPreference"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.IncrementType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "IncrementType"
        },
        "counter": {
          "$ref": "#/definitions/BaseCounterDto",
          "description": "Cчетчик."
        }
      },
      "xml": {
        "name": "CounterActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CounterActionDto, Loymax.ImportExport.Dto"
    },
    "CouponIssueActionDto": {
      "description": "Действие акции \"Выдача купона\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "couponEmissionId": {
          "description": "Идентификатор выпуска.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Тип выдачи купона.",
          "type": "string",
          "enum": [
            "Cheque",
            "Email",
            "PhoneMessage",
            "CashierMessage",
            "PushNotification"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.ActionCouponIssueType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ActionCouponIssueType"
        },
        "templateMessage": {
          "description": "Шаблон сообщения.",
          "type": "string"
        },
        "subject": {
          "description": "Заголовок. Используется для {Loymax.ImportExport.Dto.Offers.Actions.ActionCouponIssueType.Email} и {Loymax.ImportExport.Dto.Offers.Actions.ActionCouponIssueType.PushNotification}.",
          "type": "string"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "CouponIssueActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.CouponIssueActionDto, Loymax.ImportExport.Dto"
    },
    "SwitchTriggeredMailingActionDto": {
      "description": "Базовый dto для действий включения/выключения триггерных рассылок.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "mailingId": {
          "description": "Идентификатор рассылки.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "SwitchTriggeredMailingActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.SwitchTriggeredMailingActionDto, Loymax.ImportExport.Dto"
    },
    "DisableTriggeredMailingActionDto": {
      "description": "Действие акции \"Выключить оповещение\".",
      "allOf": [
        {
          "$ref": "#/definitions/SwitchTriggeredMailingActionDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "DisableTriggeredMailingActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.DisableTriggeredMailingActionDto, Loymax.ImportExport.Dto"
    },
    "EnableTriggeredMailingActionDto": {
      "description": "Действие акции \"Включить оповещение\".",
      "allOf": [
        {
          "$ref": "#/definitions/SwitchTriggeredMailingActionDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "EnableTriggeredMailingActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.EnableTriggeredMailingActionDto, Loymax.ImportExport.Dto"
    },
    "FavoriteGoodsActionDto": {
      "description": "Действие акции \"Любимые товары\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "changeType": {
          "description": "Тип изменения.",
          "type": "string",
          "enum": [
            "IncreaseCellsCount",
            "DecreaseCellsCount"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.FavoriteGoodsChangeType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "FavoriteGoodsChangeType"
        },
        "value": {
          "description": "Значение.",
          "type": "integer",
          "format": "int32"
        },
        "attributeId": {
          "description": "Идентификатор атрибута персонального предложения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "FavoriteGoodsActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.FavoriteGoodsActionDto, Loymax.ImportExport.Dto"
    },
    "GoodsSetItemDto": {
      "description": "Элемент набора.",
      "properties": {
        "goodsGroup": {
          "$ref": "#/definitions/BaseGoodsGroupDto",
          "description": "Группа товаров."
        },
        "value": {
          "description": "Значение.",
          "type": "number",
          "format": "double"
        },
        "useSameGoods": {
          "description": "Необходимо ли формировать набор только из одинаковых товаров..",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "GoodsSetItemDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.GoodsSetItemDto, Loymax.ImportExport.Dto"
    },
    "GoodsSetDivideActionDto": {
      "description": "Действие \"Разбиение по наборам\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "event": {
          "$ref": "#/definitions/GoodsSetProcessEventDto",
          "description": "Зависимое от действия событие."
        },
        "compositionInfo": {
          "description": "Источник данных о товарах, из который будет формироваться набор.",
          "items": {
            "$ref": "#/definitions/GoodsSetItemDto"
          },
          "xml": {
            "name": "GoodsSetItemDto",
            "wrapped": true
          },
          "type": "array"
        },
        "targetFieldType": {
          "description": "Поле, по значениям которого будет формироваться набор.",
          "type": "string",
          "enum": [
            "Quantity",
            "Amount"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsSetType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ChequeGoodsSetType"
        },
        "chequeGoodsSortType": {
          "description": "Тип сортировки.",
          "type": "string",
          "enum": [
            "PositionAscending",
            "PositionDescending",
            "PriceAscending",
            "PriceDescending"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Filters.ChequeGoodsSortType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "ChequeGoodsSortType"
        },
        "personalAttribute": {
          "description": "Логическое имя персонального атрибута.",
          "type": "string"
        },
        "goodsAttributeId": {
          "description": "Идентификатор атрибута товара.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GoodsSetDivideActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.GoodsSetDivideActionDto, Loymax.ImportExport.Dto"
    },
    "InitialPriceActionDto": {
      "description": "Действие акции \"Установка первоначальной цены\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "catalogAttributeId": {
          "description": "Id атрибута, содержащий значение ограничения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "InitialPriceActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.InitialPriceActionDto, Loymax.ImportExport.Dto"
    },
    "MinPriceActionDto": {
      "description": "Действие акции \"Установка минимальной цены\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "percent": {
          "description": "Процент.",
          "type": "number",
          "format": "double"
        },
        "fixedAmount": {
          "description": "Фиксированная сумма.",
          "type": "number",
          "format": "double"
        },
        "fixedPrice": {
          "description": "Фиксированная сумма на каждую единицу товара.",
          "type": "number",
          "format": "double"
        },
        "catalogAttributeId": {
          "description": "Id атрибута, содержащий значение ограничения.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "MinPriceActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.MinPriceActionDto, Loymax.ImportExport.Dto"
    },
    "PartnerCashbackDiscountActionDto": {
      "description": "Действие акции \"Партнерские бонусы\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "currencyExternalId": {
          "description": "Внешний идентификатор валюты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PartnerCashbackDiscountActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.PartnerCashbackDiscountActionDto, Loymax.ImportExport.Dto"
    },
    "PartnerCouponDiscountActionDto": {
      "description": "Действие \"Расчет скидки по купону\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PartnerCouponDiscountActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.PartnerCouponDiscountActionDto, Loymax.ImportExport.Dto"
    },
    "PartnerDirectDiscountActionDto": {
      "description": "Действие акции \"Партнерская скидка\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "PartnerDirectDiscountActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.PartnerDirectDiscountActionDto, Loymax.ImportExport.Dto"
    },
    "PersonalOfferUpdateActionDto": {
      "description": "Действие \"Обновление персонального предложения\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "attributeName": {
          "description": "Логическое имя атрибута.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PersonalOfferUpdateActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.PersonalOfferUpdateActionDto, Loymax.ImportExport.Dto"
    },
    "SendMessageActionDto": {
      "description": "Действие акции \"Отправка сообщения\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "messageType": {
          "description": "Тип сообщения.",
          "type": "string",
          "enum": [
            "Sms",
            "Email",
            "Push",
            "Viber",
            "SocialNetworks",
            "ChatBot"
          ],
          "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.MessageType, Loymax.ImportExport.Dto",
          "x-loymax-enum-type": "MessageType"
        },
        "templateMessage": {
          "description": "Шаблон сообщения.",
          "type": "string"
        },
        "subject": {
          "description": "Заголовок.",
          "type": "string"
        },
        "imageId": {
          "description": "Идентификатор изображения.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "buttonText": {
          "description": "Текст кнопки.",
          "type": "string"
        },
        "url": {
          "description": "URL страницы, на которую будет отправлен пользователь при нажатии на кнопку.",
          "type": "string"
        }
      },
      "xml": {
        "name": "SendMessageActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.SendMessageActionDto, Loymax.ImportExport.Dto"
    },
    "SetCouponUsedActionDto": {
      "description": "Действие акции \"Погашение купонов\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {},
      "xml": {
        "name": "SetCouponUsedActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.SetCouponUsedActionDto, Loymax.ImportExport.Dto"
    },
    "WithdrawActionDto": {
      "description": "Действие акции \"Списание бонусов\".",
      "allOf": [
        {
          "$ref": "#/definitions/ActionDto"
        }
      ],
      "properties": {
        "amount": {
          "description": "Сумма изъятия.",
          "type": "number",
          "format": "double"
        },
        "deviceId": {
          "description": "Логическое имя дебетовой кассы.",
          "type": "string"
        },
        "currencyExternalId": {
          "description": "Внешний идентификатор валюты.",
          "type": "string"
        }
      },
      "xml": {
        "name": "WithdrawActionDto"
      },
      "type": "object",
      "x-loymax-type": "Loymax.ImportExport.Dto.Offers.Actions.WithdrawActionDto, Loymax.ImportExport.Dto"
    },
    "FinishRegistrationResult": {
      "description": "Результат окончания регистрации.",
      "allOf": [
        {
          "$ref": "#/definitions/AuthResultModel"
        }
      ],
      "properties": {
        "registrationCompleted": {
          "description": "Закончена ли регистрация пользователя.",
          "type": "boolean"
        },
        "authToken": {
          "description": "Новый токен для зарегистрированного пользователя.",
          "readOnly": true,
          "type": "string"
        }
      },
      "xml": {
        "name": "FinishRegistrationResult"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Registration.FinishRegistrationResult, Loymax.Common.Contract"
    },
    "AnonymousRegistrationResult": {
      "description": "Результат анонимной регистрации.",
      "allOf": [
        {
          "$ref": "#/definitions/RegistrationResult"
        }
      ],
      "properties": {
        "userIdentifier": {
          "description": "Идентификатор пользователя.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "AnonymousRegistrationResult"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.Registration.AnonymousRegistrationResult, Loymax.Common.Contract"
    },
    "QuestionFixedAnswerModel": {
      "description": "Модель фиксированного ответа.",
      "allOf": [
        {
          "$ref": "#/definitions/QuestionnaireItemModel"
        }
      ],
      "properties": {
        "isCustom": {
          "description": "Пользовательский.",
          "type": "boolean"
        },
        "isSelected": {
          "description": "Выбран.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "QuestionFixedAnswerModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionFixedAnswerModel, Loymax.Mobile.Contract"
    },
    "QuestionModel": {
      "description": "Модель вопроса.",
      "allOf": [
        {
          "$ref": "#/definitions/QuestionnaireItemModel"
        }
      ],
      "properties": {
        "questionType": {
          "description": "Тип вопроса.",
          "type": "string",
          "enum": [
            "Int",
            "Double",
            "Boolean",
            "String",
            "Date",
            "Select"
          ],
          "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionModelType, Loymax.Mobile.Contract",
          "x-loymax-enum-type": "QuestionModelType"
        },
        "logicalName": {
          "description": "Логическое имя.",
          "type": "string"
        },
        "regexp": {
          "description": "Регулярное выражение для дополнительной валидации.",
          "type": "string"
        },
        "regexpErrorMessage": {
          "description": "Сообщение в случае не удачной валидации через регулярное выражение.",
          "type": "string"
        },
        "isRequired": {
          "description": "Обязательный.",
          "type": "boolean"
        },
        "isReadOnly": {
          "description": "Только для чтения.",
          "type": "boolean"
        },
        "isMultiSelect": {
          "description": "Множественный выбор.",
          "type": "boolean"
        },
        "fixedAnswers": {
          "description": "Фиксированные ответы.",
          "items": {
            "$ref": "#/definitions/QuestionFixedAnswerModel"
          },
          "xml": {
            "name": "QuestionFixedAnswerModel",
            "wrapped": true
          },
          "type": "array"
        },
        "answer": {
          "$ref": "#/definitions/QuestionAnswerModel",
          "description": "Ответ на вопрос анкеты."
        },
        "isVisibleInRegistration": {
          "description": "Видимый при регистрации.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "QuestionModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionModel, Loymax.Mobile.Contract"
    },
    "QuestionGroupModel": {
      "description": "Модель группы вопросов.",
      "allOf": [
        {
          "$ref": "#/definitions/QuestionnaireItemModel"
        }
      ],
      "properties": {
        "questions": {
          "description": "Вопросы.",
          "items": {
            "$ref": "#/definitions/QuestionModel"
          },
          "xml": {
            "name": "QuestionModel",
            "wrapped": true
          },
          "type": "array"
        }
      },
      "xml": {
        "name": "QuestionGroupModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.UserInfo.Questionnaire.QuestionModel.QuestionGroupModel, Loymax.Mobile.Contract"
    },
    "BoolValueModel": {
      "description": "Модель BoolValue.",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeValueModel"
        }
      ],
      "properties": {
        "boolValue": {
          "description": "BoolValue.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "BoolValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.BoolValueModel, Loymax.Common.Contract"
    },
    "DateValueModel": {
      "description": "Модель DateValue.",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeValueModel"
        }
      ],
      "properties": {
        "dateValue": {
          "description": "DateValue.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "DateValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.DateValueModel, Loymax.Common.Contract"
    },
    "DoubleValueModel": {
      "description": "Модель DoubleValue.",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeValueModel"
        }
      ],
      "properties": {
        "doubleValue": {
          "description": "DoubleValue.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "DoubleValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.DoubleValueModel, Loymax.Common.Contract"
    },
    "IntValueModel": {
      "description": "Модель IntValue.",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeValueModel"
        }
      ],
      "properties": {
        "intValue": {
          "description": "IntValue.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "IntValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.IntValueModel, Loymax.Common.Contract"
    },
    "StringDateValueModel": {
      "description": "Модель StringDateValue.",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeValueModel"
        }
      ],
      "properties": {
        "stringDateValue": {
          "description": "StringDateValue.",
          "type": "string"
        }
      },
      "xml": {
        "name": "StringDateValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.StringDateValueModel, Loymax.Common.Contract"
    },
    "StringValueModel": {
      "description": "Модель StringValue.",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeValueModel"
        }
      ],
      "properties": {
        "stringValue": {
          "description": "StringValue.",
          "type": "string"
        }
      },
      "xml": {
        "name": "StringValueModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Common.Contract.Model.UserInfo.StringValueModel, Loymax.Common.Contract"
    },
    "GoodsDetailItem": {
      "description": "Детальная информация, связанная с товаром.",
      "required": [],
      "allOf": [
        {
          "$ref": "#/definitions/DetailItem"
        }
      ],
      "properties": {
        "goodsId": {
          "description": "Идентификатор товара.",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "GoodsDetailItem"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.GoodsDetailItem, Loymax.Mobile.Contract"
    },
    "PersonalGoodsDetailItem": {
      "description": "Детальная информация, связанная с персональным товаром.",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsDetailItem"
        }
      ],
      "properties": {
        "selected": {
          "description": "Товар выбран пользователем.",
          "type": "boolean"
        }
      },
      "xml": {
        "name": "PersonalGoodsDetailItem"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.PersonalGoodsDetailItem, Loymax.Mobile.Contract"
    },
    "PersonalOfferDiscountViewModel": {
      "description": "Скидка в рамках персонального предложения.",
      "properties": {
        "discountType": {
          "description": "Тип скидки (прямая или отложенная).",
          "type": "string",
          "enum": [
            "Discount",
            "Cashback"
          ],
          "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.PersonalOffer.Discount.PartnerDiscountType, Loymax.Mobile.Contract",
          "x-loymax-enum-type": "PartnerDiscountType"
        },
        "value": {
          "description": "Значение скидки.",
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "PersonalOfferDiscountViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.PersonalOffer.Discount.PersonalOfferDiscountViewModel, Loymax.Mobile.Contract"
    },
    "PersonalOfferGoodsCodeViewModel": {
      "description": "Идентификатор товара для персонального предложения.",
      "properties": {
        "value": {
          "description": "Значение идентификатора.",
          "type": "string"
        }
      },
      "xml": {
        "name": "PersonalOfferGoodsCodeViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.PersonalOffer.Goods.PersonalOfferGoodsCodeViewModel, Loymax.Mobile.Contract"
    },
    "PersonalOfferGoodsDetailItemViewModel": {
      "description": "Детальная информация, связанная с товаром из персонального предложения.",
      "allOf": [
        {
          "$ref": "#/definitions/GoodsDetailItem"
        }
      ],
      "properties": {
        "discount": {
          "$ref": "#/definitions/PersonalOfferDiscountViewModel",
          "description": "Скидка."
        },
        "codes": {
          "description": "Коды товара.",
          "items": {
            "$ref": "#/definitions/PersonalOfferGoodsCodeViewModel"
          },
          "xml": {
            "name": "PersonalOfferGoodsCodeViewModel",
            "wrapped": true
          },
          "type": "array"
        },
        "annotation": {
          "description": "Примечание.",
          "type": "string"
        },
        "hasMerchants": {
          "description": "Для детали определены магазины.",
          "type": "boolean"
        },
        "detailBeginLocalDate": {
          "description": "Дата начала действия акции для детали. Если совпадает с акцией, то пусто.",
          "type": "string",
          "format": "date-time"
        },
        "detailEndLocalDate": {
          "description": "Дата окончания действия акции для детали. Если совпадает с акцией, то пусто.",
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "PersonalOfferGoodsDetailItemViewModel"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.PersonalOffer.PersonalOfferGoodsDetailItemViewModel, Loymax.Mobile.Contract"
    },
    "ImageWithText": {
      "description": "Изображение с текстом.",
      "allOf": [
        {
          "$ref": "#/definitions/RewardThumbnail"
        }
      ],
      "properties": {
        "header": {
          "description": "Текст над изображением.",
          "type": "string"
        },
        "footer": {
          "description": "Текст под изображением.",
          "type": "string"
        },
        "imageId": {
          "description": "Id файла с изображением.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "ImageWithText"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.ImageWithText, Loymax.Mobile.Contract"
    },
    "OldNewPrice": {
      "description": "Старая-новая цена.",
      "allOf": [
        {
          "$ref": "#/definitions/RewardThumbnail"
        }
      ],
      "properties": {
        "oldPrice": {
          "description": "Старая цена.",
          "type": "string"
        },
        "newPrice": {
          "description": "Новая цена.",
          "type": "string"
        }
      },
      "xml": {
        "name": "OldNewPrice"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.OldNewPrice, Loymax.Mobile.Contract"
    },
    "TwoLineText": {
      "description": "Текст в две строки.",
      "allOf": [
        {
          "$ref": "#/definitions/RewardThumbnail"
        }
      ],
      "properties": {
        "firstLine": {
          "description": "Первая строка.",
          "type": "string"
        },
        "secondLine": {
          "description": "Вторая строка.",
          "type": "string"
        }
      },
      "xml": {
        "name": "TwoLineText"
      },
      "type": "object",
      "x-loymax-type": "Loymax.Mobile.Contract.Models.Offer.TwoLineText, Loymax.Mobile.Contract"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "description": "Authorization throw header. Format: Bearer HGGHIOUO565",
      "name": "Authorization",
      "in": "header"
    },
    "OAuth2Password": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "../token",
      "scopes": {}
    },
    "OAuth2Code": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "../../oauth/authorize",
      "tokenUrl": "../token",
      "scopes": {
        "ApplicationProcessing": "Application Processing",
        "account": "Manage account: cashback & payment",
        "profile": "Get user info",
        "coupon": "Buy and refund coupon"
      }
    },
    "OAuth2ClientCredentials": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "../token",
      "scopes": {}
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "Контроллер работы со счетами."
    },
    {
      "name": "Anketa",
      "description": "Контроллер для работы с анкетой пользователя."
    },
    {
      "name": "Announcement",
      "description": "Контроллер рекламы."
    },
    {
      "name": "AnnouncementAttribute",
      "description": "Контроллер атрибутов рекламных мест."
    },
    {
      "name": "AnnouncementSpace",
      "description": "Контроллер рекламных мест."
    },
    {
      "name": "Application",
      "description": "Контроллер работы с OAuth приложениями."
    },
    {
      "name": "ApplicationPermission",
      "description": "Контроллер работы с OAuth приложениями."
    },
    {
      "name": "Attribute",
      "description": "Контроллер атрибутов."
    },
    {
      "name": "BatchOperations",
      "description": "Контроллер работы с операциями начисления и списания."
    },
    {
      "name": "BookletEmission",
      "description": "Контроллер выпуска буклетов."
    },
    {
      "name": "Brands",
      "description": "Контроллер работы с брендами."
    },
    {
      "name": "BrandsImages",
      "description": "Контроллер ресурса изображений для брендов."
    },
    {
      "name": "BusinessEvents",
      "description": "Контроллер бизнес-событий."
    },
    {
      "name": "Calculator",
      "description": "Контроллер для ресурса калькуляторов."
    },
    {
      "name": "CallCenter",
      "description": "Контроллер для колл центра."
    },
    {
      "name": "Card",
      "description": "Контроллер работы с картами."
    },
    {
      "name": "CardCategory",
      "description": "Контроллер ресурса категорий карт."
    },
    {
      "name": "CardCategoryImages",
      "description": "Контроллер ресурса изображений для категорий карт."
    },
    {
      "name": "CardEmission",
      "description": "Контроллер выпуска карт."
    },
    {
      "name": "CardPacking",
      "description": "Контроллер для фасовки карт."
    },
    {
      "name": "CatalogAttribute",
      "description": "Контроллер атрибутов каталога."
    },
    {
      "name": "CommunicationOffer",
      "description": "Контроллер для работы с акциями."
    },
    {
      "name": "CommunicationOfferCategory",
      "description": "Контроллер для работы с категориями рекламных материалов."
    },
    {
      "name": "CommunicationOfferDetail",
      "description": "Контроллер для работы с деталями акций."
    },
    {
      "name": "CommunicationOfferImages",
      "description": "Контроллер ресурса изображений для акций."
    },
    {
      "name": "CommunicationOfferInstruction",
      "description": "Контроллер для работы с инструкциями акций."
    },
    {
      "name": "Configuration",
      "description": "Контроллер работы с конфигурациями."
    },
    {
      "name": "ConfigurationDeploys",
      "description": "Контроллер работы с деплоями."
    },
    {
      "name": "ConfigurationPlugins",
      "description": "Контроллер работы с плагинами."
    },
    {
      "name": "ConfigurationScripts",
      "description": "Контроллер работы со скриптами."
    },
    {
      "name": "Counter",
      "description": "Контроллер для счётчика."
    },
    {
      "name": "CouponEmission",
      "description": "Контроллер работы с выпусками купонов."
    },
    {
      "name": "Currency",
      "description": "Контроллер для методов Api связанных с валютами."
    },
    {
      "name": "Device",
      "description": "Контроллер работы с кассами."
    },
    {
      "name": "DeviceCapability",
      "description": "Контроллер работы с возможностями касс."
    },
    {
      "name": "DeviceEmulation",
      "description": "Контроллер для тестовых касс."
    },
    {
      "name": "DeviceType",
      "description": "Контроллер работы с типами касс."
    },
    {
      "name": "EmissionNumberTemplate",
      "description": "Контроллер шаблонов для генерации номеров выпусков."
    },
    {
      "name": "EventCalculation",
      "description": "Контроллер работы с расчётами событий."
    },
    {
      "name": "Extension",
      "description": "Контроллер работы с плагинами."
    },
    {
      "name": "ExtensionConfiguration",
      "description": "Контроллер работы с конфигурацией плагинов."
    },
    {
      "name": "FavoriteGoods",
      "description": "Контроллер для работы с любимыми товарами пользователя."
    },
    {
      "name": "File",
      "description": "Контроллер работы с файлами."
    },
    {
      "name": "FileStorage",
      "description": "Контроллер файлового хранилища."
    },
    {
      "name": "FilterTree",
      "description": "Контроллер для работы с деревом фильтров."
    },
    {
      "name": "FilterType",
      "description": "Контроллер для работы с типами фильтров."
    },
    {
      "name": "FixedAnswer",
      "description": "Контроллер по фиксированным ответам."
    },
    {
      "name": "GoodsCatalog",
      "description": "Контроллер работы с каталогами групп товаров."
    },
    {
      "name": "GoodsGroup",
      "description": "Контроллер работы с группами товаров."
    },
    {
      "name": "GoodsGroupCatalog",
      "description": "Контроллер работы с каталогами групп товаров."
    },
    {
      "name": "GoodsGroupImportExport",
      "description": "Контроллер для импорта и экспорта групп товаров."
    },
    {
      "name": "GoodsGroupSet",
      "description": "Контроллер работы с наборами группы товаров."
    },
    {
      "name": "GoodsGroupSetAttributeFilter",
      "description": "Контроллер для работы с фильтрами по атрибутам набора группы товаров."
    },
    {
      "name": "History",
      "description": "Контроллер для работы с историей покупок."
    },
    {
      "name": "HistoryAudit",
      "description": "Контроллер для работы с аудитом."
    },
    {
      "name": "Image",
      "description": "Контроллер для работы с файлами изображений."
    },
    {
      "name": "Legal",
      "description": "Контроллер для работы с юр.лицами."
    },
    {
      "name": "LifeTimeDefinition",
      "description": "Контроллер определений времени жизни бонусов."
    },
    {
      "name": "Limit",
      "description": "Контроллер работы с лимитами."
    },
    {
      "name": "LimitAction",
      "description": "Контроллер работы с лимитами."
    },
    {
      "name": "LimitBorder",
      "description": "Контроллер работы с лимитами."
    },
    {
      "name": "Location",
      "description": "Контроллер для работы с местоположением."
    },
    {
      "name": "LocationEdit",
      "description": "Контроллер для работы с местоположением."
    },
    {
      "name": "LoyaltyProgram",
      "description": "Контроллер для работы с программами лояльности."
    },
    {
      "name": "LoyaltyProgramsImages",
      "description": "Контроллер ресурса изображений для программ лояльности."
    },
    {
      "name": "LoymaxClient",
      "description": "Контроллер для работы с клиентами OAuth сервисов (социальных сетей)."
    },
    {
      "name": "Mailing",
      "description": "Контроллер для работы с рассылками."
    },
    {
      "name": "MailingCreator",
      "description": "Контроллер для работы с создателями рассылок."
    },
    {
      "name": "MailingSubscriptionType",
      "description": "Контроллер для работы с типами рассылок."
    },
    {
      "name": "MailingTask",
      "description": "Контроллер для работы с задачами рассылками."
    },
    {
      "name": "MarketingCampaign",
      "description": "Контроллер для маркетинговых кампаний."
    },
    {
      "name": "Message",
      "description": "Контроллер для работы с сообщениями."
    },
    {
      "name": "NotificationGateway",
      "description": "Контроллер работы со шлюзами."
    },
    {
      "name": "NotificationProxy",
      "description": "Контроллер работы с прокси."
    },
    {
      "name": "NotifyTemplate",
      "description": "Контроллер шаблонов уведомлений."
    },
    {
      "name": "Offer",
      "description": "Контроллер для работы с акциями."
    },
    {
      "name": "OfferActionChainFilter",
      "description": "Контролер для работы с фильтрами цепочек действий акций."
    },
    {
      "name": "OfferActionChains",
      "description": "Контроллер для работы с цепочками действий акции."
    },
    {
      "name": "OfferActions",
      "description": "Контроллер для работы с действиями акции."
    },
    {
      "name": "OfferCategory",
      "description": "Контроллер категорий акций."
    },
    {
      "name": "OfferImportExport",
      "description": "Контроллер для экспорта/импорта акций."
    },
    {
      "name": "OfferMerchant",
      "description": "Контроллер для работы с магазинами акции."
    },
    {
      "name": "OfferTargetGroup",
      "description": "Контроллер для работы с ЦА акции."
    },
    {
      "name": "OperationPay",
      "description": "Контроллер работы с операциями оплаты по покупке."
    },
    {
      "name": "Partner",
      "description": "Контроллер для работы с партнерами."
    },
    {
      "name": "PartnerAttributeValue",
      "description": "Контроллер для работы со значениями партнерских атрибутов."
    },
    {
      "name": "PartnerCatalog",
      "description": "Контроллер для работы с каталогами партнера."
    },
    {
      "name": "PartnerDevice",
      "description": "Контроллер касс партнера."
    },
    {
      "name": "PartnerLegal",
      "description": "Контроллер для работы с юридическими лицами партнера."
    },
    {
      "name": "PartnerMerchant",
      "description": "Контроллер для работы с магазинами партнера."
    },
    {
      "name": "PartnerNotifyGateway",
      "description": "Контроллер шлюзов партнера."
    },
    {
      "name": "PartnerUserAttribute",
      "description": "Контроллер для работы с партнерскими атрибутами пользователей."
    },
    {
      "name": "PasswordRequirements",
      "description": "Контроллер требований к паролю."
    },
    {
      "name": "PaymentSystem",
      "description": "Контроллер для платежных систем."
    },
    {
      "name": "PayType",
      "description": "Контроллер работы со способами оплаты."
    },
    {
      "name": "Permissions",
      "description": "Контроллер разрешений."
    },
    {
      "name": "PhoneSettings",
      "description": "Контроллер для настроек телефона."
    },
    {
      "name": "Plan",
      "description": "Контроллер для работы с планом."
    },
    {
      "name": "Purchase",
      "description": "Контроллер работы с покупками."
    },
    {
      "name": "PushableDevice",
      "description": "Контроллер работы с устройствами пользователя."
    },
    {
      "name": "Question",
      "description": "Контроллер по группам вопросов."
    },
    {
      "name": "QuestionGroup",
      "description": "Контроллер по группам вопросов."
    },
    {
      "name": "Regexp",
      "description": "Контроллер работы с конфигурациями регулярных выражений."
    },
    {
      "name": "Registration",
      "description": "Контроллер для регистрации пользователя."
    },
    {
      "name": "RequestPersonIdentifier",
      "description": "Контроллер для работы с RequestPersonIdentifier."
    },
    {
      "name": "Roles",
      "description": "Контроллер ролей."
    },
    {
      "name": "SubscriptionType",
      "description": "Контроллер работы с типами подписок."
    },
    {
      "name": "TargetGroup",
      "description": "Контроллер для ресурса целевых аудиторий."
    },
    {
      "name": "TargetGroupSegment",
      "description": "Контроллер для работы с сегментами ЦА."
    },
    {
      "name": "TargetGroupSegmentFilter",
      "description": "Контроллер для работы с наборами фильтров сегмента ЦА."
    },
    {
      "name": "TargetGroupSegmentFilterSet",
      "description": "Контроллер для работы с наборами фильтров сегмента ЦА."
    },
    {
      "name": "TriggeredMailing",
      "description": "Контроллер для работы с триггерными рассылками."
    },
    {
      "name": "User",
      "description": "Контроллер работы с пользователями."
    },
    {
      "name": "UserCards",
      "description": "Контроллер работы с картами пользователя."
    },
    {
      "name": "UserGroup",
      "description": "Контроллер работы с группами пользователей."
    },
    {
      "name": "UserIdentifiers",
      "description": "Контроллер работы с идентификаторами."
    },
    {
      "name": "UserMessengers",
      "description": "Контроллер для работы с мессенджерами пользователя."
    },
    {
      "name": "UserSocial",
      "description": "Контроллер работы с соцсетями пользователя."
    },
    {
      "name": "Version",
      "description": "Контроллер версии."
    }
  ]
}