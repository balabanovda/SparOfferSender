/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.CurrencyInfoModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Информация о балансе счета.
 */
@ApiModel(description = "Информация о балансе счета.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class AccountBalanceModel {
  @JsonProperty("currency")
  private CurrencyInfoModel currency = null;

  @JsonProperty("balance")
  private Double balance = null;

  @JsonProperty("notActivated")
  private Double notActivated = null;

  @JsonProperty("accumulated")
  private Double accumulated = null;

  @JsonProperty("paid")
  private Double paid = null;

  public AccountBalanceModel currency(CurrencyInfoModel currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Валюта.
   * @return currency
  **/
  @ApiModelProperty(value = "Валюта.")
  public CurrencyInfoModel getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyInfoModel currency) {
    this.currency = currency;
  }

  public AccountBalanceModel balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Баланс пользователя.
   * @return balance
  **/
  @ApiModelProperty(value = "Баланс пользователя.")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public AccountBalanceModel notActivated(Double notActivated) {
    this.notActivated = notActivated;
    return this;
  }

   /**
   * Неактивированные бонусы.
   * @return notActivated
  **/
  @ApiModelProperty(value = "Неактивированные бонусы.")
  public Double getNotActivated() {
    return notActivated;
  }

  public void setNotActivated(Double notActivated) {
    this.notActivated = notActivated;
  }

  public AccountBalanceModel accumulated(Double accumulated) {
    this.accumulated = accumulated;
    return this;
  }

   /**
   * Получено.
   * @return accumulated
  **/
  @ApiModelProperty(value = "Получено.")
  public Double getAccumulated() {
    return accumulated;
  }

  public void setAccumulated(Double accumulated) {
    this.accumulated = accumulated;
  }

  public AccountBalanceModel paid(Double paid) {
    this.paid = paid;
    return this;
  }

   /**
   * Потрачено.
   * @return paid
  **/
  @ApiModelProperty(value = "Потрачено.")
  public Double getPaid() {
    return paid;
  }

  public void setPaid(Double paid) {
    this.paid = paid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountBalanceModel accountBalanceModel = (AccountBalanceModel) o;
    return Objects.equals(this.currency, accountBalanceModel.currency) &&
        Objects.equals(this.balance, accountBalanceModel.balance) &&
        Objects.equals(this.notActivated, accountBalanceModel.notActivated) &&
        Objects.equals(this.accumulated, accountBalanceModel.accumulated) &&
        Objects.equals(this.paid, accountBalanceModel.paid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, balance, notActivated, accumulated, paid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountBalanceModel {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    notActivated: ").append(toIndentedString(notActivated)).append("\n");
    sb.append("    accumulated: ").append(toIndentedString(accumulated)).append("\n");
    sb.append("    paid: ").append(toIndentedString(paid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

