/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.AnketaQuestionViewModelItem;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * ViewModel вопроса анкеты.
 */
@ApiModel(description = "ViewModel вопроса анкеты.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class AnketaQuestionViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("displayName")
  private String displayName = null;

  /**
   * Тип вопроса.
   */
  public enum TypeEnum {
    STRING("String"),
    
    SELECT("Select"),
    
    DATE("Date"),
    
    CHECK("Check"),
    
    INT("Int"),
    
    DOUBLE("Double");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("isArchived")
  private Boolean isArchived = null;

  @JsonProperty("items")
  private List<AnketaQuestionViewModelItem> items = null;

  public AnketaQuestionViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public AnketaQuestionViewModel displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Отображаемое имя.
   * @return displayName
  **/
  @ApiModelProperty(value = "Отображаемое имя.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public AnketaQuestionViewModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Тип вопроса.
   * @return type
  **/
  @ApiModelProperty(value = "Тип вопроса.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AnketaQuestionViewModel isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * Архивирован.
   * @return isArchived
  **/
  @ApiModelProperty(value = "Архивирован.")
  public Boolean isIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }

  public AnketaQuestionViewModel items(List<AnketaQuestionViewModelItem> items) {
    this.items = items;
    return this;
  }

  public AnketaQuestionViewModel addItemsItem(AnketaQuestionViewModelItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Доступные значения  (для типов с выбором значений).
   * @return items
  **/
  @ApiModelProperty(value = "Доступные значения  (для типов с выбором значений).")
  public List<AnketaQuestionViewModelItem> getItems() {
    return items;
  }

  public void setItems(List<AnketaQuestionViewModelItem> items) {
    this.items = items;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnketaQuestionViewModel anketaQuestionViewModel = (AnketaQuestionViewModel) o;
    return Objects.equals(this.id, anketaQuestionViewModel.id) &&
        Objects.equals(this.displayName, anketaQuestionViewModel.displayName) &&
        Objects.equals(this.type, anketaQuestionViewModel.type) &&
        Objects.equals(this.isArchived, anketaQuestionViewModel.isArchived) &&
        Objects.equals(this.items, anketaQuestionViewModel.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, type, isArchived, items);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnketaQuestionViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

