/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Модель представления поля обработчика ответа.
 */
@ApiModel(description = "Модель представления поля обработчика ответа.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class AnswerHandlerFieldViewModel {
  @JsonProperty("name")
  private String name = null;

  /**
   * Тип.
   */
  public enum TypeEnum {
    STRING("String"),
    
    INT("Int");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("value")
  private String value = null;

  @JsonProperty("isRequired")
  private Boolean isRequired = null;

  public AnswerHandlerFieldViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Название.
   * @return name
  **/
  @ApiModelProperty(value = "Название.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AnswerHandlerFieldViewModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Тип.
   * @return type
  **/
  @ApiModelProperty(value = "Тип.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AnswerHandlerFieldViewModel value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Значение.
   * @return value
  **/
  @ApiModelProperty(value = "Значение.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public AnswerHandlerFieldViewModel isRequired(Boolean isRequired) {
    this.isRequired = isRequired;
    return this;
  }

   /**
   * Обязательный.
   * @return isRequired
  **/
  @ApiModelProperty(value = "Обязательный.")
  public Boolean isIsRequired() {
    return isRequired;
  }

  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnswerHandlerFieldViewModel answerHandlerFieldViewModel = (AnswerHandlerFieldViewModel) o;
    return Objects.equals(this.name, answerHandlerFieldViewModel.name) &&
        Objects.equals(this.type, answerHandlerFieldViewModel.type) &&
        Objects.equals(this.value, answerHandlerFieldViewModel.value) &&
        Objects.equals(this.isRequired, answerHandlerFieldViewModel.isRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, value, isRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnswerHandlerFieldViewModel {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

