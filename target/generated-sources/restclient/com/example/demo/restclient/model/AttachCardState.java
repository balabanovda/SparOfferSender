/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Состояние процесса присоединения карты.
 */
@ApiModel(description = "Состояние процесса присоединения карты.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class AttachCardState {
  @JsonProperty("cardNumber")
  private String cardNumber = null;

  @JsonProperty("isStarted")
  private Boolean isStarted = null;

  @JsonProperty("maxCountOfCards")
  private Integer maxCountOfCards = null;

  @JsonProperty("currentCountOfAttachedCards")
  private Integer currentCountOfAttachedCards = null;

  @JsonProperty("maximumPersonCountForGroup")
  private Integer maximumPersonCountForGroup = null;

  @JsonProperty("currentPersonCountInGroup")
  private Integer currentPersonCountInGroup = null;

  public AttachCardState cardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Номер присоединяемой карты.
   * @return cardNumber
  **/
  @ApiModelProperty(value = "Номер присоединяемой карты.")
  public String getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }

  public AttachCardState isStarted(Boolean isStarted) {
    this.isStarted = isStarted;
    return this;
  }

   /**
   * Начат ли процесс.
   * @return isStarted
  **/
  @ApiModelProperty(value = "Начат ли процесс.")
  public Boolean isIsStarted() {
    return isStarted;
  }

  public void setIsStarted(Boolean isStarted) {
    this.isStarted = isStarted;
  }

  public AttachCardState maxCountOfCards(Integer maxCountOfCards) {
    this.maxCountOfCards = maxCountOfCards;
    return this;
  }

   /**
   * Максимальное число карт, которые может присоединить пользователь.
   * @return maxCountOfCards
  **/
  @ApiModelProperty(value = "Максимальное число карт, которые может присоединить пользователь.")
  public Integer getMaxCountOfCards() {
    return maxCountOfCards;
  }

  public void setMaxCountOfCards(Integer maxCountOfCards) {
    this.maxCountOfCards = maxCountOfCards;
  }

  public AttachCardState currentCountOfAttachedCards(Integer currentCountOfAttachedCards) {
    this.currentCountOfAttachedCards = currentCountOfAttachedCards;
    return this;
  }

   /**
   * Текущее число присоедиенных карт.
   * @return currentCountOfAttachedCards
  **/
  @ApiModelProperty(value = "Текущее число присоедиенных карт.")
  public Integer getCurrentCountOfAttachedCards() {
    return currentCountOfAttachedCards;
  }

  public void setCurrentCountOfAttachedCards(Integer currentCountOfAttachedCards) {
    this.currentCountOfAttachedCards = currentCountOfAttachedCards;
  }

  public AttachCardState maximumPersonCountForGroup(Integer maximumPersonCountForGroup) {
    this.maximumPersonCountForGroup = maximumPersonCountForGroup;
    return this;
  }

   /**
   * Максимальное число пользователей в группе.
   * @return maximumPersonCountForGroup
  **/
  @ApiModelProperty(value = "Максимальное число пользователей в группе.")
  public Integer getMaximumPersonCountForGroup() {
    return maximumPersonCountForGroup;
  }

  public void setMaximumPersonCountForGroup(Integer maximumPersonCountForGroup) {
    this.maximumPersonCountForGroup = maximumPersonCountForGroup;
  }

  public AttachCardState currentPersonCountInGroup(Integer currentPersonCountInGroup) {
    this.currentPersonCountInGroup = currentPersonCountInGroup;
    return this;
  }

   /**
   * Текущее число пользователей в группе.
   * @return currentPersonCountInGroup
  **/
  @ApiModelProperty(value = "Текущее число пользователей в группе.")
  public Integer getCurrentPersonCountInGroup() {
    return currentPersonCountInGroup;
  }

  public void setCurrentPersonCountInGroup(Integer currentPersonCountInGroup) {
    this.currentPersonCountInGroup = currentPersonCountInGroup;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachCardState attachCardState = (AttachCardState) o;
    return Objects.equals(this.cardNumber, attachCardState.cardNumber) &&
        Objects.equals(this.isStarted, attachCardState.isStarted) &&
        Objects.equals(this.maxCountOfCards, attachCardState.maxCountOfCards) &&
        Objects.equals(this.currentCountOfAttachedCards, attachCardState.currentCountOfAttachedCards) &&
        Objects.equals(this.maximumPersonCountForGroup, attachCardState.maximumPersonCountForGroup) &&
        Objects.equals(this.currentPersonCountInGroup, attachCardState.currentPersonCountInGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardNumber, isStarted, maxCountOfCards, currentCountOfAttachedCards, maximumPersonCountForGroup, currentPersonCountInGroup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachCardState {\n");
    
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    isStarted: ").append(toIndentedString(isStarted)).append("\n");
    sb.append("    maxCountOfCards: ").append(toIndentedString(maxCountOfCards)).append("\n");
    sb.append("    currentCountOfAttachedCards: ").append(toIndentedString(currentCountOfAttachedCards)).append("\n");
    sb.append("    maximumPersonCountForGroup: ").append(toIndentedString(maximumPersonCountForGroup)).append("\n");
    sb.append("    currentPersonCountInGroup: ").append(toIndentedString(currentPersonCountInGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

