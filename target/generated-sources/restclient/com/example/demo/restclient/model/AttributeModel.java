/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.AttributeMappingModel;
import com.example.demo.restclient.model.AttributeRestrictionModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * AttributeModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class AttributeModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("logicalName")
  private String logicalName = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Gets or Sets attributeType
   */
  public enum AttributeTypeEnum {
    STRING("String"),
    
    BOOLEAN("Boolean"),
    
    NUMERIC("Numeric"),
    
    DATETIME("DateTime"),
    
    IMAGE("Image"),
    
    VIDEO("Video"),
    
    HTML("Html"),
    
    DICTIONARY("Dictionary"),
    
    MECHANT("Mechant");

    private String value;

    AttributeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttributeTypeEnum fromValue(String text) {
      for (AttributeTypeEnum b : AttributeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("attributeType")
  private AttributeTypeEnum attributeType = null;

  @JsonProperty("restrictions")
  private List<AttributeRestrictionModel> restrictions = null;

  @JsonProperty("mappings")
  private List<AttributeMappingModel> mappings = null;

  public AttributeModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public AttributeModel logicalName(String logicalName) {
    this.logicalName = logicalName;
    return this;
  }

   /**
   * Get logicalName
   * @return logicalName
  **/
  @ApiModelProperty(value = "")
  public String getLogicalName() {
    return logicalName;
  }

  public void setLogicalName(String logicalName) {
    this.logicalName = logicalName;
  }

  public AttributeModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AttributeModel attributeType(AttributeTypeEnum attributeType) {
    this.attributeType = attributeType;
    return this;
  }

   /**
   * Get attributeType
   * @return attributeType
  **/
  @ApiModelProperty(value = "")
  public AttributeTypeEnum getAttributeType() {
    return attributeType;
  }

  public void setAttributeType(AttributeTypeEnum attributeType) {
    this.attributeType = attributeType;
  }

  public AttributeModel restrictions(List<AttributeRestrictionModel> restrictions) {
    this.restrictions = restrictions;
    return this;
  }

  public AttributeModel addRestrictionsItem(AttributeRestrictionModel restrictionsItem) {
    if (this.restrictions == null) {
      this.restrictions = new ArrayList<>();
    }
    this.restrictions.add(restrictionsItem);
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public List<AttributeRestrictionModel> getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(List<AttributeRestrictionModel> restrictions) {
    this.restrictions = restrictions;
  }

  public AttributeModel mappings(List<AttributeMappingModel> mappings) {
    this.mappings = mappings;
    return this;
  }

  public AttributeModel addMappingsItem(AttributeMappingModel mappingsItem) {
    if (this.mappings == null) {
      this.mappings = new ArrayList<>();
    }
    this.mappings.add(mappingsItem);
    return this;
  }

   /**
   * Get mappings
   * @return mappings
  **/
  @ApiModelProperty(value = "")
  public List<AttributeMappingModel> getMappings() {
    return mappings;
  }

  public void setMappings(List<AttributeMappingModel> mappings) {
    this.mappings = mappings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttributeModel attributeModel = (AttributeModel) o;
    return Objects.equals(this.id, attributeModel.id) &&
        Objects.equals(this.logicalName, attributeModel.logicalName) &&
        Objects.equals(this.name, attributeModel.name) &&
        Objects.equals(this.attributeType, attributeModel.attributeType) &&
        Objects.equals(this.restrictions, attributeModel.restrictions) &&
        Objects.equals(this.mappings, attributeModel.mappings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, logicalName, name, attributeType, restrictions, mappings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttributeModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    logicalName: ").append(toIndentedString(logicalName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    attributeType: ").append(toIndentedString(attributeType)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    mappings: ").append(toIndentedString(mappings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

