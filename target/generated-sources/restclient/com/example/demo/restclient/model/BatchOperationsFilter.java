/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель для фильтра групповых операций.
 */
@ApiModel(description = "Модель для фильтра групповых операций.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class BatchOperationsFilter {
  @JsonProperty("fromDate")
  private OffsetDateTime fromDate = null;

  @JsonProperty("toDate")
  private OffsetDateTime toDate = null;

  /**
   * Тип операций.
   */
  public enum TypeEnum {
    WITHDRAW("Withdraw"),
    
    DEPOSIT("Deposit");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * Состояние операции.
   */
  public enum StateEnum {
    NOTPROCESSED("NotProcessed"),
    
    PROCESSED("Processed");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("cardNumber")
  private String cardNumber = null;

  @JsonProperty("loyaltyPrograms")
  private List<Integer> loyaltyPrograms = null;

  @JsonProperty("marketingCampaigns")
  private List<Integer> marketingCampaigns = null;

  public BatchOperationsFilter fromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Начало периода.
   * @return fromDate
  **/
  @ApiModelProperty(value = "Начало периода.")
  public OffsetDateTime getFromDate() {
    return fromDate;
  }

  public void setFromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
  }

  public BatchOperationsFilter toDate(OffsetDateTime toDate) {
    this.toDate = toDate;
    return this;
  }

   /**
   * Конец периода.
   * @return toDate
  **/
  @ApiModelProperty(value = "Конец периода.")
  public OffsetDateTime getToDate() {
    return toDate;
  }

  public void setToDate(OffsetDateTime toDate) {
    this.toDate = toDate;
  }

  public BatchOperationsFilter type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Тип операций.
   * @return type
  **/
  @ApiModelProperty(value = "Тип операций.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public BatchOperationsFilter state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Состояние операции.
   * @return state
  **/
  @ApiModelProperty(value = "Состояние операции.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public BatchOperationsFilter cardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Номер карты.
   * @return cardNumber
  **/
  @ApiModelProperty(value = "Номер карты.")
  public String getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }

  public BatchOperationsFilter loyaltyPrograms(List<Integer> loyaltyPrograms) {
    this.loyaltyPrograms = loyaltyPrograms;
    return this;
  }

  public BatchOperationsFilter addLoyaltyProgramsItem(Integer loyaltyProgramsItem) {
    if (this.loyaltyPrograms == null) {
      this.loyaltyPrograms = new ArrayList<>();
    }
    this.loyaltyPrograms.add(loyaltyProgramsItem);
    return this;
  }

   /**
   * Список программ лояльности.
   * @return loyaltyPrograms
  **/
  @ApiModelProperty(value = "Список программ лояльности.")
  public List<Integer> getLoyaltyPrograms() {
    return loyaltyPrograms;
  }

  public void setLoyaltyPrograms(List<Integer> loyaltyPrograms) {
    this.loyaltyPrograms = loyaltyPrograms;
  }

  public BatchOperationsFilter marketingCampaigns(List<Integer> marketingCampaigns) {
    this.marketingCampaigns = marketingCampaigns;
    return this;
  }

  public BatchOperationsFilter addMarketingCampaignsItem(Integer marketingCampaignsItem) {
    if (this.marketingCampaigns == null) {
      this.marketingCampaigns = new ArrayList<>();
    }
    this.marketingCampaigns.add(marketingCampaignsItem);
    return this;
  }

   /**
   * Список маркетинговых компаний.
   * @return marketingCampaigns
  **/
  @ApiModelProperty(value = "Список маркетинговых компаний.")
  public List<Integer> getMarketingCampaigns() {
    return marketingCampaigns;
  }

  public void setMarketingCampaigns(List<Integer> marketingCampaigns) {
    this.marketingCampaigns = marketingCampaigns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchOperationsFilter batchOperationsFilter = (BatchOperationsFilter) o;
    return Objects.equals(this.fromDate, batchOperationsFilter.fromDate) &&
        Objects.equals(this.toDate, batchOperationsFilter.toDate) &&
        Objects.equals(this.type, batchOperationsFilter.type) &&
        Objects.equals(this.state, batchOperationsFilter.state) &&
        Objects.equals(this.cardNumber, batchOperationsFilter.cardNumber) &&
        Objects.equals(this.loyaltyPrograms, batchOperationsFilter.loyaltyPrograms) &&
        Objects.equals(this.marketingCampaigns, batchOperationsFilter.marketingCampaigns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromDate, toDate, type, state, cardNumber, loyaltyPrograms, marketingCampaigns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchOperationsFilter {\n");
    
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    loyaltyPrograms: ").append(toIndentedString(loyaltyPrograms)).append("\n");
    sb.append("    marketingCampaigns: ").append(toIndentedString(marketingCampaigns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

