/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.CallCenterOperationBaseModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Модель для закрытия заявки.
 */
@ApiModel(description = "Модель для закрытия заявки.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class CompleteCallModel {
  @JsonProperty("ticketId")
  private String ticketId = null;

  @JsonProperty("reason")
  private String reason = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("needToClose")
  private Boolean needToClose = null;

  public CompleteCallModel ticketId(String ticketId) {
    this.ticketId = ticketId;
    return this;
  }

   /**
   * Идентификатор заявки в OTRS.
   * @return ticketId
  **/
  @ApiModelProperty(value = "Идентификатор заявки в OTRS.")
  public String getTicketId() {
    return ticketId;
  }

  public void setTicketId(String ticketId) {
    this.ticketId = ticketId;
  }

  public CompleteCallModel reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Причина обращения.
   * @return reason
  **/
  @ApiModelProperty(value = "Причина обращения.")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public CompleteCallModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание проблемы.
   * @return description
  **/
  @ApiModelProperty(value = "Описание проблемы.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CompleteCallModel needToClose(Boolean needToClose) {
    this.needToClose = needToClose;
    return this;
  }

   /**
   * Нужно ли закрывать заявку.
   * @return needToClose
  **/
  @ApiModelProperty(value = "Нужно ли закрывать заявку.")
  public Boolean isNeedToClose() {
    return needToClose;
  }

  public void setNeedToClose(Boolean needToClose) {
    this.needToClose = needToClose;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompleteCallModel completeCallModel = (CompleteCallModel) o;
    return Objects.equals(this.ticketId, completeCallModel.ticketId) &&
        Objects.equals(this.reason, completeCallModel.reason) &&
        Objects.equals(this.description, completeCallModel.description) &&
        Objects.equals(this.needToClose, completeCallModel.needToClose);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ticketId, reason, description, needToClose);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompleteCallModel {\n");
    
    sb.append("    ticketId: ").append(toIndentedString(ticketId)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    needToClose: ").append(toIndentedString(needToClose)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

