/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * Фильтр для деплоя.
 */
@ApiModel(description = "Фильтр для деплоя.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ConfigurationDeployFilter {
  @JsonProperty("fromDate")
  private OffsetDateTime fromDate = null;

  @JsonProperty("toDate")
  private OffsetDateTime toDate = null;

  @JsonProperty("packageVersionSubstring")
  private String packageVersionSubstring = null;

  @JsonProperty("isSuccess")
  private Boolean isSuccess = null;

  @JsonProperty("authorSubstring")
  private String authorSubstring = null;

  @JsonProperty("externalId")
  private UUID externalId = null;

  public ConfigurationDeployFilter fromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Дата С.
   * @return fromDate
  **/
  @ApiModelProperty(value = "Дата С.")
  public OffsetDateTime getFromDate() {
    return fromDate;
  }

  public void setFromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
  }

  public ConfigurationDeployFilter toDate(OffsetDateTime toDate) {
    this.toDate = toDate;
    return this;
  }

   /**
   * Дата По.
   * @return toDate
  **/
  @ApiModelProperty(value = "Дата По.")
  public OffsetDateTime getToDate() {
    return toDate;
  }

  public void setToDate(OffsetDateTime toDate) {
    this.toDate = toDate;
  }

  public ConfigurationDeployFilter packageVersionSubstring(String packageVersionSubstring) {
    this.packageVersionSubstring = packageVersionSubstring;
    return this;
  }

   /**
   * Подстрока для поиска по версионности.
   * @return packageVersionSubstring
  **/
  @ApiModelProperty(value = "Подстрока для поиска по версионности.")
  public String getPackageVersionSubstring() {
    return packageVersionSubstring;
  }

  public void setPackageVersionSubstring(String packageVersionSubstring) {
    this.packageVersionSubstring = packageVersionSubstring;
  }

  public ConfigurationDeployFilter isSuccess(Boolean isSuccess) {
    this.isSuccess = isSuccess;
    return this;
  }

   /**
   * Успешность выполнения.
   * @return isSuccess
  **/
  @ApiModelProperty(value = "Успешность выполнения.")
  public Boolean isIsSuccess() {
    return isSuccess;
  }

  public void setIsSuccess(Boolean isSuccess) {
    this.isSuccess = isSuccess;
  }

  public ConfigurationDeployFilter authorSubstring(String authorSubstring) {
    this.authorSubstring = authorSubstring;
    return this;
  }

   /**
   * Подстрока для поиска по автору.
   * @return authorSubstring
  **/
  @ApiModelProperty(value = "Подстрока для поиска по автору.")
  public String getAuthorSubstring() {
    return authorSubstring;
  }

  public void setAuthorSubstring(String authorSubstring) {
    this.authorSubstring = authorSubstring;
  }

  public ConfigurationDeployFilter externalId(UUID externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Внешний идентификатор.
   * @return externalId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Внешний идентификатор.")
  public UUID getExternalId() {
    return externalId;
  }

  public void setExternalId(UUID externalId) {
    this.externalId = externalId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationDeployFilter configurationDeployFilter = (ConfigurationDeployFilter) o;
    return Objects.equals(this.fromDate, configurationDeployFilter.fromDate) &&
        Objects.equals(this.toDate, configurationDeployFilter.toDate) &&
        Objects.equals(this.packageVersionSubstring, configurationDeployFilter.packageVersionSubstring) &&
        Objects.equals(this.isSuccess, configurationDeployFilter.isSuccess) &&
        Objects.equals(this.authorSubstring, configurationDeployFilter.authorSubstring) &&
        Objects.equals(this.externalId, configurationDeployFilter.externalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromDate, toDate, packageVersionSubstring, isSuccess, authorSubstring, externalId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationDeployFilter {\n");
    
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    packageVersionSubstring: ").append(toIndentedString(packageVersionSubstring)).append("\n");
    sb.append("    isSuccess: ").append(toIndentedString(isSuccess)).append("\n");
    sb.append("    authorSubstring: ").append(toIndentedString(authorSubstring)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

