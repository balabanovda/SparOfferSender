/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.CreatorModel;
import com.example.demo.restclient.model.LoyaltyProgramModel;
import com.example.demo.restclient.model.PartnerViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * View-модель для счётчика.
 */
@ApiModel(description = "View-модель для счётчика.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class CounterViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("uid")
  private UUID uid = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("author")
  private CreatorModel author = null;

  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("partner")
  private PartnerViewModel partner = null;

  /**
   * Gets or Sets targets
   */
  public enum TargetsEnum {
    EVENTDATETIME("EventDateTime"),
    
    SOURCEDATETIME("SourceDateTime"),
    
    PERSON("Person"),
    
    CARD("Card"),
    
    PARTNER("Partner"),
    
    DEVICE("Device"),
    
    MERCHANT("Merchant"),
    
    OAUTHIDENTIFIERINFO("OAuthIdentifierInfo"),
    
    OAUTHACTIVITYTYPE("OAuthActivityType"),
    
    OAUTHOBJECTID("OAuthObjectId"),
    
    OAUTHGROUPID("OAuthGroupId"),
    
    ACCOUNTGROUP("AccountGroup"),
    
    REFUNDEDPURCHASE("RefundedPurchase"),
    
    REFERRAL("Referral"),
    
    PURCHASE("Purchase"),
    
    LEGAL("Legal"),
    
    EVENTDAY("EventDay"),
    
    EVENTMONTH("EventMonth"),
    
    EVENTYEAR("EventYear");

    private String value;

    TargetsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TargetsEnum fromValue(String text) {
      for (TargetsEnum b : TargetsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("targets")
  private List<TargetsEnum> targets = null;

  @JsonProperty("loyaltyProgram")
  private LoyaltyProgramModel loyaltyProgram = null;

  public CounterViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор счётчика.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор счётчика.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CounterViewModel uid(UUID uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Уникальный внешний идентификатор.
   * @return uid
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Уникальный внешний идентификатор.")
  public UUID getUid() {
    return uid;
  }

  public void setUid(UUID uid) {
    this.uid = uid;
  }

  public CounterViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Наименование счётчика.
   * @return name
  **/
  @ApiModelProperty(value = "Наименование счётчика.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CounterViewModel author(CreatorModel author) {
    this.author = author;
    return this;
  }

   /**
   * Автор счетчика.
   * @return author
  **/
  @ApiModelProperty(value = "Автор счетчика.")
  public CreatorModel getAuthor() {
    return author;
  }

  public void setAuthor(CreatorModel author) {
    this.author = author;
  }

  public CounterViewModel creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Дата создания счетчика.
   * @return creationDate
  **/
  @ApiModelProperty(value = "Дата создания счетчика.")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public CounterViewModel partner(PartnerViewModel partner) {
    this.partner = partner;
    return this;
  }

   /**
   * Партнер.
   * @return partner
  **/
  @ApiModelProperty(value = "Партнер.")
  public PartnerViewModel getPartner() {
    return partner;
  }

  public void setPartner(PartnerViewModel partner) {
    this.partner = partner;
  }

  public CounterViewModel targets(List<TargetsEnum> targets) {
    this.targets = targets;
    return this;
  }

  public CounterViewModel addTargetsItem(TargetsEnum targetsItem) {
    if (this.targets == null) {
      this.targets = new ArrayList<>();
    }
    this.targets.add(targetsItem);
    return this;
  }

   /**
   * Список моделей для счётчика.
   * @return targets
  **/
  @ApiModelProperty(value = "Список моделей для счётчика.")
  public List<TargetsEnum> getTargets() {
    return targets;
  }

  public void setTargets(List<TargetsEnum> targets) {
    this.targets = targets;
  }

  public CounterViewModel loyaltyProgram(LoyaltyProgramModel loyaltyProgram) {
    this.loyaltyProgram = loyaltyProgram;
    return this;
  }

   /**
   * Программа лояльности.
   * @return loyaltyProgram
  **/
  @ApiModelProperty(value = "Программа лояльности.")
  public LoyaltyProgramModel getLoyaltyProgram() {
    return loyaltyProgram;
  }

  public void setLoyaltyProgram(LoyaltyProgramModel loyaltyProgram) {
    this.loyaltyProgram = loyaltyProgram;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CounterViewModel counterViewModel = (CounterViewModel) o;
    return Objects.equals(this.id, counterViewModel.id) &&
        Objects.equals(this.uid, counterViewModel.uid) &&
        Objects.equals(this.name, counterViewModel.name) &&
        Objects.equals(this.author, counterViewModel.author) &&
        Objects.equals(this.creationDate, counterViewModel.creationDate) &&
        Objects.equals(this.partner, counterViewModel.partner) &&
        Objects.equals(this.targets, counterViewModel.targets) &&
        Objects.equals(this.loyaltyProgram, counterViewModel.loyaltyProgram);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uid, name, author, creationDate, partner, targets, loyaltyProgram);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CounterViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("    loyaltyProgram: ").append(toIndentedString(loyaltyProgram)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

