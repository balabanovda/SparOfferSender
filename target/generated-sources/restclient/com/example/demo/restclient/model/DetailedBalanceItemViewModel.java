/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.CurrencyInfoModel;
import com.example.demo.restclient.model.DetailedBalanceLifeTimeByPeriodViewModel;
import com.example.demo.restclient.model.DetailedBalanceLifeTimeByTimeViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Элемент детализированного баланса.
 */
@ApiModel(description = "Элемент детализированного баланса.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class DetailedBalanceItemViewModel {
  @JsonProperty("currency")
  private CurrencyInfoModel currency = null;

  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("notActivatedAmount")
  private Double notActivatedAmount = null;

  @JsonProperty("lifeTimesByTime")
  private List<DetailedBalanceLifeTimeByTimeViewModel> lifeTimesByTime = null;

  @JsonProperty("lifeTimesByPeriod")
  private List<DetailedBalanceLifeTimeByPeriodViewModel> lifeTimesByPeriod = null;

  public DetailedBalanceItemViewModel currency(CurrencyInfoModel currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Валюта.
   * @return currency
  **/
  @ApiModelProperty(value = "Валюта.")
  public CurrencyInfoModel getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyInfoModel currency) {
    this.currency = currency;
  }

  public DetailedBalanceItemViewModel amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Сумма доступных бонусов.
   * @return amount
  **/
  @ApiModelProperty(value = "Сумма доступных бонусов.")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public DetailedBalanceItemViewModel notActivatedAmount(Double notActivatedAmount) {
    this.notActivatedAmount = notActivatedAmount;
    return this;
  }

   /**
   * Сумма не активированных бонусов.
   * @return notActivatedAmount
  **/
  @ApiModelProperty(value = "Сумма не активированных бонусов.")
  public Double getNotActivatedAmount() {
    return notActivatedAmount;
  }

  public void setNotActivatedAmount(Double notActivatedAmount) {
    this.notActivatedAmount = notActivatedAmount;
  }

  public DetailedBalanceItemViewModel lifeTimesByTime(List<DetailedBalanceLifeTimeByTimeViewModel> lifeTimesByTime) {
    this.lifeTimesByTime = lifeTimesByTime;
    return this;
  }

  public DetailedBalanceItemViewModel addLifeTimesByTimeItem(DetailedBalanceLifeTimeByTimeViewModel lifeTimesByTimeItem) {
    if (this.lifeTimesByTime == null) {
      this.lifeTimesByTime = new ArrayList<>();
    }
    this.lifeTimesByTime.add(lifeTimesByTimeItem);
    return this;
  }

   /**
   * Время активаций/сгораний.
   * @return lifeTimesByTime
  **/
  @ApiModelProperty(value = "Время активаций/сгораний.")
  public List<DetailedBalanceLifeTimeByTimeViewModel> getLifeTimesByTime() {
    return lifeTimesByTime;
  }

  public void setLifeTimesByTime(List<DetailedBalanceLifeTimeByTimeViewModel> lifeTimesByTime) {
    this.lifeTimesByTime = lifeTimesByTime;
  }

  public DetailedBalanceItemViewModel lifeTimesByPeriod(List<DetailedBalanceLifeTimeByPeriodViewModel> lifeTimesByPeriod) {
    this.lifeTimesByPeriod = lifeTimesByPeriod;
    return this;
  }

  public DetailedBalanceItemViewModel addLifeTimesByPeriodItem(DetailedBalanceLifeTimeByPeriodViewModel lifeTimesByPeriodItem) {
    if (this.lifeTimesByPeriod == null) {
      this.lifeTimesByPeriod = new ArrayList<>();
    }
    this.lifeTimesByPeriod.add(lifeTimesByPeriodItem);
    return this;
  }

   /**
   * Время активаций/сгораний.
   * @return lifeTimesByPeriod
  **/
  @ApiModelProperty(value = "Время активаций/сгораний.")
  public List<DetailedBalanceLifeTimeByPeriodViewModel> getLifeTimesByPeriod() {
    return lifeTimesByPeriod;
  }

  public void setLifeTimesByPeriod(List<DetailedBalanceLifeTimeByPeriodViewModel> lifeTimesByPeriod) {
    this.lifeTimesByPeriod = lifeTimesByPeriod;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedBalanceItemViewModel detailedBalanceItemViewModel = (DetailedBalanceItemViewModel) o;
    return Objects.equals(this.currency, detailedBalanceItemViewModel.currency) &&
        Objects.equals(this.amount, detailedBalanceItemViewModel.amount) &&
        Objects.equals(this.notActivatedAmount, detailedBalanceItemViewModel.notActivatedAmount) &&
        Objects.equals(this.lifeTimesByTime, detailedBalanceItemViewModel.lifeTimesByTime) &&
        Objects.equals(this.lifeTimesByPeriod, detailedBalanceItemViewModel.lifeTimesByPeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, amount, notActivatedAmount, lifeTimesByTime, lifeTimesByPeriod);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedBalanceItemViewModel {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    notActivatedAmount: ").append(toIndentedString(notActivatedAmount)).append("\n");
    sb.append("    lifeTimesByTime: ").append(toIndentedString(lifeTimesByTime)).append("\n");
    sb.append("    lifeTimesByPeriod: ").append(toIndentedString(lifeTimesByPeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

