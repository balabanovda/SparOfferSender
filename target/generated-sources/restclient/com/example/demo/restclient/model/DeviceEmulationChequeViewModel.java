/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.DeviceEmulationChequeLine;
import com.example.demo.restclient.model.DeviceEmulationIdentifierViewModel;
import com.example.demo.restclient.model.DeviceEmulationPaymentViewModel;
import com.example.demo.restclient.model.DeviceEmulationResultStateViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель итогового состояния.
 */
@ApiModel(description = "Модель итогового состояния.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class DeviceEmulationChequeViewModel {
  @JsonProperty("purchaseId")
  private Integer purchaseId = null;

  @JsonProperty("identifier")
  private DeviceEmulationIdentifierViewModel identifier = null;

  @JsonProperty("date")
  private OffsetDateTime date = null;

  @JsonProperty("merchant")
  private String merchant = null;

  @JsonProperty("number")
  private String number = null;

  @JsonProperty("message")
  private String message = null;

  @JsonProperty("totalDiscount")
  private Double totalDiscount = null;

  @JsonProperty("totalCashback")
  private Double totalCashback = null;

  @JsonProperty("totalAmount")
  private Double totalAmount = null;

  @JsonProperty("totalPayed")
  private Double totalPayed = null;

  @JsonProperty("resultStateModel")
  private DeviceEmulationResultStateViewModel resultStateModel = null;

  @JsonProperty("positions")
  private List<DeviceEmulationChequeLine> positions = null;

  @JsonProperty("payments")
  private List<DeviceEmulationPaymentViewModel> payments = null;

  public DeviceEmulationChequeViewModel purchaseId(Integer purchaseId) {
    this.purchaseId = purchaseId;
    return this;
  }

   /**
   * Идентификатор покупки.
   * @return purchaseId
  **/
  @ApiModelProperty(value = "Идентификатор покупки.")
  public Integer getPurchaseId() {
    return purchaseId;
  }

  public void setPurchaseId(Integer purchaseId) {
    this.purchaseId = purchaseId;
  }

  public DeviceEmulationChequeViewModel identifier(DeviceEmulationIdentifierViewModel identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Идентификатор пользователя.
   * @return identifier
  **/
  @ApiModelProperty(value = "Идентификатор пользователя.")
  public DeviceEmulationIdentifierViewModel getIdentifier() {
    return identifier;
  }

  public void setIdentifier(DeviceEmulationIdentifierViewModel identifier) {
    this.identifier = identifier;
  }

  public DeviceEmulationChequeViewModel date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Дата.
   * @return date
  **/
  @ApiModelProperty(value = "Дата.")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public DeviceEmulationChequeViewModel merchant(String merchant) {
    this.merchant = merchant;
    return this;
  }

   /**
   * Магазин.
   * @return merchant
  **/
  @ApiModelProperty(value = "Магазин.")
  public String getMerchant() {
    return merchant;
  }

  public void setMerchant(String merchant) {
    this.merchant = merchant;
  }

  public DeviceEmulationChequeViewModel number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Номер.
   * @return number
  **/
  @ApiModelProperty(value = "Номер.")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public DeviceEmulationChequeViewModel message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Сообщение.
   * @return message
  **/
  @ApiModelProperty(value = "Сообщение.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public DeviceEmulationChequeViewModel totalDiscount(Double totalDiscount) {
    this.totalDiscount = totalDiscount;
    return this;
  }

   /**
   * Итоговая скидка.
   * @return totalDiscount
  **/
  @ApiModelProperty(value = "Итоговая скидка.")
  public Double getTotalDiscount() {
    return totalDiscount;
  }

  public void setTotalDiscount(Double totalDiscount) {
    this.totalDiscount = totalDiscount;
  }

  public DeviceEmulationChequeViewModel totalCashback(Double totalCashback) {
    this.totalCashback = totalCashback;
    return this;
  }

   /**
   * Итоговый бонус.
   * @return totalCashback
  **/
  @ApiModelProperty(value = "Итоговый бонус.")
  public Double getTotalCashback() {
    return totalCashback;
  }

  public void setTotalCashback(Double totalCashback) {
    this.totalCashback = totalCashback;
  }

  public DeviceEmulationChequeViewModel totalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Итоговая сумма.
   * @return totalAmount
  **/
  @ApiModelProperty(value = "Итоговая сумма.")
  public Double getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }

  public DeviceEmulationChequeViewModel totalPayed(Double totalPayed) {
    this.totalPayed = totalPayed;
    return this;
  }

   /**
   * Суммарно оплачено.
   * @return totalPayed
  **/
  @ApiModelProperty(value = "Суммарно оплачено.")
  public Double getTotalPayed() {
    return totalPayed;
  }

  public void setTotalPayed(Double totalPayed) {
    this.totalPayed = totalPayed;
  }

  public DeviceEmulationChequeViewModel resultStateModel(DeviceEmulationResultStateViewModel resultStateModel) {
    this.resultStateModel = resultStateModel;
    return this;
  }

   /**
   * Модель итогового состояния.
   * @return resultStateModel
  **/
  @ApiModelProperty(value = "Модель итогового состояния.")
  public DeviceEmulationResultStateViewModel getResultStateModel() {
    return resultStateModel;
  }

  public void setResultStateModel(DeviceEmulationResultStateViewModel resultStateModel) {
    this.resultStateModel = resultStateModel;
  }

  public DeviceEmulationChequeViewModel positions(List<DeviceEmulationChequeLine> positions) {
    this.positions = positions;
    return this;
  }

  public DeviceEmulationChequeViewModel addPositionsItem(DeviceEmulationChequeLine positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

   /**
   * Чековые позиции.
   * @return positions
  **/
  @ApiModelProperty(value = "Чековые позиции.")
  public List<DeviceEmulationChequeLine> getPositions() {
    return positions;
  }

  public void setPositions(List<DeviceEmulationChequeLine> positions) {
    this.positions = positions;
  }

  public DeviceEmulationChequeViewModel payments(List<DeviceEmulationPaymentViewModel> payments) {
    this.payments = payments;
    return this;
  }

  public DeviceEmulationChequeViewModel addPaymentsItem(DeviceEmulationPaymentViewModel paymentsItem) {
    if (this.payments == null) {
      this.payments = new ArrayList<>();
    }
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Оплаты.
   * @return payments
  **/
  @ApiModelProperty(value = "Оплаты.")
  public List<DeviceEmulationPaymentViewModel> getPayments() {
    return payments;
  }

  public void setPayments(List<DeviceEmulationPaymentViewModel> payments) {
    this.payments = payments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceEmulationChequeViewModel deviceEmulationChequeViewModel = (DeviceEmulationChequeViewModel) o;
    return Objects.equals(this.purchaseId, deviceEmulationChequeViewModel.purchaseId) &&
        Objects.equals(this.identifier, deviceEmulationChequeViewModel.identifier) &&
        Objects.equals(this.date, deviceEmulationChequeViewModel.date) &&
        Objects.equals(this.merchant, deviceEmulationChequeViewModel.merchant) &&
        Objects.equals(this.number, deviceEmulationChequeViewModel.number) &&
        Objects.equals(this.message, deviceEmulationChequeViewModel.message) &&
        Objects.equals(this.totalDiscount, deviceEmulationChequeViewModel.totalDiscount) &&
        Objects.equals(this.totalCashback, deviceEmulationChequeViewModel.totalCashback) &&
        Objects.equals(this.totalAmount, deviceEmulationChequeViewModel.totalAmount) &&
        Objects.equals(this.totalPayed, deviceEmulationChequeViewModel.totalPayed) &&
        Objects.equals(this.resultStateModel, deviceEmulationChequeViewModel.resultStateModel) &&
        Objects.equals(this.positions, deviceEmulationChequeViewModel.positions) &&
        Objects.equals(this.payments, deviceEmulationChequeViewModel.payments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(purchaseId, identifier, date, merchant, number, message, totalDiscount, totalCashback, totalAmount, totalPayed, resultStateModel, positions, payments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceEmulationChequeViewModel {\n");
    
    sb.append("    purchaseId: ").append(toIndentedString(purchaseId)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    totalDiscount: ").append(toIndentedString(totalDiscount)).append("\n");
    sb.append("    totalCashback: ").append(toIndentedString(totalCashback)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    totalPayed: ").append(toIndentedString(totalPayed)).append("\n");
    sb.append("    resultStateModel: ").append(toIndentedString(resultStateModel)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

