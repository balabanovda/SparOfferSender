/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Модель для получения данных конфигурации о возможности выпуска карт.
 */
@ApiModel(description = "Модель для получения данных конфигурации о возможности выпуска карт.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class EmitCardInfoModel {
  /**
   * Статус возможности привязки основной карты.
   */
  public enum MainCardAssigningRequiredStatusEnum {
    NOTASSIGN("NotAssign"),
    
    ASSIGN("Assign"),
    
    ASSIGNOPTIONAL("AssignOptional");

    private String value;

    MainCardAssigningRequiredStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MainCardAssigningRequiredStatusEnum fromValue(String text) {
      for (MainCardAssigningRequiredStatusEnum b : MainCardAssigningRequiredStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("mainCardAssigningRequiredStatus")
  private MainCardAssigningRequiredStatusEnum mainCardAssigningRequiredStatus = null;

  /**
   * Статус привязки виртуальной карты.
   */
  public enum EmitVirtualCardStatusEnum {
    NOTEMIT("NotEmit"),
    
    EMITFORALL("EmitForAll"),
    
    EMITONDEMAND("EmitOnDemand");

    private String value;

    EmitVirtualCardStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EmitVirtualCardStatusEnum fromValue(String text) {
      for (EmitVirtualCardStatusEnum b : EmitVirtualCardStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("emitVirtualCardStatus")
  private EmitVirtualCardStatusEnum emitVirtualCardStatus = null;

  public EmitCardInfoModel mainCardAssigningRequiredStatus(MainCardAssigningRequiredStatusEnum mainCardAssigningRequiredStatus) {
    this.mainCardAssigningRequiredStatus = mainCardAssigningRequiredStatus;
    return this;
  }

   /**
   * Статус возможности привязки основной карты.
   * @return mainCardAssigningRequiredStatus
  **/
  @ApiModelProperty(value = "Статус возможности привязки основной карты.")
  public MainCardAssigningRequiredStatusEnum getMainCardAssigningRequiredStatus() {
    return mainCardAssigningRequiredStatus;
  }

  public void setMainCardAssigningRequiredStatus(MainCardAssigningRequiredStatusEnum mainCardAssigningRequiredStatus) {
    this.mainCardAssigningRequiredStatus = mainCardAssigningRequiredStatus;
  }

  public EmitCardInfoModel emitVirtualCardStatus(EmitVirtualCardStatusEnum emitVirtualCardStatus) {
    this.emitVirtualCardStatus = emitVirtualCardStatus;
    return this;
  }

   /**
   * Статус привязки виртуальной карты.
   * @return emitVirtualCardStatus
  **/
  @ApiModelProperty(value = "Статус привязки виртуальной карты.")
  public EmitVirtualCardStatusEnum getEmitVirtualCardStatus() {
    return emitVirtualCardStatus;
  }

  public void setEmitVirtualCardStatus(EmitVirtualCardStatusEnum emitVirtualCardStatus) {
    this.emitVirtualCardStatus = emitVirtualCardStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmitCardInfoModel emitCardInfoModel = (EmitCardInfoModel) o;
    return Objects.equals(this.mainCardAssigningRequiredStatus, emitCardInfoModel.mainCardAssigningRequiredStatus) &&
        Objects.equals(this.emitVirtualCardStatus, emitCardInfoModel.emitVirtualCardStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mainCardAssigningRequiredStatus, emitVirtualCardStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmitCardInfoModel {\n");
    
    sb.append("    mainCardAssigningRequiredStatus: ").append(toIndentedString(mainCardAssigningRequiredStatus)).append("\n");
    sb.append("    emitVirtualCardStatus: ").append(toIndentedString(emitVirtualCardStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

