/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.ActionDto;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Действие акции \&quot;Любимые товары\&quot;.
 */
@ApiModel(description = "Действие акции \"Любимые товары\".")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class FavoriteGoodsActionDto {
  @JsonProperty("order")
  private Integer order = null;

  @JsonProperty("id")
  private String id = null;

  /**
   * Тип изменения.
   */
  public enum ChangeTypeEnum {
    INCREASECELLSCOUNT("IncreaseCellsCount"),
    
    DECREASECELLSCOUNT("DecreaseCellsCount");

    private String value;

    ChangeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChangeTypeEnum fromValue(String text) {
      for (ChangeTypeEnum b : ChangeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("changeType")
  private ChangeTypeEnum changeType = null;

  @JsonProperty("value")
  private Integer value = null;

  @JsonProperty("attributeId")
  private Integer attributeId = null;

  public FavoriteGoodsActionDto order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Порядковый номер действия в цепочке.
   * @return order
  **/
  @ApiModelProperty(value = "Порядковый номер действия в цепочке.")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

  public FavoriteGoodsActionDto id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id действия в цепочке.
   * @return id
  **/
  @ApiModelProperty(value = "Id действия в цепочке.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FavoriteGoodsActionDto changeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
    return this;
  }

   /**
   * Тип изменения.
   * @return changeType
  **/
  @ApiModelProperty(value = "Тип изменения.")
  public ChangeTypeEnum getChangeType() {
    return changeType;
  }

  public void setChangeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
  }

  public FavoriteGoodsActionDto value(Integer value) {
    this.value = value;
    return this;
  }

   /**
   * Значение.
   * @return value
  **/
  @ApiModelProperty(value = "Значение.")
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }

  public FavoriteGoodsActionDto attributeId(Integer attributeId) {
    this.attributeId = attributeId;
    return this;
  }

   /**
   * Идентификатор атрибута персонального предложения.
   * @return attributeId
  **/
  @ApiModelProperty(value = "Идентификатор атрибута персонального предложения.")
  public Integer getAttributeId() {
    return attributeId;
  }

  public void setAttributeId(Integer attributeId) {
    this.attributeId = attributeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FavoriteGoodsActionDto favoriteGoodsActionDto = (FavoriteGoodsActionDto) o;
    return Objects.equals(this.order, favoriteGoodsActionDto.order) &&
        Objects.equals(this.id, favoriteGoodsActionDto.id) &&
        Objects.equals(this.changeType, favoriteGoodsActionDto.changeType) &&
        Objects.equals(this.value, favoriteGoodsActionDto.value) &&
        Objects.equals(this.attributeId, favoriteGoodsActionDto.attributeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, id, changeType, value, attributeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FavoriteGoodsActionDto {\n");
    
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    attributeId: ").append(toIndentedString(attributeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

