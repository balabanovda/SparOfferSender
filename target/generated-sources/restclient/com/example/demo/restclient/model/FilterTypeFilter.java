/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Фильтр для поиска типов фильтров.
 */
@ApiModel(description = "Фильтр для поиска типов фильтров.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class FilterTypeFilter {
  @JsonProperty("substring")
  private String substring = null;

  /**
   * Режим отображения архивных типов фильтров.
   */
  public enum ShowModeEnum {
    ARCHIVED("Archived"),
    
    NONARCHIVED("NonArchived");

    private String value;

    ShowModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ShowModeEnum fromValue(String text) {
      for (ShowModeEnum b : ShowModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("showMode")
  private ShowModeEnum showMode = null;

  public FilterTypeFilter substring(String substring) {
    this.substring = substring;
    return this;
  }

   /**
   * Подстрока для поиска.
   * @return substring
  **/
  @ApiModelProperty(value = "Подстрока для поиска.")
  public String getSubstring() {
    return substring;
  }

  public void setSubstring(String substring) {
    this.substring = substring;
  }

  public FilterTypeFilter showMode(ShowModeEnum showMode) {
    this.showMode = showMode;
    return this;
  }

   /**
   * Режим отображения архивных типов фильтров.
   * @return showMode
  **/
  @ApiModelProperty(value = "Режим отображения архивных типов фильтров.")
  public ShowModeEnum getShowMode() {
    return showMode;
  }

  public void setShowMode(ShowModeEnum showMode) {
    this.showMode = showMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterTypeFilter filterTypeFilter = (FilterTypeFilter) o;
    return Objects.equals(this.substring, filterTypeFilter.substring) &&
        Objects.equals(this.showMode, filterTypeFilter.showMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(substring, showMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterTypeFilter {\n");
    
    sb.append("    substring: ").append(toIndentedString(substring)).append("\n");
    sb.append("    showMode: ").append(toIndentedString(showMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

