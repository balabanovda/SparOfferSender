/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.PurchaseFilterPeriodViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * View-модель для фиксированного периода в фильтре по покупкам.
 */
@ApiModel(description = "View-модель для фиксированного периода в фильтре по покупкам.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class FixedPurchaseFilterPeriodViewModel {
  /**
   * Операция для даты покупки.
   */
  public enum DateOperationEnum {
    MORE("More"),
    
    LESS("Less"),
    
    EQUALS("Equals"),
    
    BETWEEN("Between"),
    
    MOREOREQUAL("MoreOrEqual"),
    
    LESSOREQUAL("LessOrEqual"),
    
    BETWEENLESSEQUAL("BetweenLessEqual"),
    
    BETWEENMOREEQUAL("BetweenMoreEqual"),
    
    BETWEENEQUAL("BetweenEqual"),
    
    EACH("Each");

    private String value;

    DateOperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DateOperationEnum fromValue(String text) {
      for (DateOperationEnum b : DateOperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("dateOperation")
  private DateOperationEnum dateOperation = null;

  @JsonProperty("dateFirstValue")
  private OffsetDateTime dateFirstValue = null;

  @JsonProperty("dateSecondValue")
  private OffsetDateTime dateSecondValue = null;

  public FixedPurchaseFilterPeriodViewModel dateOperation(DateOperationEnum dateOperation) {
    this.dateOperation = dateOperation;
    return this;
  }

   /**
   * Операция для даты покупки.
   * @return dateOperation
  **/
  @ApiModelProperty(value = "Операция для даты покупки.")
  public DateOperationEnum getDateOperation() {
    return dateOperation;
  }

  public void setDateOperation(DateOperationEnum dateOperation) {
    this.dateOperation = dateOperation;
  }

  public FixedPurchaseFilterPeriodViewModel dateFirstValue(OffsetDateTime dateFirstValue) {
    this.dateFirstValue = dateFirstValue;
    return this;
  }

   /**
   * Первое значение даты покупки.
   * @return dateFirstValue
  **/
  @ApiModelProperty(value = "Первое значение даты покупки.")
  public OffsetDateTime getDateFirstValue() {
    return dateFirstValue;
  }

  public void setDateFirstValue(OffsetDateTime dateFirstValue) {
    this.dateFirstValue = dateFirstValue;
  }

  public FixedPurchaseFilterPeriodViewModel dateSecondValue(OffsetDateTime dateSecondValue) {
    this.dateSecondValue = dateSecondValue;
    return this;
  }

   /**
   * Второе значение даты покупки.
   * @return dateSecondValue
  **/
  @ApiModelProperty(value = "Второе значение даты покупки.")
  public OffsetDateTime getDateSecondValue() {
    return dateSecondValue;
  }

  public void setDateSecondValue(OffsetDateTime dateSecondValue) {
    this.dateSecondValue = dateSecondValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FixedPurchaseFilterPeriodViewModel fixedPurchaseFilterPeriodViewModel = (FixedPurchaseFilterPeriodViewModel) o;
    return Objects.equals(this.dateOperation, fixedPurchaseFilterPeriodViewModel.dateOperation) &&
        Objects.equals(this.dateFirstValue, fixedPurchaseFilterPeriodViewModel.dateFirstValue) &&
        Objects.equals(this.dateSecondValue, fixedPurchaseFilterPeriodViewModel.dateSecondValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateOperation, dateFirstValue, dateSecondValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FixedPurchaseFilterPeriodViewModel {\n");
    
    sb.append("    dateOperation: ").append(toIndentedString(dateOperation)).append("\n");
    sb.append("    dateFirstValue: ").append(toIndentedString(dateFirstValue)).append("\n");
    sb.append("    dateSecondValue: ").append(toIndentedString(dateSecondValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

