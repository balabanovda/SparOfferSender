/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.CatalogAttributeViewModel;
import com.example.demo.restclient.model.GoodsAttributeValueViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Модель фильтра по атрибутам набора группы товаров.
 */
@ApiModel(description = "Модель фильтра по атрибутам набора группы товаров.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class GoodsSetAttributeFilterItemViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("goodsCount")
  private Integer goodsCount = null;

  /**
   * Тип фильтрации.
   */
  public enum FilterTypeEnum {
    INLIST("InList");

    private String value;

    FilterTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FilterTypeEnum fromValue(String text) {
      for (FilterTypeEnum b : FilterTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("filterType")
  private FilterTypeEnum filterType = null;

  @JsonProperty("attribute")
  private CatalogAttributeViewModel attribute = null;

  @JsonProperty("values")
  private List<GoodsAttributeValueViewModel> values = null;

  @JsonProperty("valuesString")
  private String valuesString = null;

  public GoodsSetAttributeFilterItemViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public GoodsSetAttributeFilterItemViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Название.
   * @return name
  **/
  @ApiModelProperty(value = "Название.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GoodsSetAttributeFilterItemViewModel goodsCount(Integer goodsCount) {
    this.goodsCount = goodsCount;
    return this;
  }

   /**
   * Количество товаров в элементе.
   * @return goodsCount
  **/
  @ApiModelProperty(value = "Количество товаров в элементе.")
  public Integer getGoodsCount() {
    return goodsCount;
  }

  public void setGoodsCount(Integer goodsCount) {
    this.goodsCount = goodsCount;
  }

  public GoodsSetAttributeFilterItemViewModel filterType(FilterTypeEnum filterType) {
    this.filterType = filterType;
    return this;
  }

   /**
   * Тип фильтрации.
   * @return filterType
  **/
  @ApiModelProperty(value = "Тип фильтрации.")
  public FilterTypeEnum getFilterType() {
    return filterType;
  }

  public void setFilterType(FilterTypeEnum filterType) {
    this.filterType = filterType;
  }

  public GoodsSetAttributeFilterItemViewModel attribute(CatalogAttributeViewModel attribute) {
    this.attribute = attribute;
    return this;
  }

   /**
   * Атрибут.
   * @return attribute
  **/
  @ApiModelProperty(value = "Атрибут.")
  public CatalogAttributeViewModel getAttribute() {
    return attribute;
  }

  public void setAttribute(CatalogAttributeViewModel attribute) {
    this.attribute = attribute;
  }

  public GoodsSetAttributeFilterItemViewModel values(List<GoodsAttributeValueViewModel> values) {
    this.values = values;
    return this;
  }

  public GoodsSetAttributeFilterItemViewModel addValuesItem(GoodsAttributeValueViewModel valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Значения.
   * @return values
  **/
  @ApiModelProperty(value = "Значения.")
  public List<GoodsAttributeValueViewModel> getValues() {
    return values;
  }

  public void setValues(List<GoodsAttributeValueViewModel> values) {
    this.values = values;
  }

   /**
   * Строка значений.
   * @return valuesString
  **/
  @ApiModelProperty(value = "Строка значений.")
  public String getValuesString() {
    return valuesString;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoodsSetAttributeFilterItemViewModel goodsSetAttributeFilterItemViewModel = (GoodsSetAttributeFilterItemViewModel) o;
    return Objects.equals(this.id, goodsSetAttributeFilterItemViewModel.id) &&
        Objects.equals(this.name, goodsSetAttributeFilterItemViewModel.name) &&
        Objects.equals(this.goodsCount, goodsSetAttributeFilterItemViewModel.goodsCount) &&
        Objects.equals(this.filterType, goodsSetAttributeFilterItemViewModel.filterType) &&
        Objects.equals(this.attribute, goodsSetAttributeFilterItemViewModel.attribute) &&
        Objects.equals(this.values, goodsSetAttributeFilterItemViewModel.values) &&
        Objects.equals(this.valuesString, goodsSetAttributeFilterItemViewModel.valuesString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, goodsCount, filterType, attribute, values, valuesString);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoodsSetAttributeFilterItemViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    goodsCount: ").append(toIndentedString(goodsCount)).append("\n");
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("    attribute: ").append(toIndentedString(attribute)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    valuesString: ").append(toIndentedString(valuesString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

