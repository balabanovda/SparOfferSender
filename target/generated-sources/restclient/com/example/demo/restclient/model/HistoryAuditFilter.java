/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * HistoryAuditFilter
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class HistoryAuditFilter {
  @JsonProperty("dateFrom")
  private OffsetDateTime dateFrom = null;

  @JsonProperty("dateTo")
  private OffsetDateTime dateTo = null;

  @JsonProperty("cardNumber")
  private String cardNumber = null;

  /**
   * Gets or Sets auditTypes
   */
  public enum AuditTypesEnum {
    LOGINSUCCESS("LoginSuccess"),
    
    LOGINWRONGPASSWORD("LoginWrongPassword"),
    
    LOGINBLOCK("LoginBlock"),
    
    CARDBLOCK("CardBlock"),
    
    CARDUNBLOCK("CardUnBlock"),
    
    CHANGEPHONE("ChangePhone"),
    
    REGISTRATIONACCEPTOFFER("RegistrationAcceptOffer"),
    
    REGISTRATIONPERSON("RegistrationPerson"),
    
    ADDUSERACTION("AddUserAction"),
    
    FINISHUSERACTION("FinishUserAction"),
    
    CARDACTIVATED("CardActivated"),
    
    REGISTRATIONANSWERQUESTIONS("RegistrationAnswerQuestions"),
    
    CARDSETPHONE("CardSetPhone"),
    
    ANSWER("Answer"),
    
    REMOVEACCOUNT("RemoveAccount"),
    
    ADDACCOUNT("AddAccount"),
    
    CARDLINK("CardLink"),
    
    CARDUNLINK("CardUnLink"),
    
    CHANGEEMAIL("ChangeEmail"),
    
    RESETPASSWORD("ResetPassword"),
    
    MAILING("Mailing"),
    
    TARGETGROUP("TargetGroup"),
    
    OFFER("Offer"),
    
    CARDDELETE("CardDelete"),
    
    CARDRECOVER("CardRecover"),
    
    AUTHENTICATION("Authentication"),
    
    FILTERS("Filters"),
    
    PAYMENTNOTENOUGHMONEY("PaymentNotEnoughMoney"),
    
    PAYMENTCARDBLOCKED("PaymentCardBlocked"),
    
    CARDISSUANCE("CardIssuance"),
    
    EXTERNALCARDREPLACEMENT("ExternalCardReplacement"),
    
    CARDPAYMENTBLOCK("CardPaymentBlock"),
    
    CARDPAYMENTUNBLOCK("CardPaymentUnBlock"),
    
    RUNCALCULATION("RunCalculation"),
    
    CARDREPLACE("CardReplace"),
    
    CHANGEPASSWORD("ChangePassword"),
    
    ACCOUNTBLOCK("AccountBlock"),
    
    ACCOUNTUNBLOCK("AccountUnBlock"),
    
    SETREFERRER("SetReferrer"),
    
    ADDREFERRAL("AddReferral"),
    
    MODIFICATIONSTATUSSUBSCRIPTIONS("ModificationStatusSubscriptions"),
    
    CONFIRMPURCHASE("ConfirmPurchase"),
    
    CANCELPURCHASE("CancelPurchase"),
    
    REGISTRATIONACCEPTPERSONALDATAPROCESSING("RegistrationAcceptPersonalDataProcessing"),
    
    MOBILEAPPINSTALLED("MobileAppInstalled"),
    
    PRIVATECLUBS("PrivateClubs"),
    
    IDENTIFIERBLOCK("IdentifierBlock"),
    
    IDENTIFIERUNBLOCK("IdentifierUnBlock"),
    
    CARDCATEGORYCHANGED("CardCategoryChanged"),
    
    MANUALSTATUSCHANGE("ManualStatusChange"),
    
    MEATRYADMANUALSTATUSCHANGE("MeatryadManualStatusChange"),
    
    DEREGISTRATION("Deregistration");

    private String value;

    AuditTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuditTypesEnum fromValue(String text) {
      for (AuditTypesEnum b : AuditTypesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("auditTypes")
  private List<AuditTypesEnum> auditTypes = null;

  @JsonProperty("personId")
  private Integer personId = null;

  public HistoryAuditFilter dateFrom(OffsetDateTime dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * Get dateFrom
   * @return dateFrom
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDateFrom() {
    return dateFrom;
  }

  public void setDateFrom(OffsetDateTime dateFrom) {
    this.dateFrom = dateFrom;
  }

  public HistoryAuditFilter dateTo(OffsetDateTime dateTo) {
    this.dateTo = dateTo;
    return this;
  }

   /**
   * Get dateTo
   * @return dateTo
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDateTo() {
    return dateTo;
  }

  public void setDateTo(OffsetDateTime dateTo) {
    this.dateTo = dateTo;
  }

  public HistoryAuditFilter cardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Get cardNumber
   * @return cardNumber
  **/
  @ApiModelProperty(value = "")
  public String getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }

  public HistoryAuditFilter auditTypes(List<AuditTypesEnum> auditTypes) {
    this.auditTypes = auditTypes;
    return this;
  }

  public HistoryAuditFilter addAuditTypesItem(AuditTypesEnum auditTypesItem) {
    if (this.auditTypes == null) {
      this.auditTypes = new ArrayList<>();
    }
    this.auditTypes.add(auditTypesItem);
    return this;
  }

   /**
   * Get auditTypes
   * @return auditTypes
  **/
  @ApiModelProperty(value = "")
  public List<AuditTypesEnum> getAuditTypes() {
    return auditTypes;
  }

  public void setAuditTypes(List<AuditTypesEnum> auditTypes) {
    this.auditTypes = auditTypes;
  }

  public HistoryAuditFilter personId(Integer personId) {
    this.personId = personId;
    return this;
  }

   /**
   * Get personId
   * @return personId
  **/
  @ApiModelProperty(value = "")
  public Integer getPersonId() {
    return personId;
  }

  public void setPersonId(Integer personId) {
    this.personId = personId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryAuditFilter historyAuditFilter = (HistoryAuditFilter) o;
    return Objects.equals(this.dateFrom, historyAuditFilter.dateFrom) &&
        Objects.equals(this.dateTo, historyAuditFilter.dateTo) &&
        Objects.equals(this.cardNumber, historyAuditFilter.cardNumber) &&
        Objects.equals(this.auditTypes, historyAuditFilter.auditTypes) &&
        Objects.equals(this.personId, historyAuditFilter.personId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateFrom, dateTo, cardNumber, auditTypes, personId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryAuditFilter {\n");
    
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    auditTypes: ").append(toIndentedString(auditTypes)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

