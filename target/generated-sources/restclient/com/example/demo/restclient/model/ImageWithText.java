/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.RewardThumbnail;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * Изображение с текстом.
 */
@ApiModel(description = "Изображение с текстом.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class ImageWithText {
  @JsonProperty("header")
  private String header = null;

  @JsonProperty("footer")
  private String footer = null;

  @JsonProperty("imageId")
  private UUID imageId = null;

  public ImageWithText header(String header) {
    this.header = header;
    return this;
  }

   /**
   * Текст над изображением.
   * @return header
  **/
  @ApiModelProperty(value = "Текст над изображением.")
  public String getHeader() {
    return header;
  }

  public void setHeader(String header) {
    this.header = header;
  }

  public ImageWithText footer(String footer) {
    this.footer = footer;
    return this;
  }

   /**
   * Текст под изображением.
   * @return footer
  **/
  @ApiModelProperty(value = "Текст под изображением.")
  public String getFooter() {
    return footer;
  }

  public void setFooter(String footer) {
    this.footer = footer;
  }

  public ImageWithText imageId(UUID imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Id файла с изображением.
   * @return imageId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Id файла с изображением.")
  public UUID getImageId() {
    return imageId;
  }

  public void setImageId(UUID imageId) {
    this.imageId = imageId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageWithText imageWithText = (ImageWithText) o;
    return Objects.equals(this.header, imageWithText.header) &&
        Objects.equals(this.footer, imageWithText.footer) &&
        Objects.equals(this.imageId, imageWithText.imageId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, footer, imageId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageWithText {\n");
    
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

