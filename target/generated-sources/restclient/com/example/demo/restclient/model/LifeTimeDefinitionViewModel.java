/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.LifeTimeDefinitionBaseViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * View модель определения времени жизни бонусов.
 */
@ApiModel(description = "View модель определения времени жизни бонусов.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class LifeTimeDefinitionViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("activationDelay")
  private Integer activationDelay = null;

  @JsonProperty("expirationDelay")
  private Integer expirationDelay = null;

  @JsonProperty("isDeleted")
  private Boolean isDeleted = null;

  /**
   * Тип округления периода активации.
   */
  public enum ActivationPeriodTypeEnum {
    DEFAULT("Default"),
    
    DAYBEGINNING("DayBeginning"),
    
    CERTAINDATE("CertainDate");

    private String value;

    ActivationPeriodTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActivationPeriodTypeEnum fromValue(String text) {
      for (ActivationPeriodTypeEnum b : ActivationPeriodTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("activationPeriodType")
  private ActivationPeriodTypeEnum activationPeriodType = null;

  /**
   * Тип округления периода сгорания.
   */
  public enum ExpirationPeriodTypeEnum {
    DEFAULT("Default"),
    
    DAYBEGINNING("DayBeginning"),
    
    CERTAINDATE("CertainDate");

    private String value;

    ExpirationPeriodTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExpirationPeriodTypeEnum fromValue(String text) {
      for (ExpirationPeriodTypeEnum b : ExpirationPeriodTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("expirationPeriodType")
  private ExpirationPeriodTypeEnum expirationPeriodType = null;

  @JsonProperty("offset")
  private Integer offset = null;

  @JsonProperty("logicalName")
  private String logicalName = null;

  @JsonProperty("certainActivationDate")
  private OffsetDateTime certainActivationDate = null;

  @JsonProperty("certainExpirationDate")
  private OffsetDateTime certainExpirationDate = null;

  @JsonProperty("partnerID")
  private Integer partnerID = null;

  @JsonProperty("partnerName")
  private String partnerName = null;

  public LifeTimeDefinitionViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id определения.
   * @return id
  **/
  @ApiModelProperty(value = "Id определения.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public LifeTimeDefinitionViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Название.
   * @return name
  **/
  @ApiModelProperty(value = "Название.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LifeTimeDefinitionViewModel activationDelay(Integer activationDelay) {
    this.activationDelay = activationDelay;
    return this;
  }

   /**
   * Активация через (в минутах).
   * @return activationDelay
  **/
  @ApiModelProperty(value = "Активация через (в минутах).")
  public Integer getActivationDelay() {
    return activationDelay;
  }

  public void setActivationDelay(Integer activationDelay) {
    this.activationDelay = activationDelay;
  }

  public LifeTimeDefinitionViewModel expirationDelay(Integer expirationDelay) {
    this.expirationDelay = expirationDelay;
    return this;
  }

   /**
   * Отмена через (в минутах).
   * @return expirationDelay
  **/
  @ApiModelProperty(value = "Отмена через (в минутах).")
  public Integer getExpirationDelay() {
    return expirationDelay;
  }

  public void setExpirationDelay(Integer expirationDelay) {
    this.expirationDelay = expirationDelay;
  }

  public LifeTimeDefinitionViewModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Определяет актуально ли определение.
   * @return isDeleted
  **/
  @ApiModelProperty(value = "Определяет актуально ли определение.")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public LifeTimeDefinitionViewModel activationPeriodType(ActivationPeriodTypeEnum activationPeriodType) {
    this.activationPeriodType = activationPeriodType;
    return this;
  }

   /**
   * Тип округления периода активации.
   * @return activationPeriodType
  **/
  @ApiModelProperty(value = "Тип округления периода активации.")
  public ActivationPeriodTypeEnum getActivationPeriodType() {
    return activationPeriodType;
  }

  public void setActivationPeriodType(ActivationPeriodTypeEnum activationPeriodType) {
    this.activationPeriodType = activationPeriodType;
  }

  public LifeTimeDefinitionViewModel expirationPeriodType(ExpirationPeriodTypeEnum expirationPeriodType) {
    this.expirationPeriodType = expirationPeriodType;
    return this;
  }

   /**
   * Тип округления периода сгорания.
   * @return expirationPeriodType
  **/
  @ApiModelProperty(value = "Тип округления периода сгорания.")
  public ExpirationPeriodTypeEnum getExpirationPeriodType() {
    return expirationPeriodType;
  }

  public void setExpirationPeriodType(ExpirationPeriodTypeEnum expirationPeriodType) {
    this.expirationPeriodType = expirationPeriodType;
  }

  public LifeTimeDefinitionViewModel offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Смещение часового пояса относительно UTC.
   * @return offset
  **/
  @ApiModelProperty(value = "Смещение часового пояса относительно UTC.")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public LifeTimeDefinitionViewModel logicalName(String logicalName) {
    this.logicalName = logicalName;
    return this;
  }

   /**
   * Логическое имя.
   * @return logicalName
  **/
  @ApiModelProperty(value = "Логическое имя.")
  public String getLogicalName() {
    return logicalName;
  }

  public void setLogicalName(String logicalName) {
    this.logicalName = logicalName;
  }

  public LifeTimeDefinitionViewModel certainActivationDate(OffsetDateTime certainActivationDate) {
    this.certainActivationDate = certainActivationDate;
    return this;
  }

   /**
   * Точное время активации.
   * @return certainActivationDate
  **/
  @ApiModelProperty(value = "Точное время активации.")
  public OffsetDateTime getCertainActivationDate() {
    return certainActivationDate;
  }

  public void setCertainActivationDate(OffsetDateTime certainActivationDate) {
    this.certainActivationDate = certainActivationDate;
  }

  public LifeTimeDefinitionViewModel certainExpirationDate(OffsetDateTime certainExpirationDate) {
    this.certainExpirationDate = certainExpirationDate;
    return this;
  }

   /**
   * Точное время сгорания.
   * @return certainExpirationDate
  **/
  @ApiModelProperty(value = "Точное время сгорания.")
  public OffsetDateTime getCertainExpirationDate() {
    return certainExpirationDate;
  }

  public void setCertainExpirationDate(OffsetDateTime certainExpirationDate) {
    this.certainExpirationDate = certainExpirationDate;
  }

  public LifeTimeDefinitionViewModel partnerID(Integer partnerID) {
    this.partnerID = partnerID;
    return this;
  }

   /**
   * Ид партнера.
   * @return partnerID
  **/
  @ApiModelProperty(value = "Ид партнера.")
  public Integer getPartnerID() {
    return partnerID;
  }

  public void setPartnerID(Integer partnerID) {
    this.partnerID = partnerID;
  }

  public LifeTimeDefinitionViewModel partnerName(String partnerName) {
    this.partnerName = partnerName;
    return this;
  }

   /**
   * Название партнера.
   * @return partnerName
  **/
  @ApiModelProperty(value = "Название партнера.")
  public String getPartnerName() {
    return partnerName;
  }

  public void setPartnerName(String partnerName) {
    this.partnerName = partnerName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LifeTimeDefinitionViewModel lifeTimeDefinitionViewModel = (LifeTimeDefinitionViewModel) o;
    return Objects.equals(this.id, lifeTimeDefinitionViewModel.id) &&
        Objects.equals(this.name, lifeTimeDefinitionViewModel.name) &&
        Objects.equals(this.activationDelay, lifeTimeDefinitionViewModel.activationDelay) &&
        Objects.equals(this.expirationDelay, lifeTimeDefinitionViewModel.expirationDelay) &&
        Objects.equals(this.isDeleted, lifeTimeDefinitionViewModel.isDeleted) &&
        Objects.equals(this.activationPeriodType, lifeTimeDefinitionViewModel.activationPeriodType) &&
        Objects.equals(this.expirationPeriodType, lifeTimeDefinitionViewModel.expirationPeriodType) &&
        Objects.equals(this.offset, lifeTimeDefinitionViewModel.offset) &&
        Objects.equals(this.logicalName, lifeTimeDefinitionViewModel.logicalName) &&
        Objects.equals(this.certainActivationDate, lifeTimeDefinitionViewModel.certainActivationDate) &&
        Objects.equals(this.certainExpirationDate, lifeTimeDefinitionViewModel.certainExpirationDate) &&
        Objects.equals(this.partnerID, lifeTimeDefinitionViewModel.partnerID) &&
        Objects.equals(this.partnerName, lifeTimeDefinitionViewModel.partnerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, activationDelay, expirationDelay, isDeleted, activationPeriodType, expirationPeriodType, offset, logicalName, certainActivationDate, certainExpirationDate, partnerID, partnerName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LifeTimeDefinitionViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    activationDelay: ").append(toIndentedString(activationDelay)).append("\n");
    sb.append("    expirationDelay: ").append(toIndentedString(expirationDelay)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    activationPeriodType: ").append(toIndentedString(activationPeriodType)).append("\n");
    sb.append("    expirationPeriodType: ").append(toIndentedString(expirationPeriodType)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    logicalName: ").append(toIndentedString(logicalName)).append("\n");
    sb.append("    certainActivationDate: ").append(toIndentedString(certainActivationDate)).append("\n");
    sb.append("    certainExpirationDate: ").append(toIndentedString(certainExpirationDate)).append("\n");
    sb.append("    partnerID: ").append(toIndentedString(partnerID)).append("\n");
    sb.append("    partnerName: ").append(toIndentedString(partnerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

