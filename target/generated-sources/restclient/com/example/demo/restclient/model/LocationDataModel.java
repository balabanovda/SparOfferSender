/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.CityDataModel;
import com.example.demo.restclient.model.RegionDataModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * ViewModel описания места.
 */
@ApiModel(description = "ViewModel описания места.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class LocationDataModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("locationId")
  private UUID locationId = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("latitude")
  private Double latitude = null;

  @JsonProperty("longitude")
  private Double longitude = null;

  @JsonProperty("region")
  private RegionDataModel region = null;

  @JsonProperty("city")
  private CityDataModel city = null;

  @JsonProperty("street")
  private String street = null;

  @JsonProperty("house")
  private String house = null;

  @JsonProperty("building")
  private String building = null;

  @JsonProperty("office")
  private String office = null;

  public LocationDataModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID.
   * @return id
  **/
  @ApiModelProperty(value = "ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public LocationDataModel locationId(UUID locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Идентификатор места.
   * @return locationId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор места.")
  public UUID getLocationId() {
    return locationId;
  }

  public void setLocationId(UUID locationId) {
    this.locationId = locationId;
  }

  public LocationDataModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Описание.
   * @return description
  **/
  @ApiModelProperty(value = "Описание.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public LocationDataModel latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Широта.
   * @return latitude
  **/
  @ApiModelProperty(value = "Широта.")
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  public LocationDataModel longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Долгота.
   * @return longitude
  **/
  @ApiModelProperty(value = "Долгота.")
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }

  public LocationDataModel region(RegionDataModel region) {
    this.region = region;
    return this;
  }

   /**
   * Регион.
   * @return region
  **/
  @ApiModelProperty(value = "Регион.")
  public RegionDataModel getRegion() {
    return region;
  }

  public void setRegion(RegionDataModel region) {
    this.region = region;
  }

  public LocationDataModel city(CityDataModel city) {
    this.city = city;
    return this;
  }

   /**
   * Город.
   * @return city
  **/
  @ApiModelProperty(value = "Город.")
  public CityDataModel getCity() {
    return city;
  }

  public void setCity(CityDataModel city) {
    this.city = city;
  }

  public LocationDataModel street(String street) {
    this.street = street;
    return this;
  }

   /**
   * Улица.
   * @return street
  **/
  @ApiModelProperty(value = "Улица.")
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }

  public LocationDataModel house(String house) {
    this.house = house;
    return this;
  }

   /**
   * Дом.
   * @return house
  **/
  @ApiModelProperty(value = "Дом.")
  public String getHouse() {
    return house;
  }

  public void setHouse(String house) {
    this.house = house;
  }

  public LocationDataModel building(String building) {
    this.building = building;
    return this;
  }

   /**
   * Здание.
   * @return building
  **/
  @ApiModelProperty(value = "Здание.")
  public String getBuilding() {
    return building;
  }

  public void setBuilding(String building) {
    this.building = building;
  }

  public LocationDataModel office(String office) {
    this.office = office;
    return this;
  }

   /**
   * Офис.
   * @return office
  **/
  @ApiModelProperty(value = "Офис.")
  public String getOffice() {
    return office;
  }

  public void setOffice(String office) {
    this.office = office;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationDataModel locationDataModel = (LocationDataModel) o;
    return Objects.equals(this.id, locationDataModel.id) &&
        Objects.equals(this.locationId, locationDataModel.locationId) &&
        Objects.equals(this.description, locationDataModel.description) &&
        Objects.equals(this.latitude, locationDataModel.latitude) &&
        Objects.equals(this.longitude, locationDataModel.longitude) &&
        Objects.equals(this.region, locationDataModel.region) &&
        Objects.equals(this.city, locationDataModel.city) &&
        Objects.equals(this.street, locationDataModel.street) &&
        Objects.equals(this.house, locationDataModel.house) &&
        Objects.equals(this.building, locationDataModel.building) &&
        Objects.equals(this.office, locationDataModel.office);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, locationId, description, latitude, longitude, region, city, street, house, building, office);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationDataModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    house: ").append(toIndentedString(house)).append("\n");
    sb.append("    building: ").append(toIndentedString(building)).append("\n");
    sb.append("    office: ").append(toIndentedString(office)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

