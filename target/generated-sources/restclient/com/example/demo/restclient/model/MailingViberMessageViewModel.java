/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.MailingMessageViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * Модель viber сообщения рассылки.
 */
@ApiModel(description = "Модель viber сообщения рассылки.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class MailingViberMessageViewModel {
  @JsonProperty("text")
  private String text = null;

  @JsonProperty("buttonText")
  private String buttonText = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("imageId")
  private UUID imageId = null;

  public MailingViberMessageViewModel text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Текст.
   * @return text
  **/
  @ApiModelProperty(value = "Текст.")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public MailingViberMessageViewModel buttonText(String buttonText) {
    this.buttonText = buttonText;
    return this;
  }

   /**
   * Текст кнопки.
   * @return buttonText
  **/
  @ApiModelProperty(value = "Текст кнопки.")
  public String getButtonText() {
    return buttonText;
  }

  public void setButtonText(String buttonText) {
    this.buttonText = buttonText;
  }

  public MailingViberMessageViewModel url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL адрес.
   * @return url
  **/
  @ApiModelProperty(value = "URL адрес.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public MailingViberMessageViewModel imageId(UUID imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Идентификатор изображения.
   * @return imageId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Идентификатор изображения.")
  public UUID getImageId() {
    return imageId;
  }

  public void setImageId(UUID imageId) {
    this.imageId = imageId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailingViberMessageViewModel mailingViberMessageViewModel = (MailingViberMessageViewModel) o;
    return Objects.equals(this.text, mailingViberMessageViewModel.text) &&
        Objects.equals(this.buttonText, mailingViberMessageViewModel.buttonText) &&
        Objects.equals(this.url, mailingViberMessageViewModel.url) &&
        Objects.equals(this.imageId, mailingViberMessageViewModel.imageId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, buttonText, url, imageId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailingViberMessageViewModel {\n");
    
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    buttonText: ").append(toIndentedString(buttonText)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

