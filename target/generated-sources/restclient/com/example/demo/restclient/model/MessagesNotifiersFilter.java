/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

/**
 * Фильтр для поиска нотификаторов по сообщениям.
 */
@ApiModel(description = "Фильтр для поиска нотификаторов по сообщениям.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class MessagesNotifiersFilter {
  @JsonProperty("personUid")
  private UUID personUid = null;

  /**
   * Тип нотификатора.
   */
  public enum NotifyTypeEnum {
    DIRECT("Direct"),
    
    SMS("Sms"),
    
    EMAIL("Email"),
    
    PUSH("Push"),
    
    VIBER("Viber"),
    
    SOCIALNETWORKS("SocialNetworks"),
    
    CHATBOT("ChatBot");

    private String value;

    NotifyTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NotifyTypeEnum fromValue(String text) {
      for (NotifyTypeEnum b : NotifyTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("notifyType")
  private NotifyTypeEnum notifyType = null;

  @JsonProperty("substring")
  private String substring = null;

  public MessagesNotifiersFilter personUid(UUID personUid) {
    this.personUid = personUid;
    return this;
  }

   /**
   * Гуид пользователя.
   * @return personUid
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Гуид пользователя.")
  public UUID getPersonUid() {
    return personUid;
  }

  public void setPersonUid(UUID personUid) {
    this.personUid = personUid;
  }

  public MessagesNotifiersFilter notifyType(NotifyTypeEnum notifyType) {
    this.notifyType = notifyType;
    return this;
  }

   /**
   * Тип нотификатора.
   * @return notifyType
  **/
  @ApiModelProperty(value = "Тип нотификатора.")
  public NotifyTypeEnum getNotifyType() {
    return notifyType;
  }

  public void setNotifyType(NotifyTypeEnum notifyType) {
    this.notifyType = notifyType;
  }

  public MessagesNotifiersFilter substring(String substring) {
    this.substring = substring;
    return this;
  }

   /**
   * Подстрока для поиска.
   * @return substring
  **/
  @ApiModelProperty(value = "Подстрока для поиска.")
  public String getSubstring() {
    return substring;
  }

  public void setSubstring(String substring) {
    this.substring = substring;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessagesNotifiersFilter messagesNotifiersFilter = (MessagesNotifiersFilter) o;
    return Objects.equals(this.personUid, messagesNotifiersFilter.personUid) &&
        Objects.equals(this.notifyType, messagesNotifiersFilter.notifyType) &&
        Objects.equals(this.substring, messagesNotifiersFilter.substring);
  }

  @Override
  public int hashCode() {
    return Objects.hash(personUid, notifyType, substring);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessagesNotifiersFilter {\n");
    
    sb.append("    personUid: ").append(toIndentedString(personUid)).append("\n");
    sb.append("    notifyType: ").append(toIndentedString(notifyType)).append("\n");
    sb.append("    substring: ").append(toIndentedString(substring)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

