/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * NotifierInfoModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class NotifierInfoModel {
  @JsonProperty("currentValue")
  private String currentValue = null;

  @JsonProperty("attachDateTime")
  private OffsetDateTime attachDateTime = null;

  /**
   * Gets or Sets attachType
   */
  public enum AttachTypeEnum {
    SITE("Site"),
    
    SMS("Sms"),
    
    OPERATOR("Operator"),
    
    MOBILECLIENT("MobileClient");

    private String value;

    AttachTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttachTypeEnum fromValue(String text) {
      for (AttachTypeEnum b : AttachTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("attachType")
  private AttachTypeEnum attachType = null;

  public NotifierInfoModel currentValue(String currentValue) {
    this.currentValue = currentValue;
    return this;
  }

   /**
   * Get currentValue
   * @return currentValue
  **/
  @ApiModelProperty(value = "")
  public String getCurrentValue() {
    return currentValue;
  }

  public void setCurrentValue(String currentValue) {
    this.currentValue = currentValue;
  }

  public NotifierInfoModel attachDateTime(OffsetDateTime attachDateTime) {
    this.attachDateTime = attachDateTime;
    return this;
  }

   /**
   * Get attachDateTime
   * @return attachDateTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getAttachDateTime() {
    return attachDateTime;
  }

  public void setAttachDateTime(OffsetDateTime attachDateTime) {
    this.attachDateTime = attachDateTime;
  }

  public NotifierInfoModel attachType(AttachTypeEnum attachType) {
    this.attachType = attachType;
    return this;
  }

   /**
   * Get attachType
   * @return attachType
  **/
  @ApiModelProperty(value = "")
  public AttachTypeEnum getAttachType() {
    return attachType;
  }

  public void setAttachType(AttachTypeEnum attachType) {
    this.attachType = attachType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotifierInfoModel notifierInfoModel = (NotifierInfoModel) o;
    return Objects.equals(this.currentValue, notifierInfoModel.currentValue) &&
        Objects.equals(this.attachDateTime, notifierInfoModel.attachDateTime) &&
        Objects.equals(this.attachType, notifierInfoModel.attachType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentValue, attachDateTime, attachType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotifierInfoModel {\n");
    
    sb.append("    currentValue: ").append(toIndentedString(currentValue)).append("\n");
    sb.append("    attachDateTime: ").append(toIndentedString(attachDateTime)).append("\n");
    sb.append("    attachType: ").append(toIndentedString(attachType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

