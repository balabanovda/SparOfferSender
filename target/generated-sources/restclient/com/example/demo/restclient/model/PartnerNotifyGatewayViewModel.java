/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.NotificationGatewayBriefViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Вью модель для шлюзов партнера.
 */
@ApiModel(description = "Вью модель для шлюзов партнера.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class PartnerNotifyGatewayViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("logicalName")
  private String logicalName = null;

  @JsonProperty("partnerId")
  private Integer partnerId = null;

  @JsonProperty("gateway")
  private NotificationGatewayBriefViewModel gateway = null;

  public PartnerNotifyGatewayViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ИД.
   * @return id
  **/
  @ApiModelProperty(value = "ИД.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public PartnerNotifyGatewayViewModel logicalName(String logicalName) {
    this.logicalName = logicalName;
    return this;
  }

   /**
   * Логическое имя.
   * @return logicalName
  **/
  @ApiModelProperty(value = "Логическое имя.")
  public String getLogicalName() {
    return logicalName;
  }

  public void setLogicalName(String logicalName) {
    this.logicalName = logicalName;
  }

  public PartnerNotifyGatewayViewModel partnerId(Integer partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * ID партнера.
   * @return partnerId
  **/
  @ApiModelProperty(value = "ID партнера.")
  public Integer getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(Integer partnerId) {
    this.partnerId = partnerId;
  }

  public PartnerNotifyGatewayViewModel gateway(NotificationGatewayBriefViewModel gateway) {
    this.gateway = gateway;
    return this;
  }

   /**
   * Шлюз.
   * @return gateway
  **/
  @ApiModelProperty(value = "Шлюз.")
  public NotificationGatewayBriefViewModel getGateway() {
    return gateway;
  }

  public void setGateway(NotificationGatewayBriefViewModel gateway) {
    this.gateway = gateway;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartnerNotifyGatewayViewModel partnerNotifyGatewayViewModel = (PartnerNotifyGatewayViewModel) o;
    return Objects.equals(this.id, partnerNotifyGatewayViewModel.id) &&
        Objects.equals(this.logicalName, partnerNotifyGatewayViewModel.logicalName) &&
        Objects.equals(this.partnerId, partnerNotifyGatewayViewModel.partnerId) &&
        Objects.equals(this.gateway, partnerNotifyGatewayViewModel.gateway);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, logicalName, partnerId, gateway);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartnerNotifyGatewayViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    logicalName: ").append(toIndentedString(logicalName)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

