/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.CouponEmissionViewModel;
import com.example.demo.restclient.model.KeyValuePairOfCouponStateAndInt32;
import com.example.demo.restclient.model.LoyaltyProgramInfoViewModel;
import com.example.demo.restclient.model.NumberTemplateViewModel;
import com.example.demo.restclient.model.PartnerViewModel;
import com.example.demo.restclient.model.UserViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * View модель пользовательского купона.
 */
@ApiModel(description = "View модель пользовательского купона.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class PersonCouponEmissionViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("partner")
  private PartnerViewModel partner = null;

  @JsonProperty("isArchived")
  private Boolean isArchived = null;

  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("changeDate")
  private OffsetDateTime changeDate = null;

  @JsonProperty("createdByPerson")
  private UserViewModel createdByPerson = null;

  @JsonProperty("lastEditByPerson")
  private UserViewModel lastEditByPerson = null;

  @JsonProperty("counts")
  private List<KeyValuePairOfCouponStateAndInt32> counts = null;

  @JsonProperty("loyaltyProgram")
  private LoyaltyProgramInfoViewModel loyaltyProgram = null;

  @JsonProperty("count")
  private Integer count = null;

  @JsonProperty("price")
  private Double price = null;

  @JsonProperty("isPublished")
  private Boolean isPublished = null;

  @JsonProperty("numberTemplate")
  private NumberTemplateViewModel numberTemplate = null;

  public PersonCouponEmissionViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор.
   * @return id
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public PersonCouponEmissionViewModel title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Название.
   * @return title
  **/
  @ApiModelProperty(value = "Название.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public PersonCouponEmissionViewModel partner(PartnerViewModel partner) {
    this.partner = partner;
    return this;
  }

   /**
   * Партнер.
   * @return partner
  **/
  @ApiModelProperty(value = "Партнер.")
  public PartnerViewModel getPartner() {
    return partner;
  }

  public void setPartner(PartnerViewModel partner) {
    this.partner = partner;
  }

  public PersonCouponEmissionViewModel isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * Заархивирован ли выпуск.
   * @return isArchived
  **/
  @ApiModelProperty(value = "Заархивирован ли выпуск.")
  public Boolean isIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }

  public PersonCouponEmissionViewModel creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Время создания.
   * @return creationDate
  **/
  @ApiModelProperty(value = "Время создания.")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public PersonCouponEmissionViewModel changeDate(OffsetDateTime changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Время изменения.
   * @return changeDate
  **/
  @ApiModelProperty(value = "Время изменения.")
  public OffsetDateTime getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(OffsetDateTime changeDate) {
    this.changeDate = changeDate;
  }

  public PersonCouponEmissionViewModel createdByPerson(UserViewModel createdByPerson) {
    this.createdByPerson = createdByPerson;
    return this;
  }

   /**
   * Автор.
   * @return createdByPerson
  **/
  @ApiModelProperty(value = "Автор.")
  public UserViewModel getCreatedByPerson() {
    return createdByPerson;
  }

  public void setCreatedByPerson(UserViewModel createdByPerson) {
    this.createdByPerson = createdByPerson;
  }

  public PersonCouponEmissionViewModel lastEditByPerson(UserViewModel lastEditByPerson) {
    this.lastEditByPerson = lastEditByPerson;
    return this;
  }

   /**
   * Последний редактор.
   * @return lastEditByPerson
  **/
  @ApiModelProperty(value = "Последний редактор.")
  public UserViewModel getLastEditByPerson() {
    return lastEditByPerson;
  }

  public void setLastEditByPerson(UserViewModel lastEditByPerson) {
    this.lastEditByPerson = lastEditByPerson;
  }

  public PersonCouponEmissionViewModel counts(List<KeyValuePairOfCouponStateAndInt32> counts) {
    this.counts = counts;
    return this;
  }

  public PersonCouponEmissionViewModel addCountsItem(KeyValuePairOfCouponStateAndInt32 countsItem) {
    if (this.counts == null) {
      this.counts = new ArrayList<>();
    }
    this.counts.add(countsItem);
    return this;
  }

   /**
   * Количество купонов в эмиссии в разрезе состояний.
   * @return counts
  **/
  @ApiModelProperty(value = "Количество купонов в эмиссии в разрезе состояний.")
  public List<KeyValuePairOfCouponStateAndInt32> getCounts() {
    return counts;
  }

  public void setCounts(List<KeyValuePairOfCouponStateAndInt32> counts) {
    this.counts = counts;
  }

  public PersonCouponEmissionViewModel loyaltyProgram(LoyaltyProgramInfoViewModel loyaltyProgram) {
    this.loyaltyProgram = loyaltyProgram;
    return this;
  }

   /**
   * Программа лояльности.
   * @return loyaltyProgram
  **/
  @ApiModelProperty(value = "Программа лояльности.")
  public LoyaltyProgramInfoViewModel getLoyaltyProgram() {
    return loyaltyProgram;
  }

  public void setLoyaltyProgram(LoyaltyProgramInfoViewModel loyaltyProgram) {
    this.loyaltyProgram = loyaltyProgram;
  }

  public PersonCouponEmissionViewModel count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Количество купонов.
   * @return count
  **/
  @ApiModelProperty(value = "Количество купонов.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public PersonCouponEmissionViewModel price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Стоимость купона в бонусах.
   * @return price
  **/
  @ApiModelProperty(value = "Стоимость купона в бонусах.")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public PersonCouponEmissionViewModel isPublished(Boolean isPublished) {
    this.isPublished = isPublished;
    return this;
  }

   /**
   * Признак публикации в каталоге (витрине).
   * @return isPublished
  **/
  @ApiModelProperty(value = "Признак публикации в каталоге (витрине).")
  public Boolean isIsPublished() {
    return isPublished;
  }

  public void setIsPublished(Boolean isPublished) {
    this.isPublished = isPublished;
  }

  public PersonCouponEmissionViewModel numberTemplate(NumberTemplateViewModel numberTemplate) {
    this.numberTemplate = numberTemplate;
    return this;
  }

   /**
   * Шаблон для формата номера купона.
   * @return numberTemplate
  **/
  @ApiModelProperty(value = "Шаблон для формата номера купона.")
  public NumberTemplateViewModel getNumberTemplate() {
    return numberTemplate;
  }

  public void setNumberTemplate(NumberTemplateViewModel numberTemplate) {
    this.numberTemplate = numberTemplate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonCouponEmissionViewModel personCouponEmissionViewModel = (PersonCouponEmissionViewModel) o;
    return Objects.equals(this.id, personCouponEmissionViewModel.id) &&
        Objects.equals(this.title, personCouponEmissionViewModel.title) &&
        Objects.equals(this.partner, personCouponEmissionViewModel.partner) &&
        Objects.equals(this.isArchived, personCouponEmissionViewModel.isArchived) &&
        Objects.equals(this.creationDate, personCouponEmissionViewModel.creationDate) &&
        Objects.equals(this.changeDate, personCouponEmissionViewModel.changeDate) &&
        Objects.equals(this.createdByPerson, personCouponEmissionViewModel.createdByPerson) &&
        Objects.equals(this.lastEditByPerson, personCouponEmissionViewModel.lastEditByPerson) &&
        Objects.equals(this.counts, personCouponEmissionViewModel.counts) &&
        Objects.equals(this.loyaltyProgram, personCouponEmissionViewModel.loyaltyProgram) &&
        Objects.equals(this.count, personCouponEmissionViewModel.count) &&
        Objects.equals(this.price, personCouponEmissionViewModel.price) &&
        Objects.equals(this.isPublished, personCouponEmissionViewModel.isPublished) &&
        Objects.equals(this.numberTemplate, personCouponEmissionViewModel.numberTemplate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, partner, isArchived, creationDate, changeDate, createdByPerson, lastEditByPerson, counts, loyaltyProgram, count, price, isPublished, numberTemplate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonCouponEmissionViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    createdByPerson: ").append(toIndentedString(createdByPerson)).append("\n");
    sb.append("    lastEditByPerson: ").append(toIndentedString(lastEditByPerson)).append("\n");
    sb.append("    counts: ").append(toIndentedString(counts)).append("\n");
    sb.append("    loyaltyProgram: ").append(toIndentedString(loyaltyProgram)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    isPublished: ").append(toIndentedString(isPublished)).append("\n");
    sb.append("    numberTemplate: ").append(toIndentedString(numberTemplate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

