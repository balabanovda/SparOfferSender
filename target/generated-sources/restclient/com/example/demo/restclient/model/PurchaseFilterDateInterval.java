/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Даты покупок в плавающем периоде.
 */
@ApiModel(description = "Даты покупок в плавающем периоде.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class PurchaseFilterDateInterval {
  /**
   * Уточнение границ.
   */
  public enum RoundTypeEnum {
    NONE("None"),
    
    BEGIN("Begin"),
    
    END("End");

    private String value;

    RoundTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoundTypeEnum fromValue(String text) {
      for (RoundTypeEnum b : RoundTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("roundType")
  private RoundTypeEnum roundType = null;

  /**
   * Единица времени.
   */
  public enum TimeUnitEnum {
    MINUTE("Minute"),
    
    HOUR("Hour"),
    
    DAY("Day"),
    
    WEEK("Week"),
    
    MONTH("Month"),
    
    YEAR("Year");

    private String value;

    TimeUnitEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimeUnitEnum fromValue(String text) {
      for (TimeUnitEnum b : TimeUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("timeUnit")
  private TimeUnitEnum timeUnit = null;

  @JsonProperty("duration")
  private Integer duration = null;

  public PurchaseFilterDateInterval roundType(RoundTypeEnum roundType) {
    this.roundType = roundType;
    return this;
  }

   /**
   * Уточнение границ.
   * @return roundType
  **/
  @ApiModelProperty(value = "Уточнение границ.")
  public RoundTypeEnum getRoundType() {
    return roundType;
  }

  public void setRoundType(RoundTypeEnum roundType) {
    this.roundType = roundType;
  }

  public PurchaseFilterDateInterval timeUnit(TimeUnitEnum timeUnit) {
    this.timeUnit = timeUnit;
    return this;
  }

   /**
   * Единица времени.
   * @return timeUnit
  **/
  @ApiModelProperty(value = "Единица времени.")
  public TimeUnitEnum getTimeUnit() {
    return timeUnit;
  }

  public void setTimeUnit(TimeUnitEnum timeUnit) {
    this.timeUnit = timeUnit;
  }

  public PurchaseFilterDateInterval duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Продолжительность периода в единицах времени.
   * @return duration
  **/
  @ApiModelProperty(value = "Продолжительность периода в единицах времени.")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseFilterDateInterval purchaseFilterDateInterval = (PurchaseFilterDateInterval) o;
    return Objects.equals(this.roundType, purchaseFilterDateInterval.roundType) &&
        Objects.equals(this.timeUnit, purchaseFilterDateInterval.timeUnit) &&
        Objects.equals(this.duration, purchaseFilterDateInterval.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roundType, timeUnit, duration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseFilterDateInterval {\n");
    
    sb.append("    roundType: ").append(toIndentedString(roundType)).append("\n");
    sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

