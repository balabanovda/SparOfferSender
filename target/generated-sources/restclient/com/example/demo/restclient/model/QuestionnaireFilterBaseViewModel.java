/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.demo.restclient.model.FilterViewModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * QuestionnaireFilterBaseViewModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class QuestionnaireFilterBaseViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("isDeletedFilterType")
  private Boolean isDeletedFilterType = null;

  @JsonProperty("questionId")
  private Integer questionId = null;

  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    MORE("More"),
    
    LESS("Less"),
    
    EQUALS("Equals"),
    
    BETWEEN("Between"),
    
    MOREOREQUAL("MoreOrEqual"),
    
    LESSOREQUAL("LessOrEqual"),
    
    BETWEENLESSEQUAL("BetweenLessEqual"),
    
    BETWEENMOREEQUAL("BetweenMoreEqual"),
    
    BETWEENEQUAL("BetweenEqual"),
    
    EACH("Each");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("firstIntValue")
  private Integer firstIntValue = null;

  @JsonProperty("secondIntValue")
  private Integer secondIntValue = null;

  @JsonProperty("firstDoubleValue")
  private Double firstDoubleValue = null;

  @JsonProperty("secondDoubleValue")
  private Double secondDoubleValue = null;

  @JsonProperty("firstDateValue")
  private OffsetDateTime firstDateValue = null;

  @JsonProperty("secondDateValue")
  private OffsetDateTime secondDateValue = null;

  @JsonProperty("stringValue")
  private String stringValue = null;

  @JsonProperty("fixedAnswerIds")
  private List<Integer> fixedAnswerIds = null;

  @JsonProperty("fixedAnswerNames")
  private List<String> fixedAnswerNames = null;

  @JsonProperty("boolValue")
  private Boolean boolValue = null;

  /**
   * Gets or Sets questionType
   */
  public enum QuestionTypeEnum {
    STRING("String"),
    
    SELECT("Select"),
    
    DATE("Date"),
    
    CHECK("Check"),
    
    INT("Int"),
    
    DOUBLE("Double");

    private String value;

    QuestionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QuestionTypeEnum fromValue(String text) {
      for (QuestionTypeEnum b : QuestionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("questionType")
  private QuestionTypeEnum questionType = null;

  public QuestionnaireFilterBaseViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public QuestionnaireFilterBaseViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public QuestionnaireFilterBaseViewModel isDeletedFilterType(Boolean isDeletedFilterType) {
    this.isDeletedFilterType = isDeletedFilterType;
    return this;
  }

   /**
   * Get isDeletedFilterType
   * @return isDeletedFilterType
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDeletedFilterType() {
    return isDeletedFilterType;
  }

  public void setIsDeletedFilterType(Boolean isDeletedFilterType) {
    this.isDeletedFilterType = isDeletedFilterType;
  }

  public QuestionnaireFilterBaseViewModel questionId(Integer questionId) {
    this.questionId = questionId;
    return this;
  }

   /**
   * Get questionId
   * @return questionId
  **/
  @ApiModelProperty(value = "")
  public Integer getQuestionId() {
    return questionId;
  }

  public void setQuestionId(Integer questionId) {
    this.questionId = questionId;
  }

  public QuestionnaireFilterBaseViewModel operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public QuestionnaireFilterBaseViewModel firstIntValue(Integer firstIntValue) {
    this.firstIntValue = firstIntValue;
    return this;
  }

   /**
   * Get firstIntValue
   * @return firstIntValue
  **/
  @ApiModelProperty(value = "")
  public Integer getFirstIntValue() {
    return firstIntValue;
  }

  public void setFirstIntValue(Integer firstIntValue) {
    this.firstIntValue = firstIntValue;
  }

  public QuestionnaireFilterBaseViewModel secondIntValue(Integer secondIntValue) {
    this.secondIntValue = secondIntValue;
    return this;
  }

   /**
   * Get secondIntValue
   * @return secondIntValue
  **/
  @ApiModelProperty(value = "")
  public Integer getSecondIntValue() {
    return secondIntValue;
  }

  public void setSecondIntValue(Integer secondIntValue) {
    this.secondIntValue = secondIntValue;
  }

  public QuestionnaireFilterBaseViewModel firstDoubleValue(Double firstDoubleValue) {
    this.firstDoubleValue = firstDoubleValue;
    return this;
  }

   /**
   * Get firstDoubleValue
   * @return firstDoubleValue
  **/
  @ApiModelProperty(value = "")
  public Double getFirstDoubleValue() {
    return firstDoubleValue;
  }

  public void setFirstDoubleValue(Double firstDoubleValue) {
    this.firstDoubleValue = firstDoubleValue;
  }

  public QuestionnaireFilterBaseViewModel secondDoubleValue(Double secondDoubleValue) {
    this.secondDoubleValue = secondDoubleValue;
    return this;
  }

   /**
   * Get secondDoubleValue
   * @return secondDoubleValue
  **/
  @ApiModelProperty(value = "")
  public Double getSecondDoubleValue() {
    return secondDoubleValue;
  }

  public void setSecondDoubleValue(Double secondDoubleValue) {
    this.secondDoubleValue = secondDoubleValue;
  }

  public QuestionnaireFilterBaseViewModel firstDateValue(OffsetDateTime firstDateValue) {
    this.firstDateValue = firstDateValue;
    return this;
  }

   /**
   * Get firstDateValue
   * @return firstDateValue
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getFirstDateValue() {
    return firstDateValue;
  }

  public void setFirstDateValue(OffsetDateTime firstDateValue) {
    this.firstDateValue = firstDateValue;
  }

  public QuestionnaireFilterBaseViewModel secondDateValue(OffsetDateTime secondDateValue) {
    this.secondDateValue = secondDateValue;
    return this;
  }

   /**
   * Get secondDateValue
   * @return secondDateValue
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getSecondDateValue() {
    return secondDateValue;
  }

  public void setSecondDateValue(OffsetDateTime secondDateValue) {
    this.secondDateValue = secondDateValue;
  }

  public QuestionnaireFilterBaseViewModel stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

   /**
   * Get stringValue
   * @return stringValue
  **/
  @ApiModelProperty(value = "")
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }

  public QuestionnaireFilterBaseViewModel fixedAnswerIds(List<Integer> fixedAnswerIds) {
    this.fixedAnswerIds = fixedAnswerIds;
    return this;
  }

  public QuestionnaireFilterBaseViewModel addFixedAnswerIdsItem(Integer fixedAnswerIdsItem) {
    if (this.fixedAnswerIds == null) {
      this.fixedAnswerIds = new ArrayList<>();
    }
    this.fixedAnswerIds.add(fixedAnswerIdsItem);
    return this;
  }

   /**
   * Get fixedAnswerIds
   * @return fixedAnswerIds
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getFixedAnswerIds() {
    return fixedAnswerIds;
  }

  public void setFixedAnswerIds(List<Integer> fixedAnswerIds) {
    this.fixedAnswerIds = fixedAnswerIds;
  }

  public QuestionnaireFilterBaseViewModel fixedAnswerNames(List<String> fixedAnswerNames) {
    this.fixedAnswerNames = fixedAnswerNames;
    return this;
  }

  public QuestionnaireFilterBaseViewModel addFixedAnswerNamesItem(String fixedAnswerNamesItem) {
    if (this.fixedAnswerNames == null) {
      this.fixedAnswerNames = new ArrayList<>();
    }
    this.fixedAnswerNames.add(fixedAnswerNamesItem);
    return this;
  }

   /**
   * Get fixedAnswerNames
   * @return fixedAnswerNames
  **/
  @ApiModelProperty(value = "")
  public List<String> getFixedAnswerNames() {
    return fixedAnswerNames;
  }

  public void setFixedAnswerNames(List<String> fixedAnswerNames) {
    this.fixedAnswerNames = fixedAnswerNames;
  }

  public QuestionnaireFilterBaseViewModel boolValue(Boolean boolValue) {
    this.boolValue = boolValue;
    return this;
  }

   /**
   * Get boolValue
   * @return boolValue
  **/
  @ApiModelProperty(value = "")
  public Boolean isBoolValue() {
    return boolValue;
  }

  public void setBoolValue(Boolean boolValue) {
    this.boolValue = boolValue;
  }

  public QuestionnaireFilterBaseViewModel questionType(QuestionTypeEnum questionType) {
    this.questionType = questionType;
    return this;
  }

   /**
   * Get questionType
   * @return questionType
  **/
  @ApiModelProperty(value = "")
  public QuestionTypeEnum getQuestionType() {
    return questionType;
  }

  public void setQuestionType(QuestionTypeEnum questionType) {
    this.questionType = questionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuestionnaireFilterBaseViewModel questionnaireFilterBaseViewModel = (QuestionnaireFilterBaseViewModel) o;
    return Objects.equals(this.id, questionnaireFilterBaseViewModel.id) &&
        Objects.equals(this.name, questionnaireFilterBaseViewModel.name) &&
        Objects.equals(this.isDeletedFilterType, questionnaireFilterBaseViewModel.isDeletedFilterType) &&
        Objects.equals(this.questionId, questionnaireFilterBaseViewModel.questionId) &&
        Objects.equals(this.operation, questionnaireFilterBaseViewModel.operation) &&
        Objects.equals(this.firstIntValue, questionnaireFilterBaseViewModel.firstIntValue) &&
        Objects.equals(this.secondIntValue, questionnaireFilterBaseViewModel.secondIntValue) &&
        Objects.equals(this.firstDoubleValue, questionnaireFilterBaseViewModel.firstDoubleValue) &&
        Objects.equals(this.secondDoubleValue, questionnaireFilterBaseViewModel.secondDoubleValue) &&
        Objects.equals(this.firstDateValue, questionnaireFilterBaseViewModel.firstDateValue) &&
        Objects.equals(this.secondDateValue, questionnaireFilterBaseViewModel.secondDateValue) &&
        Objects.equals(this.stringValue, questionnaireFilterBaseViewModel.stringValue) &&
        Objects.equals(this.fixedAnswerIds, questionnaireFilterBaseViewModel.fixedAnswerIds) &&
        Objects.equals(this.fixedAnswerNames, questionnaireFilterBaseViewModel.fixedAnswerNames) &&
        Objects.equals(this.boolValue, questionnaireFilterBaseViewModel.boolValue) &&
        Objects.equals(this.questionType, questionnaireFilterBaseViewModel.questionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, isDeletedFilterType, questionId, operation, firstIntValue, secondIntValue, firstDoubleValue, secondDoubleValue, firstDateValue, secondDateValue, stringValue, fixedAnswerIds, fixedAnswerNames, boolValue, questionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuestionnaireFilterBaseViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isDeletedFilterType: ").append(toIndentedString(isDeletedFilterType)).append("\n");
    sb.append("    questionId: ").append(toIndentedString(questionId)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    firstIntValue: ").append(toIndentedString(firstIntValue)).append("\n");
    sb.append("    secondIntValue: ").append(toIndentedString(secondIntValue)).append("\n");
    sb.append("    firstDoubleValue: ").append(toIndentedString(firstDoubleValue)).append("\n");
    sb.append("    secondDoubleValue: ").append(toIndentedString(secondDoubleValue)).append("\n");
    sb.append("    firstDateValue: ").append(toIndentedString(firstDateValue)).append("\n");
    sb.append("    secondDateValue: ").append(toIndentedString(secondDateValue)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    fixedAnswerIds: ").append(toIndentedString(fixedAnswerIds)).append("\n");
    sb.append("    fixedAnswerNames: ").append(toIndentedString(fixedAnswerNames)).append("\n");
    sb.append("    boolValue: ").append(toIndentedString(boolValue)).append("\n");
    sb.append("    questionType: ").append(toIndentedString(questionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

