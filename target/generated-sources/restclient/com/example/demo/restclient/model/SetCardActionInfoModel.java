/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Информация о возможности прикрепления физ. карты.
 */
@ApiModel(description = "Информация о возможности прикрепления физ. карты.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class SetCardActionInfoModel {
  @JsonProperty("maxCountOfMainCardsForUser")
  private Integer maxCountOfMainCardsForUser = null;

  @JsonProperty("currentCountOfMainCards")
  private Integer currentCountOfMainCards = null;

  @JsonProperty("isCardSetAllowed")
  private Boolean isCardSetAllowed = null;

  public SetCardActionInfoModel maxCountOfMainCardsForUser(Integer maxCountOfMainCardsForUser) {
    this.maxCountOfMainCardsForUser = maxCountOfMainCardsForUser;
    return this;
  }

   /**
   * Максимально возможное количество физ. карт, которое может иметь пользователь.
   * @return maxCountOfMainCardsForUser
  **/
  @ApiModelProperty(value = "Максимально возможное количество физ. карт, которое может иметь пользователь.")
  public Integer getMaxCountOfMainCardsForUser() {
    return maxCountOfMainCardsForUser;
  }

  public void setMaxCountOfMainCardsForUser(Integer maxCountOfMainCardsForUser) {
    this.maxCountOfMainCardsForUser = maxCountOfMainCardsForUser;
  }

  public SetCardActionInfoModel currentCountOfMainCards(Integer currentCountOfMainCards) {
    this.currentCountOfMainCards = currentCountOfMainCards;
    return this;
  }

   /**
   * Текущее число физ. карт пользователя.
   * @return currentCountOfMainCards
  **/
  @ApiModelProperty(value = "Текущее число физ. карт пользователя.")
  public Integer getCurrentCountOfMainCards() {
    return currentCountOfMainCards;
  }

  public void setCurrentCountOfMainCards(Integer currentCountOfMainCards) {
    this.currentCountOfMainCards = currentCountOfMainCards;
  }

  public SetCardActionInfoModel isCardSetAllowed(Boolean isCardSetAllowed) {
    this.isCardSetAllowed = isCardSetAllowed;
    return this;
  }

   /**
   * Признак возможности привязки физ. карты.
   * @return isCardSetAllowed
  **/
  @ApiModelProperty(value = "Признак возможности привязки физ. карты.")
  public Boolean isIsCardSetAllowed() {
    return isCardSetAllowed;
  }

  public void setIsCardSetAllowed(Boolean isCardSetAllowed) {
    this.isCardSetAllowed = isCardSetAllowed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetCardActionInfoModel setCardActionInfoModel = (SetCardActionInfoModel) o;
    return Objects.equals(this.maxCountOfMainCardsForUser, setCardActionInfoModel.maxCountOfMainCardsForUser) &&
        Objects.equals(this.currentCountOfMainCards, setCardActionInfoModel.currentCountOfMainCards) &&
        Objects.equals(this.isCardSetAllowed, setCardActionInfoModel.isCardSetAllowed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxCountOfMainCardsForUser, currentCountOfMainCards, isCardSetAllowed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetCardActionInfoModel {\n");
    
    sb.append("    maxCountOfMainCardsForUser: ").append(toIndentedString(maxCountOfMainCardsForUser)).append("\n");
    sb.append("    currentCountOfMainCards: ").append(toIndentedString(currentCountOfMainCards)).append("\n");
    sb.append("    isCardSetAllowed: ").append(toIndentedString(isCardSetAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

