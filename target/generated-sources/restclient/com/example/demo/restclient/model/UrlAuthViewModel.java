/*
 * Loymax.SystemApi
 * Loymax version: 2020.1.1.55071
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.demo.restclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Модель представления URL-адреса с авторизацией.
 */
@ApiModel(description = "Модель представления URL-адреса с авторизацией.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-25T13:30:11.810+03:00")
public class UrlAuthViewModel {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("url")
  private String url = null;

  /**
   * Тип аутентификации.
   */
  public enum AuthTypeEnum {
    STANDARD("Standard");

    private String value;

    AuthTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuthTypeEnum fromValue(String text) {
      for (AuthTypeEnum b : AuthTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("authType")
  private AuthTypeEnum authType = null;

  @JsonProperty("login")
  private String login = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("cert")
  private String cert = null;

  @JsonProperty("identifier")
  private String identifier = null;

  public UrlAuthViewModel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID.
   * @return id
  **/
  @ApiModelProperty(value = "ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UrlAuthViewModel url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url.
   * @return url
  **/
  @ApiModelProperty(value = "Url.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public UrlAuthViewModel authType(AuthTypeEnum authType) {
    this.authType = authType;
    return this;
  }

   /**
   * Тип аутентификации.
   * @return authType
  **/
  @ApiModelProperty(value = "Тип аутентификации.")
  public AuthTypeEnum getAuthType() {
    return authType;
  }

  public void setAuthType(AuthTypeEnum authType) {
    this.authType = authType;
  }

  public UrlAuthViewModel login(String login) {
    this.login = login;
    return this;
  }

   /**
   * Логин.
   * @return login
  **/
  @ApiModelProperty(value = "Логин.")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public UrlAuthViewModel password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Пароль.
   * @return password
  **/
  @ApiModelProperty(value = "Пароль.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public UrlAuthViewModel cert(String cert) {
    this.cert = cert;
    return this;
  }

   /**
   * Сертификат.
   * @return cert
  **/
  @ApiModelProperty(value = "Сертификат.")
  public String getCert() {
    return cert;
  }

  public void setCert(String cert) {
    this.cert = cert;
  }

  public UrlAuthViewModel identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Идентификатор.
   * @return identifier
  **/
  @ApiModelProperty(value = "Идентификатор.")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UrlAuthViewModel urlAuthViewModel = (UrlAuthViewModel) o;
    return Objects.equals(this.id, urlAuthViewModel.id) &&
        Objects.equals(this.url, urlAuthViewModel.url) &&
        Objects.equals(this.authType, urlAuthViewModel.authType) &&
        Objects.equals(this.login, urlAuthViewModel.login) &&
        Objects.equals(this.password, urlAuthViewModel.password) &&
        Objects.equals(this.cert, urlAuthViewModel.cert) &&
        Objects.equals(this.identifier, urlAuthViewModel.identifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, authType, login, password, cert, identifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UrlAuthViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    cert: ").append(toIndentedString(cert)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

